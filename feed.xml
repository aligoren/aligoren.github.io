<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.4.0">Jekyll</generator><link href="https://aligoren.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://aligoren.com/" rel="alternate" type="text/html" /><updated>2017-02-17T22:08:41+03:00</updated><id>https://aligoren.com/</id><title>Ali GÖREN...</title><subtitle>.NET, SQL, Python, Açık Kaynak</subtitle><author><name>Ali GÖREN</name></author><entry><title>JavaScript Currency Formatting</title><link href="https://aligoren.com/javascript-currency-formatting" rel="alternate" type="text/html" title="JavaScript Currency Formatting" /><published>2017-02-17T21:00:00+03:00</published><updated>2017-02-17T21:00:00+03:00</updated><id>https://aligoren.com/javascript-currency-formatting</id><content type="html" xml:base="https://aligoren.com/javascript-currency-formatting">&lt;p&gt;Hi. I needed to Turkish currency formatting. I asked stackoverflow community.&lt;/p&gt;

&lt;p&gt;They advice me the Numeral.js library. I think it’s a useful library. I asked myself. Why do I need a library? I didn’t need jQuery or any other library.&lt;/p&gt;

&lt;p&gt;We can use &lt;a href=&quot;https://developer.mozilla.org/tr/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat&quot;&gt;Intl.NumberFormat&lt;/a&gt;. It’s also simple to use.&lt;/p&gt;

&lt;h2 id=&quot;how-we-use&quot;&gt;How we use?&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var price = 1500
var currency_symbol = &quot;₺&quot;

var formattedOutput = new Intl.NumberFormat('tr-TR', {
    style: 'currency',
    currency: 'TRY',
    minimumFractionDigits: 2,
  });
  
return formattedOutput.format(price).replace(currency_symbol, '')
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We replaced currency symbol because we needed only price value.&lt;/p&gt;

&lt;h3 id=&quot;options&quot;&gt;Options:&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;- style: Formatting type
- currency: Which country's currency?
- minimumFractionDigits: Decimal setting
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;See jsFiddle for example: &lt;a href=&quot;https://jsfiddle.net/aligoren/qLgw02f0/&quot;&gt;https://jsfiddle.net/aligoren/qLgw02f0/&lt;/a&gt;&lt;/p&gt;</content><author><name>Ali GÖREN</name></author><summary>Hi. I needed to Turkish currency formatting. I asked stackoverflow community.</summary></entry><entry><title>How to Get Current View Name in Ionic Framework</title><link href="https://aligoren.com/ionic-get-view-name" rel="alternate" type="text/html" title="How to Get Current View Name in Ionic Framework" /><published>2017-01-29T22:54:00+03:00</published><updated>2017-01-29T22:54:00+03:00</updated><id>https://aligoren.com/ionic-get-view-name</id><content type="html" xml:base="https://aligoren.com/ionic-get-view-name">&lt;p&gt;Hi. I needed current view name to dynamic css changing in ionic framework. I’ve tried &lt;code&gt;document.URL&lt;/code&gt; but it’s not worked.
Do not use &lt;code&gt;document.URL&lt;/code&gt; or others because you don’t need.&lt;/p&gt;

&lt;p&gt;Ionic’s &lt;code&gt;$state&lt;/code&gt; &lt;strong&gt;(actually angular’s $state)&lt;/strong&gt; has &lt;code&gt;current.name&lt;/code&gt; property.&lt;/p&gt;

&lt;h2 id=&quot;for-example&quot;&gt;For Example:&lt;/h2&gt;

&lt;p&gt;I do not recommend but just example :)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// shopCtrl.js

if($state.current.name == 'intro') {
	$(&quot;.nav-bar&quot;).css('display', 'none')
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yes! it worked.&lt;/p&gt;</content><author><name>Ali GÖREN</name></author><summary>Hi. I needed current view name to dynamic css changing in ionic framework. I’ve tried document.URL but it’s not worked.
Do not use document.URL or others because you don’t need.</summary></entry><entry><title>JavaScript Console ile Debug İşlemleri</title><link href="https://aligoren.com/javascript-console-ile-debug-islemleri" rel="alternate" type="text/html" title="JavaScript Console ile Debug İşlemleri" /><published>2017-01-22T22:54:00+03:00</published><updated>2017-01-22T22:54:00+03:00</updated><id>https://aligoren.com/javascript-console-ile-debug-islemleri</id><content type="html" xml:base="https://aligoren.com/javascript-console-ile-debug-islemleri">&lt;p&gt;Selamlar. Front-end geliştiricilerin çok iyi bildiği bir konu console’dur. Bütün dillerde yapılabildiği gibi Javascript üzerinde de debug işlemleri yapılabilir.&lt;/p&gt;

&lt;p&gt;Aslında debug işlemleri, programlamanın vazgeçilmez bir parçasıdır. Çoğu yazılımcı zamanının bir bölümünü bug ve sorunları düzeltmek amacıyla harcamıştır.&lt;/p&gt;

&lt;p&gt;Bu yazıda JavaScript &lt;code&gt;console&lt;/code&gt; nesnesi ile debug işlemlerine dair ufak tefek ipuçları paylaşacağım. Bu basit bi tanıtım olacaktır. Daha derinlemesine bilgi için bahsi geçen yöntemlere göz atmanız daha iyi olacaktır.&lt;/p&gt;

&lt;h2 id=&quot;assert-İşlemi&quot;&gt;Assert İşlemi&lt;/h2&gt;

&lt;p&gt;Bu işlem içim &lt;code&gt;console.assert()&lt;/code&gt; kullanmalısınız. &lt;strong&gt;assert()&lt;/strong&gt; fonksiyonu mutlaka boolean türünden bir değer almalıdır. Aşağıdaki örnek tam da buna uygundur:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/assert_js.png&quot; alt=&quot;/images/posts/assert_js.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;trace-İşlemi&quot;&gt;Trace İşlemi&lt;/h2&gt;

&lt;p&gt;Javascript console’unda log bilgilerini ve bu bilgiler sonucu ortaya çıkan değerleri almak için çokca yöntem mevcuttur. Bunlardan birisi &lt;code&gt;console.trace()&lt;/code&gt; olmakta.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/trace_js.png&quot; alt=&quot;/images/posts/trace_js.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Yukarıdaki işlem size aslında bir adet stack trace döndürecektir.&lt;/p&gt;

&lt;h2 id=&quot;tablolar&quot;&gt;Tablolar&lt;/h2&gt;

&lt;p&gt;Evet javascript console’u tablolara da izin vermektedir. Şaşırtıcı gibi ama olmasın :). Bu işlemi &lt;code&gt;console.table()&lt;/code&gt; ile yaparız. Tabi bu işlem Object ve array türünden değeri bize sunar. Ayrıca bir de hoş bir tabloyu da önümüze getirir.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.table(
	[
		{
			dil: 'PHP', uzanti: '.php' 
		}, 
		{
			dil: 'Javascript', uzanti: '.js'
		}
	]
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/table_js.png&quot; alt=&quot;/images/posts/table_js.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;log-tutma&quot;&gt;Log Tutma&lt;/h2&gt;

&lt;p&gt;Javascript ile log mesajları oluşturabilirsiniz. Aslında full stack ya da front-end olun fark etmez mutlaka console’da değer döndürmek zorunda kalmışsınızdır. Çünkü bir alert asla ve asla size direkt bilgileri sunmaz.&lt;/p&gt;

&lt;p&gt;Bu açıdan bakarsak console’un bize sunduğu loglar bizim için çok değerlidir. Yeri gelmişken kendi hazırladığım &lt;a href=&quot;https://github.com/aligoren/ColorLog.js&quot;&gt;ColorLog.js&lt;/a&gt; kütüphanesini kullanabilirsiniz. Log mesajlarını renkli olarak alırsınız.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info(&quot;Bilgi Mesajı&quot;);
console.warn(&quot;Uyarı Mesajı&quot;);
console.error(&quot;Hata Mesajı&quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki log fonksiyonları ile işimizi görecek şekilde mesajlar üretebiliriz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/log_js.png&quot; alt=&quot;/images/posts/log_js.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;timerlar&quot;&gt;Timer’lar&lt;/h2&gt;

&lt;p&gt;Zaman tutmak bazen önemlidir. Örneğin bir for döngüsünün ne kadar sürede tamamlanacağının bilgisini almak gibi basit bir işlem şöyle gerçekleştirilir.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.time(&quot;zamanTut&quot;);
for(i = 0; i &amp;lt; 100; i++) {
	// işlemler
}
console.timeEnd(&quot;zamanTut&quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/timer_js.png&quot; alt=&quot;/images/posts/timer_js.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;monitör-etme&quot;&gt;Monitör Etme&lt;/h2&gt;

&lt;p&gt;Bazen fonksiyonları izlemek isteyebilirsiniz ya da bazı hareketlerin monitörlenmesini isteyebilirsiniz. O zamanlarda iki tür fonksiyon mevcuttur. İlki;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;monitor() Fonksiyonu&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bu fonksiyonla bir başka fonksiyonu izlemeniz mümkündür. Örnek;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/monitor_js.png&quot; alt=&quot;/images/posts/monitor_js.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;monitorEvents() Fonksiyonu&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bu fonksiyonla event’lar monitör edilebilir. Bu event’ları zaten hepimiz biliyoruz. Örneğin bu event’lar arasında click yer alıyor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/monitorEvent_js.png&quot; alt=&quot;/images/posts/monitorEvent_js.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;b id=&quot;f1&quot;&gt;Alıntı&lt;/b&gt;: Carlos Cuesta &lt;a href=&quot;https://carloscuesta.me/blog/debugging-with-the-javascript-console/&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;</content><author><name>Ali GÖREN</name></author><summary>Selamlar. Front-end geliştiricilerin çok iyi bildiği bir konu console’dur. Bütün dillerde yapılabildiği gibi Javascript üzerinde de debug işlemleri yapılabilir.</summary></entry><entry><title>PHP’de Anonim Fonksiyonlar</title><link href="https://aligoren.com/phpde-anonim-fonksiyonlar-nedir" rel="alternate" type="text/html" title="PHP'de Anonim Fonksiyonlar" /><published>2017-01-15T15:10:00+03:00</published><updated>2017-01-15T15:10:00+03:00</updated><id>https://aligoren.com/phpde-anonim-fonksiyonlar-nedir</id><content type="html" xml:base="https://aligoren.com/phpde-anonim-fonksiyonlar-nedir">&lt;p&gt;Selamlar. Bu yazıda size closure yani anonim fonksiyonları göstereceğim. Öğrenme aşamasından önce yani sadece ilk bakışta kafamı karıştırmıştı. Ama zor değilmiş.&lt;/p&gt;

&lt;p&gt;Şimdi elimizde bir nesne var diyelim. Bu nesnenin bir instance’ı yani örneğini oluşturdunuz ve 
bu oluşturulan instance’lara ait methodları kullanarak yeni bir instance oluşturabileceğinizi düşünün daha önce düşündünüz mü bilmiyorum.&lt;/p&gt;

&lt;h3 style=&quot;color:red&quot;&gt;Yalnız Değilsiniz!&lt;/h3&gt;

&lt;p&gt;Eğer hayır diyorsanız yalnız olmadığınıza inancım tam. Size reflection ve closure kavramlarının nasıl kullanılacağını göstermek için bu yazıyı yazdım.&lt;/p&gt;

&lt;p&gt;Öncelikle closure ya da anonym functions olarak karşımıza çıkar bu kavram. Onu bilelim. PHP konu olduğu için belirtmek gerekiyor ki 5.3 sürümünden itibaren closure’ları kullanabiliriz. Yanılmıyorsam günümüzde desteklemeyen pek az yer vardır.&lt;/p&gt;

&lt;p&gt;Zaten bu closure kavramını araştırsanız internette bir sürü kaynak bulabilirsiniz. Ben bu yazıyı yazmadan önce baya baya yazanlar olmuştur gerek Türkçe gerekse İngilizce dilinde mevcuttur yani. Çok uzatmayayım.&lt;/p&gt;

&lt;h3 style=&quot;color:red;&quot;&gt;İsimsiz&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/bourne.jpg&quot; alt=&quot;/images/posts/bourne.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;İsimsiz denilince aklıma Jason Bourne gelir. Bilmiyorum Bourne serisini izlediniz mi ama kendisi kimliksiz aslında adı olmayan kafasının içinde kaybolan bir abimiz. Ama  merak etmeyin bu anonim fonksiyonlar öyle aksiyon dolu bir şey değil.&lt;/p&gt;

&lt;p&gt;Anonim fonksiyonlar dediğime göre bu fonksiyonların nasıl fonksiyonlar olacağını adlarından anlamış olmalısınız. Anonim fonksiyonlar. Eğer &lt;strong&gt;isme sahip olmayan fonksiyon&lt;/strong&gt; tanımı aklınıza geliyorsa doğru düşünmüşsünüz. Basit bir örneği şöyle size gösterebilirim.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;$isimsiz = function() {
	echo 'Merhaba';
};

$isimsiz(); // Çıktısı Merhaba;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kodu dikkatli incelersiniz fonksiyona herhangi bir isim verilmedi ancak oluşturulduğu anda &lt;code&gt;$isimsiz&lt;/code&gt; isimli bir değişkene atamasını yaptık. Yani normal bir değişken oluşturma işlemini yaptınız sonuna noktalı virgülünü de koydunuz. Tek farkı değişkene atanan şey direkt bir &lt;strong&gt;value&lt;/strong&gt; yani &lt;strong&gt;değer&lt;/strong&gt; değil. Bir fonksiyon. Bu kısmı da uzun uzun yazmayayım. Sadece bu fonksiyonları çağırırken başlarına dollar sign yani &lt;strong&gt;$&lt;/strong&gt; koymanız gerektiğini unutmayın.&lt;/p&gt;

&lt;p&gt;Bu fonksiyonların bir başka metoda parameter olarak da geçilebileceğini unutmayın. Basit bir başka örnek vereyim bu da fonksiyona, anonim bir fonksiyon eklenebilmesine dair olsun:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;function benim_fonksiyonum($anonim_fonksiyon) {
	return $anonim_fonksiyon();
}

benim_fonksiyonum(function() {
	echo 'Fonksiyon içinde fonksiyon mu olur? Oluyor işte';
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki yönteme eğer frameworklere aşinaysanız ya da onları incelediyseniz denk gelmişsinizdir. Kısacası böyle de kullanabilirsiniz. Ben bu yöntemi kullanarak şöyle basit bir repo olışturdum:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/aligoren/Request&quot;&gt;https://github.com/aligoren/Request&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Readme dosyasını incelerseniz aslında anlattığım şeyin ne gibi noktalarda kullanılabileceğini de anlamış olursunuz. Yazıyı çok uzatmak istemiyorum ancak bu konuda &lt;a href=&quot;http://php.net/manual/tr/class.reflectionmethod.php&quot;&gt;ReflectionMethod&lt;/a&gt; sınıfını iyi incelemenizi öneririm. Bu sayede direkt olarak closure kullanımını da deneyimlemiş olursunuz.&lt;/p&gt;

&lt;p&gt;Umarım faydalı olmuştur.&lt;/p&gt;</content><author><name>Ali GÖREN</name></author><summary>Selamlar. Bu yazıda size closure yani anonim fonksiyonları göstereceğim. Öğrenme aşamasından önce yani sadece ilk bakışta kafamı karıştırmıştı. Ama zor değilmiş.</summary></entry><entry><title>Disable or Enable HTML Element with JavaScript</title><link href="https://aligoren.com/disable-html-element-with-javascript" rel="alternate" type="text/html" title="Disable or Enable HTML Element with JavaScript" /><published>2017-01-08T15:10:00+03:00</published><updated>2017-01-08T15:10:00+03:00</updated><id>https://aligoren.com/disable-html-element-with-javascript</id><content type="html" xml:base="https://aligoren.com/disable-html-element-with-javascript">&lt;p&gt;Hi. I needed to make the HTML elements enabled or disable.&lt;/p&gt;

&lt;p&gt;When I try with VanillaJS I wrote this code:&lt;/p&gt;

&lt;h2 style=&quot;color: red;&quot;&gt;VanillaJS Way&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;JS Code&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function disableOrEnableBtn() {
    var isDisabled = document.getElementById(&quot;myBtn&quot;).disabled;
    if(isDisabled) {
      document.getElementById(&quot;myBtn&quot;).disabled = false;
    } else {
      document.getElementById(&quot;myBtn&quot;).disabled = true;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;HTML Code&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;button id=&quot;myBtn&quot;&amp;gt;Button&amp;lt;/button&amp;gt;

&amp;lt;button onclick=&quot;disableBtn();&quot;&amp;gt;Change Button Status&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;See VanillaJS Example &lt;a href=&quot;https://jsfiddle.net/aligoren/pqa6xw51/&quot;&gt;https://jsfiddle.net/aligoren/pqa6xw51/&lt;/a&gt;&lt;/p&gt;

&lt;h2 style=&quot;color: red;&quot;&gt;jQuery Way&lt;/h2&gt;

&lt;p&gt;You can also use jQuery. This code is very basic:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JS Code&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;$.disableBtn = function() {
	$('#myBtn').prop(&quot;disabled&quot;, (_, val) =&amp;gt; !val);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;HTML Code&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;button id=&quot;myBtn&quot;&amp;gt;Button&amp;lt;/button&amp;gt;

&amp;lt;button onclick=&quot;$.disableBtn();&quot;&amp;gt;Change Button Status&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;See jQuery Example &lt;a href=&quot;https://jsfiddle.net/aligoren/n14pzh5g/&quot;&gt;https://jsfiddle.net/aligoren/n14pzh5g/&lt;/a&gt;&lt;/p&gt;

&lt;h2 style=&quot;color: red;&quot;&gt;AngularJS Way&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;body ng-app=&quot;&quot;&amp;gt;
  &amp;lt;label&amp;gt;Change Button Status: &amp;lt;input type=&quot;checkbox&quot; ng-model=&quot;checked&quot;&amp;gt;&amp;lt;/label&amp;gt;&amp;lt;br/&amp;gt;
  &amp;lt;button ng-model=&quot;button&quot; ng-disabled=&quot;checked&quot;&amp;gt;Button&amp;lt;/button&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;See Example &lt;a href=&quot;https://jsfiddle.net/aligoren/6nby94kj/&quot;&gt;https://jsfiddle.net/aligoren/6nby94kj/&lt;/a&gt;&lt;/p&gt;</content><author><name>Ali GÖREN</name></author><summary>Hi. I needed to make the HTML elements enabled or disable.</summary></entry><entry><title>jQuery ile Dinamik İşlemler</title><link href="https://aligoren.com/jquery-ile-dinamik-islemler" rel="alternate" type="text/html" title="jQuery ile Dinamik İşlemler" /><published>2016-12-31T15:50:00+03:00</published><updated>2016-12-31T15:50:00+03:00</updated><id>https://aligoren.com/jquery-ile-dinamik-islemler</id><content type="html" xml:base="https://aligoren.com/jquery-ile-dinamik-islemler">&lt;p&gt;Selam. Bu yazının içeriğini Tayfun Erbilen’in soru-cevap platformu olarak açtığı UzmanCevap üzerinde yer alan bir 
&lt;a href=&quot;http://uzmancevap.org/soru/7644/jquery-kosulu-renklendirme&quot;&gt;sorudan&lt;/a&gt; çıkarıyorum.&lt;/p&gt;

&lt;p&gt;Sorun şu. Bir arkadaşımız HTML tablo oluşturmuş. Muhtemelen endüstriyel bir sistem var. Bu sistemde kapasitelerin ölçümünü yapıyor.
Kapasitesi belli bir alanın üzerinde olana da renk vermek istiyor. Ama burada işlemin jQuery ile nasıl yapılacağı ile ilgileniyor.
Normalde bunu back-end kısımda sorguyu çekerken de halledebileceğinizi söylemem gerekiyor.&lt;/p&gt;

&lt;p&gt;Sorunun özüne dönersek ilk satırda bir adet robot bulunmakta. Bu robota dair üç adet kapasite birimi bulunmakta.
Arkadaşımız diyor ki kapasitesi 12’yi geçen hücrenin arkaplanı kırmızı renk olsun. Aslında kendisi zaten bir adet hücreyi yapmış.
Fakat o tüm hücrelerin hesaplanmasını ve aslında tüm satırların da bu hesaba dahil olmasını istiyor.&lt;/p&gt;

&lt;p&gt;Öncelikle basit olarak tablomuzu şöyle size aktarayım kodları da yer alsın:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;table&amp;gt;
  &amp;lt;thead&amp;gt;
    &amp;lt;th&amp;gt;Ad&amp;lt;/th&amp;gt;
    &amp;lt;th&amp;gt;Kapasite&amp;lt;/th&amp;gt;
    &amp;lt;th&amp;gt;Kapasite 2&amp;lt;/th&amp;gt;
    &amp;lt;th&amp;gt;Kapasite 3&amp;lt;/th&amp;gt;
  &amp;lt;/thead&amp;gt;
  &amp;lt;tbody&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;Robot1&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;13&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;12&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;11&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;Robot2&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;13&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;13&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;13&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;Robot3&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;4&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;18&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;21&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;Robot4&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;5&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;21&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;11&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
  &amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;#Tablo Örnek&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/robot_table.png&quot; alt=&quot;/images/posts/robot_table.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Neyse bu tabloda belli başlı alanlar kurallı olarak renklendirilmeli. Arkadaşımızın kuralı 12’den büyük olanların arkaplanı kırmızı olsun şeklinde.
Ben tüm hücrelere class vererek tek bir noktanın kontrolünün sağlanmasını istedim. Her bir satırda bulunan her bir hücrenin kontrolünü de sağlayarak bu işlemi tamamlayalım.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;#jQuery Kodu&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;$(&quot;table&quot;).ready(function() {
  	$(this).find(&quot;tr td.kapasite&quot;).each(function() {
    	if(parseInt($(this).text()) &amp;gt; 12) {
      	$(this).css(&quot;background-color&quot;, &quot;red&quot;)
      }
    })
    
  })
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki kodla tablo hazır olduğu anda hazır olan tabloda dolaşıyoruz. Öncelikle o tabloda tr yani satırı yakalıyoruz.
Ardından o satırda yer alan hücreyi dolaşıyoruz tabi bunu yaparken ana şartıız ise class’ı &lt;strong&gt;kapasite&lt;/strong&gt; olanı dolaşıyoruz.
Tabloda 50 satır varsa 50 satırı ve hücrelerini dolaşacak kısacası. Bu işlemi &lt;code&gt;each()&lt;/code&gt; fonksiyonu ile yapıyoruz.&lt;/p&gt;

&lt;p&gt;Daha sonra ilk dolaşılan satırdaki ilk hücrede yer alan değerin text’ini int türüne parse edip arkadaşımızın istediği koşuldan büyük mü kontrol ediyoruz.
Zaten sonrası ise o hücreye yeni bir CSS atamak. Aynı işlemi buton için de yapabiliriz. Yani butona tıklayınca bu işlem gerçekleşmeli.
Tabii bu işlemde bu sefer değer inputtan gelecek.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;$(&quot;button&quot;).on(&quot;click&quot;, function() {
      $(&quot;table&quot;).ready(function() {
      var kapasite = $(this).find(&quot;tr td.kapasite&quot;).each(function() {
      	$(this).css(&quot;background-color&quot;, &quot;&quot;)
        if(parseInt($(this).text()) &amp;gt; parseInt($(&quot;[name='txtSayi']&quot;).val())) {
          $(this).css(&quot;background-color&quot;, &quot;red&quot;)
        }
      })

    })
  })
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;jsfiddle-Üzerinde-Örnek&quot;&gt;JSFiddle Üzerinde Örnek&lt;/h2&gt;

&lt;script async=&quot;&quot; src=&quot;//jsfiddle.net/cc6ded5w/1/embed/&quot;&gt;&lt;/script&gt;

&lt;p&gt;Evet işlem bu kadar.&lt;/p&gt;</content><author><name>Ali GÖREN</name></author><summary>Selam. Bu yazının içeriğini Tayfun Erbilen’in soru-cevap platformu olarak açtığı UzmanCevap üzerinde yer alan bir 
sorudan çıkarıyorum.</summary></entry><entry><title>PHP ile Base URL Almak</title><link href="https://aligoren.com/php-ile-base-url-almak" rel="alternate" type="text/html" title="PHP ile Base URL Almak" /><published>2016-12-31T15:50:00+03:00</published><updated>2016-12-31T15:50:00+03:00</updated><id>https://aligoren.com/php-ile-base-url-almak</id><content type="html" xml:base="https://aligoren.com/php-ile-base-url-almak">&lt;p&gt;Selamlar. Ufak tefek PHP projeleri ile mevcut bilgimi daha yukarı taşımayı hedefliyorum. Tabi her projede yaşanabilmesi muhtemel bazı sorunları ben de yaşadım. Bu sorunlardan birisi de base url sorunu.&lt;/p&gt;

&lt;p&gt;Soruna dair cevabı Stackoverflow üzerinde arıyordum. Bir başlığa denk &lt;a href=&quot;http://stackoverflow.com/questions/2820723/how-to-get-base-url-with-php/41407858&quot;&gt;geldikten&lt;/a&gt; sonra oturup kodunu kendim yazmalıyım dedim.&lt;/p&gt;

&lt;p&gt;Sorun şu normalde &lt;code&gt;http://localhost&lt;/code&gt; adresi bizim base_url adresimiz fakat proje bir alt klasörde yer alıyorsa o zaman sıkıntılar çıkabiliyor. Çünkü &lt;code&gt;http://localhost/proje&lt;/code&gt; böyle bir adrese sahip olabilirsiniz ve dahası bu proje yolunda çalışırken htaccess kullanarak diğer sayfaları sanki bir klasörmüş gibi gösterebilirsiniz. Bu nedenden dolayı da mutlak url’yi yakalamakta sorun yaşayabiliyorsunuz. Bunun birden fazla çözüm yöntemi var. Öncelikle en basit olanını yapalım:&lt;/p&gt;

&lt;h2 id=&quot;Çözüm-1&quot;&gt;Çözüm 1:&lt;/h2&gt;

&lt;p&gt;Bu yöntemde, base_url methodu tanımlanır ve o yönteme statik url verilir:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;function base_url() {
	return 'http://localhost/proje';
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;Çözüm-2&quot;&gt;Çözüm 2:&lt;/h2&gt;

&lt;p&gt;Bu yöntemde biraz programlama beceriniz önemli aslında. Ben trait kullandım, çünkü bu kod şu anki projemin bi parçası. Multiple olarak extends işlemi yapamadığım için 5.4 ile gelen traitleri kullanmaya karar verdim.&lt;/p&gt;

&lt;h3 id=&quot;gereksinimler&quot;&gt;Gereksinimler:&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;- Gezindiğimiz alan adı: $_SERVER['SERVER_NAME'];
- Şu anda bulunduğumuz sayaf: $_SERVER['REQUEST_URI'];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bu işlemde mevcut bulunduğumuz sayfayı PHP’nin &lt;code&gt;str_replace()&lt;/code&gt; fonksiyonunu kullanarak temizleyeceğiz. Zaten düz root ise hiçbir şey görünmeyecek. Yok farklı URL’lerde isek o zaman kalan kısım görülecektir. Örneğin şöyle:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;/*
http://localhost =&amp;gt; return &quot;&quot;
http://localhost/proje =&amp;gt; return &quot;/proje&quot;
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki gibi bir temizleme işlemi sonrası yapılması gereken PHP’nin &lt;code&gt;explode()&lt;/code&gt; fonksiyonunu slash ile kullanarak slashtan sonra gelen ilk değeri almak. Yani şöyle düşünelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;/*
/proje
/proje/abc/
/proje/a/b/c/d/e/f/g
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;İlk satırdaki proje değerini almak zaten sıkıntılı değil ama bulunduğunuz sayfa 3. satırdaki gibi ise bir problemimiz var demektir. Bu yüzden explode ile böldüklerimizin ilkini alıyoruz. Bu genelde projenin root dizinidir.&lt;/p&gt;

&lt;p&gt;Dizinin altındaki dizinlere maalesef bir çözümüm yok, o durumlarda artık manuel olarak ilk yöntemi denemelisiniz. Neyse bu işlem sonrasında ise dönen array türü değerin 1. indexini çağırıyoruz.&lt;/p&gt;

&lt;p&gt;Bu projemizin root olarak görünen klasörüdür. Yani &lt;code&gt;/proje/a/b/c/d/e/f/g&lt;/code&gt; gibi bir adresten sadece &lt;strong&gt;proje&lt;/strong&gt; değerini alıyoruz. Ve ilk değerin başına tekrar bir slash ekliyoruz Son olarak dönen değer &lt;em&gt;”/”&lt;/em&gt; ya da &lt;em&gt;“/proje_kok_dizini”&lt;/em&gt; şeklinde oluyor. Aslında senaryo olarak size bu işlemin nasıl yapacağını söylediğime göre kodlaması da basit anlamda kafanızda canlandı. Yine de kodlarını paylaşayım:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;url.php&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;trait URL {
    private $url = '';
    private $current_url = '';
    public $get = '';

    function __construct()
    {
        $this-&amp;gt;url = $_SERVER['SERVER_NAME'];
        $this-&amp;gt;current_url = $_SERVER['REQUEST_URI'];

        $clean_server = str_replace('', $this-&amp;gt;url, $this-&amp;gt;current_url);
        $clean_server = explode('/', $clean_server);

        $this-&amp;gt;get = array('base_url' =&amp;gt; &quot;/&quot;.$clean_server[1]);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;index.php&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;require_once 'url.php'

class Home
{
    use URL;
}

$h = new Home();

// Bu satır HTML kodları içermektedir.
// O yüzden üst kısımda PHP taglerini kapatmalısınız.

&amp;lt;a href=&quot;&amp;lt;?=$h-&amp;gt;get['base_url']?&amp;gt;&quot;&amp;gt;Base&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bu yazıyı Stackoverflow’da verdiğim &lt;a href=&quot;http://stackoverflow.com/a/41407858/3821823&quot;&gt;şu&lt;/a&gt; cevaptan esinlenerek oluşturdum&lt;/p&gt;</content><author><name>Ali GÖREN</name></author><summary>Selamlar. Ufak tefek PHP projeleri ile mevcut bilgimi daha yukarı taşımayı hedefliyorum. Tabi her projede yaşanabilmesi muhtemel bazı sorunları ben de yaşadım. Bu sorunlardan birisi de base url sorunu.</summary></entry><entry><title>Atıştırmalık MongoDB Yazısı - 2</title><link href="https://aligoren.com/atistirmalik-mongodb-yazisi-2" rel="alternate" type="text/html" title="Atıştırmalık MongoDB Yazısı - 2" /><published>2016-12-17T23:30:00+03:00</published><updated>2016-12-17T23:30:00+03:00</updated><id>https://aligoren.com/atistirmalik-mongodb-yazisi-2</id><content type="html" xml:base="https://aligoren.com/atistirmalik-mongodb-yazisi-2">&lt;p&gt;Selam bu yazı bir önceki &lt;a href=&quot;https://aligoren.com/atistirmalik-mongodb-yazisi&quot;&gt;Atıştırmalık MongoDB Yazısı&lt;/a&gt;‘nın devamı niteliğinde bir yazı.
Bu yazıda MongoDB ile Update ve Delete işlemlerini anlatacağım. Klasik SQL yöntemlerine göre farklılıklar içerdiğini önceki yazımda da belirtmiştim.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/mongo.png&quot; alt=&quot;/images/posts/mongo.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;mongodbyi-dosyadan-okuyalım&quot;&gt;MongoDB’yi Dosyadan Okuyalım&lt;/h3&gt;

&lt;p&gt;MongoDB için shell güzel bir araç. Ancak uzun Mongo sorgularında shell üzerinde girintiler ve diğer işlemler programlama anlamında pek de kolaylık sağlamıyor.
MongoDB’yi geliştiren ekip böyle durumları tahmin ederek bir kolaylık sağlamış. Örneğin şöyle bir sorguyu shell ile yazdığınızı düşünün:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;use deneme;

db.x.insert({
	&quot;kolon&quot;: &quot;içerik&quot;,
	&quot;kolon2&quot;: &quot;içerik2&quot;,
	&quot;kolon3&quot;: &quot;içerik3&quot;,
	&quot;kolon4&quot;: &quot;içerik4&quot;,
	&quot;kolon5&quot;: &quot;içerik5&quot;,
	&quot;kolon6&quot;: &quot;içerik6&quot;,
	&quot;kolon7&quot;: &quot;içerik7&quot;,
	&quot;kolon8&quot;: &quot;içerik8&quot;,
	&quot;kolon9&quot;: &quot;içerik9&quot;,
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki sorgulama işlemlerini shell’de yapmak inanın gerçekten zahmetli bir işlem. Bunun için yukarıdaki kodları js uzantılı bir dosyaya kaydedin
&lt;strong&gt;(Farklı uzantıları denemedim)&lt;/strong&gt; ve komut satırından şu komutu verin: &lt;code&gt;mongo &amp;lt; dosyaniz.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Evet bu kadar :)&lt;/p&gt;

&lt;h3 id=&quot;nasıl-yapılıyor-bu-update&quot;&gt;Nasıl Yapılıyor Bu Update?&lt;/h3&gt;

&lt;p&gt;Yukarıdaki X collection’ında yer alan içeriklerden &lt;code&gt;&quot;kolon4&quot;&lt;/code&gt; e ait datayı değiştirelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.x.update(
	{
		&quot;kolon4&quot;: &quot;Yenilendi&quot;
	}
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;İstersek şöyle bir sorgu ile kolon4’e ait yeni değeri görüntüleyebiliriz:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.x.find()[1][&quot;kolon4&quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tabii bu kesin bir yöntem olmayabiliyor. Bunu anlamanın en kolay olu koleksiyonu yazdırmanızdan geçiyor. Hem eski değer hem de yeni değer görülebiliyor.
Tabii yaptığınız işlem sonucunda &lt;strong&gt;nInserted&lt;/strong&gt; yerine &lt;strong&gt;nModified&lt;/strong&gt; içinde bir rakam göreceksiniz.&lt;/p&gt;

&lt;p&gt;Yine aynı şekilde &lt;a href=&quot;https://docs.mongodb.com/manual/reference/method/db.collection.updateMany/#db.collection.updateMany&quot;&gt;updateMany&lt;/a&gt; ve &lt;a href=&quot;https://docs.mongodb.com/manual/reference/method/db.collection.updateOne/#db.collection.updateOne&quot;&gt;updateOne&lt;/a&gt; metodlarını kullanarak çoklu ya da tekil güncelleme işlemlerini de yapabilirsiniz. Bu iki metoda değinmiyorum çünkü Many ve One ne işe yarıyor bunları önceki yazıda anlatmıştım. Kullanımdan kaynaklı farklılılar var sadece.&lt;/p&gt;

&lt;p&gt;Bunlar haricinde yeni bir metodla karşılaşıyoruz. Bu metodun adı &lt;strong&gt;replaceOne()&lt;/strong&gt; evet bu yeni metod, koşulda eşleşme gerçekleşirse gerçekleşen ilk eşleşmeye işlem yapar.
Örneği bir SQL cümlesinden verelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT * FROM Kullanicilar WHERE Adi='Ali'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki satır birden fazla Ali kullanıcısını döndürebilir. Ancak &lt;strong&gt;replaceOne()&lt;/strong&gt; metodu dönen bu değerlerden ilk olanını bulur ve güncelleme işlemini yapar.
Örnek kullanımı şöyledir:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.x.replaceOne(
	{
		kolon: &quot;icerik&quot;
	},
	{
		kolon: &quot;Yeni icerik&quot;
	}
)

/*
ÇIKTISI:

{ &quot;acknowledged&quot; : true, &quot;matchedCount&quot; : 1, &quot;modifiedCount&quot; : 1 }
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;İsterseniz &lt;strong&gt;db.x.find()&lt;/strong&gt; diyerek çıkan sonucu görüntüleyebilirsiniz:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{ &quot;_id&quot; : ObjectId(&quot;5856e7347db38a7560ec56ae&quot;), &quot;kolon&quot; : &quot;Yeni icerik&quot; }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Güncelleme işlemleri sadece bu kadarla sınırlığı değil. Bu işlemleri siz verdiğim linklerden daha geniş bir şekilde öğrenebilirsiniz.&lt;/p&gt;

&lt;h3 id=&quot;nasıl-sileceğiz&quot;&gt;Nasıl Sileceğiz?&lt;/h3&gt;

&lt;p&gt;RDBMS kullananlar olarak önceki alışkanlıklarımızdan kopamıyoruz. MongoDB’de bu alışkanlıklardan kopabilmiş değil.
Evet tahmin edildiği üzere silme işlemi destekliyor MongoDB. Ancak biraz farklı. Bunun için şu metodları bize sunuyor:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- remove()
- deleteOne()
- deleteMany()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;remove Metodu&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bunlardan ilki olan &lt;strong&gt;remove()&lt;/strong&gt; metoduyla tek seferde tüm koleksiyonu silebildiğimiz gibi koşul kullanarak koleksiyonda toplu silme de yapabiliriz.
Burada bilmemiz gereken toplu silme yaptığımızdır.&lt;/p&gt;

&lt;p&gt;Örnek herhangi bir koşula bağlı olmaksızın tüm &lt;strong&gt;x&lt;/strong&gt; koleksiyonunu silen sorgu kodunu verelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.x.remove( {} )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Eğer bu silme işleminin bütün tablo geneline değil de sadece belirli değerlere yansımasını istiyorsak şöyle yapmalıyız:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.x.remove({ 
    &quot;kolon&quot;: &quot;Bir İçerik&quot;
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Artık bu sayede içinde &lt;strong&gt;Bir İçerik&lt;/strong&gt; geçen yani tam eşleşme sağlayan tüm değerler x tablosundan silinecektir.
Tüm dokümana &lt;a href=&quot;https://docs.mongodb.com/manual/reference/method/db.collection.remove/#db.collection.remove&quot;&gt;buradan&lt;/a&gt; bakabilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;deleteOne() Metodu&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yine geldik One’lı Many’li metodlara. Mantığı artık söylememe gerek yok. Sadece nasıl çalıştıklarını belirtip bu yazıyı noktalayacağım.
Tamamını anlatmıyorum çünkü artık siz de ben de ufak bilgilere sahibiz ve MongoDB dokümanlarına erişebilir durumdayız :)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.x.deleteOne( { &quot;_id&quot; : ObjectId(&quot;5856e7347db38a7560ec56ae&quot;) } );

/*
ÇIKTISI:

{ &quot;acknowledged&quot; : true, &quot;deletedCount&quot; : 1 }
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki işlemin klasik SQL sorgusu şöyle:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;DELETE FROM Kullanicilar WHERE ID=2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;deleteMany() Metodu&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;İstersek çoklu silme işlemlerini de yapabiliriz. Fakat buradan şunu anlamayalım. Örneğin ID’si 1,2,3,4,5,6 olanları tek tek yazacağız gibi bir şey anlamayalım.
Burada aslında &lt;strong&gt;remove()&lt;/strong&gt; metodundaki toplu silmenin bir benzerini yapabiliriz. Örnek:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.x.deleteMany( { &quot;kolon&quot; : &quot;A Değeri&quot; } );

/*
ÇIKTISI:

{ &quot;acknowledged&quot; : true, &quot;deletedCount&quot; : 1 }
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıda &lt;strong&gt;A Değeri&lt;/strong&gt; sadece 1 adet olduğu için silindiğinde de &lt;strong&gt;deletedCount&lt;/strong&gt; 1 değerini döndürmüştür. Eğer 10 adet aynı değere sahip kayıt olsaydı o değer 10 olacaktı.&lt;/p&gt;

&lt;h2 id=&quot;kaynaklar&quot;&gt;Kaynaklar&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.mongodb.com/manual/tutorial/update-documents/#update&quot;&gt;Update İşlemleri - MongoDB Resmi Dokümanı&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.mongodb.com/manual/tutorial/remove-documents/#delete-methods&quot;&gt;Delete İşlemleri - MongoDB Resmi Dokümanı&lt;/a&gt;&lt;/p&gt;</content><author><name>Ali GÖREN</name></author><summary>Selam bu yazı bir önceki Atıştırmalık MongoDB Yazısı‘nın devamı niteliğinde bir yazı.
Bu yazıda MongoDB ile Update ve Delete işlemlerini anlatacağım. Klasik SQL yöntemlerine göre farklılıklar içerdiğini önceki yazımda da belirtmiştim.</summary></entry><entry><title>Atıştırmalık MongoDB Yazısı</title><link href="https://aligoren.com/atistirmalik-mongodb-yazisi" rel="alternate" type="text/html" title="Atıştırmalık MongoDB Yazısı" /><published>2016-12-17T23:30:00+03:00</published><updated>2016-12-17T23:30:00+03:00</updated><id>https://aligoren.com/atistirmalik-mongodb-yazisi</id><content type="html" xml:base="https://aligoren.com/atistirmalik-mongodb-yazisi">&lt;p&gt;Selam bu yazı MongoDB’ye yeni giriş yapmış olan ben ve benim gibiler için atıştırmalık bir yazı.
Bu yazıda basit olarak insert ve select işlemlerinden bahsedeceğim. MongoDB nedir gibi artık klişe hale gelmiş bilgileri paylaşmak yerine direkt olarak nasıl yapılır’ı anlatacağım.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[NOT]&lt;/strong&gt;: Yazı uzun bir yazı olmuş. Şimdiden özür dilerim :)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/mongo.png&quot; alt=&quot;/images/posts/mongo.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;online-mongodb-ortamıyla-tanışın&quot;&gt;Online MongoDB Ortamıyla Tanışın&lt;/h2&gt;

&lt;p&gt;Pratiğe giriş yapmadan önce MongoDB bilgisayarınızda kurulu olmalı. MongoShell olmadan bilgisayarınızdan bağlantıyı kurmanız mümkün değil.
Online shell kullanırsanız ayrı. Kurulum aşamalarını geçtiniz varsayarak size MongoLaB sitesini önereceğim.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://mlab.com&quot;&gt;https://mlab.com&lt;/a&gt; Bu adrese girip kaydolarak ücretsiz 500 MB MongoDB hakkı kazanıyorsunuz.
Tabii ki online çalışmak zorunda değilsiniz bu bir alternatif.&lt;/p&gt;

&lt;p&gt;Kaydolduktan sonra bir veritabanı oluşturmalısınız ve bu veritabanı için bir kullanıcı da oluşturmanız gerekiyor ki buraya kadar olan kısım standart yapıyla aynı.
Her şeyi doğru yaptıysanız çalışma alanınızın görüntüsü şöyle olmalı:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/mongolab.png&quot; alt=&quot;/images/posts/mongolab.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;mongodbyi-local-ortamda-kullanmak&quot;&gt;MongoDB’yi Local Ortamda Kullanmak&lt;/h2&gt;

&lt;p&gt;Eğer MongoDB’yi herhangi bir sınırlama olmaksızın (500 MB gibi) local ortamda kullanmak isterseniz öncelikle komut satırına &lt;code&gt;mongod&lt;/code&gt; komutunu yazmalısınız.
Bu sayede MongoDB sunucusu başlatılır. Varsayılan port olarak &lt;strong&gt;27017&lt;/strong&gt; dinlenir. Bunu söyleme sebebim yukarıdaki ilk seçenekte varsayılan port farklı.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/mongod_local.png&quot; alt=&quot;/images/posts/mongod_local.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Daha sonra ikinci bir komut satırını açarak mongo komutunu verip local mongodb kullanımına başlayabilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/mongo_local.png&quot; alt=&quot;/images/posts/mongo_local.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;veritabanını-seçelim&quot;&gt;Veritabanını Seçelim&lt;/h3&gt;

&lt;p&gt;Veritabanını seçme işlemi, mongoshell üzerinde diğerlerinde olduğu gibi &lt;code&gt;use&lt;/code&gt; ile olacaktır. Localde çalışanlar için test veritanı şöyle seçilir:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;use test
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;ufaktan-insert-operasyonları&quot;&gt;Ufaktan Insert Operasyonları&lt;/h3&gt;

&lt;p&gt;Veritabanını seçtik. MongoDB kullanırken insert operasyonları, RDBMS’lerden farklı şekilde çalışabilir. Burada yaşayacağınız farklılık syntax anlamında olabilir.
Ancak NodeJS kullanıcılarının bu işlemlere karşı yabancı olacağı pek söylenemez :)&lt;/p&gt;

&lt;p&gt;MongoDB’de insert operasyonları üç metod altında toplanmıştır. Bunlar sırasıyla;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;insert()&lt;/strong&gt;, &lt;strong&gt;insertOne()&lt;/strong&gt; ve &lt;strong&gt;insertMany()&lt;/strong&gt; metodlarıdır.
Bu metodları kullanırken verilerin JSON türünden olduğuna dikkat etmelisiniz. Yani JSON’a da aşina olmanız gerekmektedir. Neyse ki öğrenmesi çok da zor değil.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Basit Olarak Insert&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Basit olarak bir insert operasyonu şöyle olur.&lt;/p&gt;

&lt;p&gt;DBNESNESİ.TABLO.INSERT bu sahte yöntemin gerçeğe dönüşmüş hali şöyledir:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.Tablo.insert({
    'alan': 'Verisi',
    'alan2': 'Baska Veri'
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;O zaman bir blog sisteminin yapısından yola çıkarak şöyle olacak diyebiliriz:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.Yazilar.insert({
    'Baslik': 'Blog Başlığı',
    'Icerik': 'Lorem Ipsum Dolor Sit Amet...',
    'Kategori': 'Kişisel'
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Evet klasik bir insert operasyonunu gördük. Bu kodları Mongoshell üzerinde çalıştırınca şu çıktıyı alırsanız her şey doğrudur:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;WriteResult({ &quot;nInserted&quot; : 1 })
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Nedir Bu insertOne() ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bilinen bir yanlıştan dolayı insert ve insertOne karıştırılmakta. insert sadece tek bir ekleme yapmaz.
Eğer sadece insert metodunu kullanıyorsanız birden fazla ekleme de yapabilirsiniz. Örnek:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.Yazilar.insert([
    {&quot;Baslik&quot;: &quot;Başka&quot;},
    {&quot;Baslik&quot;: &quot;Oteki&quot;}
])

/*
ÇIKTISI:

BulkWriteResult({
        &quot;writeErrors&quot; : [ ],
        &quot;writeConcernErrors&quot; : [ ],
        &quot;nInserted&quot; : 2,
        &quot;nUpserted&quot; : 0,
        &quot;nMatched&quot; : 0,
        &quot;nModified&quot; : 0,
        &quot;nRemoved&quot; : 0,
        &quot;upserted&quot; : [ ]
})

*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ancak insertOne metodu böyle değil. Sadece ve sadece bir adet ekleme gerçekleştirebilirsiniz.
Ayrıca insertOne metodu ile insert edilen içeriğin ID’sini de alabilirsiniz. Kullanımı şöyledir:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.Yazilart.insertOne({
    &quot;Baslik&quot;: &quot;Tek Başlık&quot;
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yani ikinci bir başlık ekleme işlemi yapamazsınız. Evet bu kadar basit.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gelelim insertMany() Metoduna&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;insert ve insertMany metodları da çoklu ekleme işlemlerini destekler.
Ancak insert metodu ile yapılan ekleme işlemlerinde, geriye bir &lt;code&gt;insertedId&lt;/code&gt; dönmezdi. Aynı işlemi &lt;code&gt;insertMany&lt;/code&gt; ile yaparsak bir ID dönüşü alırız:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.Yazilar.insertMany([
    {&quot;Baslik&quot;: &quot;Başka&quot;},
    {&quot;Baslik&quot;: &quot;Oteki&quot;}
])

/*
ÇIKTISI:

{
        &quot;acknowledged&quot; : true,
        &quot;insertedIds&quot; : [
                ObjectId(&quot;5855b0a5f7e668b0e155210f&quot;),
                ObjectId(&quot;5855b0a5f7e668b0e1552110&quot;)
        ]
}
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;Şimdi-bu-verileri-nasıl-Çekeriz&quot;&gt;Şimdi Bu Verileri Nasıl Çekeriz?&lt;/h3&gt;

&lt;p&gt;Veri çekme işlemi MongoDB üzerindeki en basit işlemlerdendir. Örneğin Yazilar tablosundan verileri çekelim. Bunun için &lt;code&gt;find()&lt;/code&gt; metodunu kullanırız:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.Yazilar.find()

/*
ÇIKTISI:

{ &quot;_id&quot; : ObjectId(&quot;5855aef5f7e668b0e155210c&quot;), &quot;BAŞLIK&quot; : &quot;İçerik&quot; }
{ &quot;_id&quot; : ObjectId(&quot;5855aef5f7e668b0e155210d&quot;), &quot;BAŞLIK BAŞKA&quot; : &quot;İçerik 2&quot; }
{ &quot;_id&quot; : ObjectId(&quot;5855afd0f7e668b0e155210e&quot;), &quot;ÖTEKİ&quot; : &quot;İçerik 3&quot; }
{ &quot;_id&quot; : ObjectId(&quot;5855b0a5f7e668b0e155210f&quot;), &quot;FALAN&quot; : &quot;İçerik 4&quot; }
{ &quot;_id&quot; : ObjectId(&quot;5855b0a5f7e668b0e1552110&quot;), &quot;NEYSE&quot; : &quot;İçerik 5&quot; }
*/

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;nerede-bu-where-clause&quot;&gt;Nerede Bu WHERE Clause?&lt;/h3&gt;

&lt;p&gt;Benim en çok merak ettiklerimden birisi de bu konuydu. MongoDB üzerinde where aynı mantığa sahip olsa da kullanımı tabii ki farklı. Yine find() metodunu kullanacağız.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.Yazilar.find({ $where: &quot;this.Baslik == 'FALAN'&quot; })
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki kullanımla tek satırlık bir değer dönecektir. Ancak aynı değere sahip 2 içerik varsa onları unique yapan diğer değerleri de sorgulamanız iyi olur.&lt;/p&gt;

&lt;h3 id=&quot;hadi-bu-İçerikleri-sıralayalım&quot;&gt;Hadi Bu İçerikleri Sıralayalım&lt;/h3&gt;

&lt;p&gt;ASC ve DESC olaylarını RDBMS üzerinde kullanırken ORDER BY kullanıyorduk. Ancak bunda maalesef ki böyle değil. Fakat daha basit olduğunu söyleyebilirim.
Yine find() metodunu olaya dahil ederek şöyle bir işlem yapabiliriz:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.Yazilar.find().sort({_id:1})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki yöntemle birlikte ASCENDING bir sıralama yapabilirsiniz. Bunun tam tersi olarak DESCENDING işlemi ise şöyle yapılır:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.Yazilar.find().sort({_id:-1})
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;limit-falan-nasıl-olacak&quot;&gt;Limit Falan Nasıl Olacak?&lt;/h3&gt;

&lt;p&gt;Şimdi bu işlemde de find() metodunu kullanıyoruz. Tabi bu sefer sort() metodu da bize katılıyor.
Limit işlemini limit() metodunu kullanarak yaparız. Örneğin kullanımı şöyle:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.Yazilar.find().sort({ID:-1}).limit(1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki yöntem bize son eklenen verinin içeriğini döndürecektir ve dönen değer tek satırdır.
Çünkü limit metodu parametre olarak tek &lt;strong&gt;1&lt;/strong&gt; rakamını almıştır. Dilersek dönen değerdeki tek bir alana dair de veri çekebiliriz.
Ben bu işlemde kendim &lt;strong&gt;ID&lt;/strong&gt; adında bir alan tanımladım. MongoDB tarafından üretilen &lt;strong&gt;_id&lt;/strong&gt; alanından farklı olduğunu belirteyim. Şimdi tanımlı olan bu alanı çekelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.Yazilar.find().sort({ID:-1}).limit(1)[0][&quot;ID&quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Buradan anlaşılacağı üzere eklenmiş olan verilerden en sonuncusu getirilip bu satırdaki ID alanında yer alan veriyi göreceğiz.
Klasik bir array access işleminden fazlası değil yani.&lt;/p&gt;

&lt;p&gt;Evet anlatım bu kadar. Uzun bir yazı dizisi oldu. Eğer CRUD işlemleri hakkında daha fazla bilgi istiyorsanız 
&lt;a href=&quot;https://docs.mongodb.com/manual/crud/&quot;&gt;MongoDB Manual&lt;/a&gt; sizin için iyi bir yol gösterici olacaktır.&lt;/p&gt;</content><author><name>Ali GÖREN</name></author><summary>Selam bu yazı MongoDB’ye yeni giriş yapmış olan ben ve benim gibiler için atıştırmalık bir yazı.
Bu yazıda basit olarak insert ve select işlemlerinden bahsedeceğim. MongoDB nedir gibi artık klişe hale gelmiş bilgileri paylaşmak yerine direkt olarak nasıl yapılır’ı anlatacağım.</summary></entry><entry><title>MongoDB Data Directory Not Found Hatası</title><link href="https://aligoren.com/mongodb-data-directory-not-found" rel="alternate" type="text/html" title="MongoDB Data Directory Not Found Hatası" /><published>2016-11-30T23:30:00+03:00</published><updated>2016-11-30T23:30:00+03:00</updated><id>https://aligoren.com/mongodb-data-directory-not-found</id><content type="html" xml:base="https://aligoren.com/mongodb-data-directory-not-found">&lt;p&gt;Selam. MongoDB öğrenmeye başladım. Ufak bi kaç adımla başlayacaktım. Hedefte o vardı. Ancak daha henüz ilk kurulumda şöyle bir hata ile karşılaştım:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;&quot;Data directory C:\data\db\ not found., terminating&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Eğer böyle bir hata alıyorsanız MongoDB kurulduktan sonra C: dizininde ya da bulunduğunuz sistemin belirtilen dizininde &lt;strong&gt;data&lt;/strong&gt; klasörü ve onun içerisine &lt;strong&gt;db&lt;/strong&gt; klasörü oluşturulamamış demektir.&lt;/p&gt;

&lt;p&gt;Bu durumda yapılacak iki şey vardır. Birincisi oluşturulamayan data path’i siz oluşturacaksınız.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;C:&lt;/strong&gt; dizini altına kendiniz bir data klasörü ve içine de db klasörü oluşturun.&lt;/p&gt;

&lt;p&gt;Ardından mongod komutunu vererek mongodb’yi çalıştırın. Bir diğer yöntem ise data path flag’ini kullanarak data yolu belirtebilirsin.&lt;/p&gt;

&lt;p&gt;Ben mongodb 3.4 kullanarak şöyle yapıyorum&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;mongod --dbpath &quot;C:\Program Files\MongoDB\Server\3.4\data\db&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Artık mongodb başarılı bir şekilde çalışacaktır.&lt;/p&gt;</content><author><name>Ali GÖREN</name></author><summary>Selam. MongoDB öğrenmeye başladım. Ufak bi kaç adımla başlayacaktım. Hedefte o vardı. Ancak daha henüz ilk kurulumda şöyle bir hata ile karşılaştım:</summary></entry></feed>
