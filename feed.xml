<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ali GÖREN...</title>
    <description>.NET, SQL, Python, Açık Kaynak</description>
    <link>https://aligoren.comhttps://aligoren.com/</link>
    <atom:link href="https://aligoren.comhttps://aligoren.com/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Python ile Ağ Üzerinde İzleme Yapma</title>
        <description>&lt;p&gt;Merhaba. Bu yazıda Python ile basit bir şekilde ağ üzerinde nasıl izleme yapılırı anlatmaya çalışıcam.
Yazıya giriş yapmadan önce bazı gereksinimler mevcut. Bunlardan birisi &lt;code&gt;scapy&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Teknik detaylara giriş yapmadan önce açıklamak gerekirse scapy, network tarafında özelleştirilmiş paketler üretmeye yarayan bir kütüphane.&lt;/p&gt;

&lt;p&gt;Kendisi açık kaynak kodlu bir yazılımdır. Scapy’nin diğerlerine göre farkı genişletilebilir oluşunda.
Diğerleri demişken bunlardan benim bildikleri nmap ve hping var. İlla ki görmüşsünüzdür.&lt;/p&gt;

&lt;p&gt;Ayrıca scapy interactive olarak ya da development kısmında da çalışabilir.
Yani dilerseniz interactive shell ile çalışabilir ya da projenizde kütüphaneyi çağırabilirsiniz.&lt;/p&gt;

&lt;h2 id=&quot;scapy-ve-scapy-http-kurulumu&quot;&gt;scapy ve scapy-http Kurulumu&lt;/h2&gt;

&lt;p&gt;Çok uzatmayalım. Ben işlemleri linux dağıtımı üzerinde gerçekleştirdim. Kurulum iki aşamadan oluşuyor.
Dağıtımınızda pip olduğunu varsayarak şu işlemleri gerçekleştirelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo apt-get install python-scapy
sudo pip install scapy_http
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kurulum bu kadar Burada &lt;code&gt;scapy_http&lt;/code&gt; adında bir kütüphane kullandık.
Kütüphane yazarı &lt;a href=&quot;http://www.lucainvernizzi.net&quot;&gt;Luca Invernizzi&lt;/a&gt; isimli abimizdir.&lt;/p&gt;

&lt;h2 id=&quot;scapy-ile-a-trafiinin-zlenmesi&quot;&gt;scapy ile Ağ Trafiğinin İzlenmesi&lt;/h2&gt;

&lt;p&gt;Yazı iki kısımdan oluşacak. Bu bir adresi kim yani hangi IP ziyaret ediyor ona bakacağız.&lt;/p&gt;

&lt;p&gt;Öncelikle scapy ve scapy_http kütüphanesini dahil edelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;from scapy.all import IP, sniff
from scapy.layers import http
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Şimdi gelen değerleri sniffleyeceğimiz bir metod yazalım.
Bu methoddan dönen değerlere göre sniffing işlemi yapacağız.&lt;/p&gt;

&lt;p&gt;Bu metodda TCP paketlerini ayıklayacağız.
Ayıklama işlemi esnasında herhangi bir şekilde HTTP isteğine denk gelirsek ekrana yazdıracağız.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def tcp_ayikla(paket):
    if not paket.haslayer(http.HTTPRequest):
        # Eğer paket herhangi bir HTTP isteği almıyorsa burayı atlayalım:
        return
    
    #http katmanından geçen istekler
    http_katmani = paket.getlayer(http.HTTPRequest)

    # IP adresi içeren katman
    ip_katmani = paket.getlayer(IP)
    print '\n{0[src]} IP adresinden {1[Method]} {1[Host]}{1[Path]} sitesine ziyaret'.format(ip_katmani.fields, http_katmani.fields)

# Ağ üzerinde dinleme işlemine başlıyoruz:
sniff(filter='tcp', prn=tcp_ayikla)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Çıktı olarak şöyle görüntüleriz:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/posts/sniff_url.png&quot; alt=&quot;images/posts/sniff_url.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Buraya kadar olan kısım şu &lt;a href=&quot;http://www.lucainvernizzi.net/blog/2015/02/12/extracting-urls-from-network-traffic-in-just-9-python-lines-with-scapy-http/&quot;&gt;bağlantı&lt;/a&gt; üzerinden alıntılandı&lt;/p&gt;

&lt;h2 id=&quot;scapy-ile-post-verilerinin-alnmas&quot;&gt;scapy ile POST Verilerinin Alınması&lt;/h2&gt;

&lt;p&gt;Gelelim zurna mıdır nedir onun şey dediği yere.
Ağ üzerinde herkesin merak ettiği bir diğer konu da internet sitelerine girişte parolaların alınıp alınamayacağıdır.&lt;/p&gt;

&lt;p&gt;Yukarıdaki yapıya aşırı benzer bir şekilde POST değerlerini alabilirsiniz.
Bu işlem SSL olan sistemlerde işe yaramıyor. Bunu belirtmem gerekir.
Eğer SSL konusunda merakınız varsa tintinweb &lt;a href=&quot;https://github.com/tintinweb/scapy-ssl_tls&quot;&gt;reposuna&lt;/a&gt; bakmalısınız.&lt;/p&gt;

&lt;p&gt;Post edilen verileri saf haliyla görebilmemizi sağlayan kodun temeli yukarıdaki ile aynı.
Geri kalan kısım biraz programlama becerisi istiyor olay o kadar yani.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;from scapy.all import IP, sniff
from scapy.layers import http
 
 
def tcp_ayikla(paket):
    if not paket.haslayer(http.HTTPRequest):
        # Eğer paket herhangi bir HTTP isteği almıyorsa burayı atlayalım:
        return
    http_katmani = paket.getlayer(http.HTTPRequest)
    try:
        # Gelen istek POST mu?
        if str(http_katmani.fields[&quot;Method&quot;]) == &quot;POST&quot;:
            
            # Öyle ise dönen değeri böl ve bölünen değerin 13.sünü al
            # 13. değer form değerlerinin geldiği kısım oluyor
            data = str(http_katmani).split('\n')[13]
            # Form değerleri birleşikti bildiğiniz GET query gibi
            # Önce ampersand kaldırılıp, alt satıra geçme sağlandı
            #   txtUserName=Falan
            #   txtPassword=FalanPasswd
            # Ardından Gelen değerdeki %40, yerini @ ifadesine bıraktı.
            # Mail için önemli :)
            data = data.replace('&amp;amp;', '\n').replace('%40', '@')
            return data
    except:
        pass
 
# Ağ üzerinde dinleme işlemine başlıyoruz:
sniff(filter='tcp', prn=tcp_ayikla)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bu ikinci kodun sonrasında çalıştırdığımızda aşağıdaki gibi bir çıktı ile karşılaşacağız.
Dikkat ettiyseniz formda bulunan inputların name’leri ve value’ları bu ekranda görüntülenebilmekte&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;txt_username=16612261
txt_password=cH10k1997GuVenL
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki kullanıcı adı ve parola saf haliyle karşımıza sunulmakta.
Parola her ne kadar ben güvenliyim imajı verse de izlemek pek de zor olmuyor.&lt;/p&gt;

&lt;p&gt;Bu işlemi bir üniversitenin Öğrenci Bilgi Sistemi üzerinde gerçekleştirdim. Umarım problem olmaz :)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/posts/post_sniffing.png&quot; alt=&quot;images/posts/post_sniffing.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sanırım bir anlatımın daha sonuna geldik. Özetle: SSL kullanın&lt;/p&gt;
</description>
        <pubDate>Sun, 23 Oct 2016 00:41:00 +0300</pubDate>
        <link>https://aligoren.comhttps://aligoren.com/python-ile-ag-uzerinde-izleme-yapma</link>
        <guid isPermaLink="true">https://aligoren.comhttps://aligoren.com/python-ile-ag-uzerinde-izleme-yapma</guid>
      </item>
    
      <item>
        <title>Asp.Net MVC'De Çoklu Checkbox Kullanımı</title>
        <description>&lt;p&gt;Merhaba. Asp.NET ve özellikle MVC konusunda henüz yeniyim. Aslında MVC’den önce Asp.NET hiç kullanmadım. 
Ancak iş olunca konu direkt MVC’ye daldım. Zorluk çektiğim pek söylenemez. Model kavramına aşina olduktan sonra pek sıkıntı yok.&lt;/p&gt;

&lt;p&gt;Sıkıntı şu. Veritabanından gelen bazı değerler var. Bu değerlerin de ID değerleri var. Örnekte şöyle olsun:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;input type=&quot;checkbox&quot; name=&quot;degerler&quot; value=&quot;1&quot; /&amp;gt;
&amp;lt;input type=&quot;checkbox&quot; name=&quot;degerler&quot; value=&quot;2&quot; /&amp;gt;
&amp;lt;input type=&quot;checkbox&quot; name=&quot;degerler&quot; value=&quot;3&quot; /&amp;gt;
&amp;lt;input type=&quot;checkbox&quot; name=&quot;degerler&quot; value=&quot;4&quot; /&amp;gt;
&amp;lt;input type=&quot;checkbox&quot; name=&quot;degerler&quot; value=&quot;5&quot; /&amp;gt;
&amp;lt;input type=&quot;checkbox&quot; name=&quot;degerler&quot; value=&quot;6&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bunların bazıları seçili olabilir bazıları olmayabilir. Şimdi ben gelen değerleri veritabanına ekletmek istiyorum.
Belki başka yöntemleri de vardır bilemem ancak bunun MVC’de basit bir yolu var. Şimdi bu formun basit olarak şöyle post edildiğini düşünelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;form action=&quot;/Home/DegerAl&quot; method=&quot;post&quot;&amp;gt;
    &amp;lt;input type=&quot;checkbox&quot; name=&quot;degerler&quot; value=&quot;1&quot; /&amp;gt;
    &amp;lt;input type=&quot;checkbox&quot; name=&quot;degerler&quot; value=&quot;2&quot; /&amp;gt;
    &amp;lt;input type=&quot;checkbox&quot; name=&quot;degerler&quot; value=&quot;3&quot; /&amp;gt;
    &amp;lt;input type=&quot;checkbox&quot; name=&quot;degerler&quot; value=&quot;4&quot; /&amp;gt;
    &amp;lt;input type=&quot;checkbox&quot; name=&quot;degerler&quot; value=&quot;5&quot; /&amp;gt;
    &amp;lt;input type=&quot;checkbox&quot; name=&quot;degerler&quot; value=&quot;6&quot; /&amp;gt;
    &amp;lt;input type=&quot;submit&quot; value=&quot;Ekle&quot; /&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki yapıda name karşılığı &lt;mark&gt;degerler&lt;/mark&gt; olan bir input grup görüyoruz. Bu name karşılıklarının aslında bir name array oluşturduğunu söyleyebiliriz.
Bu array’in adı da &lt;mark&gt;degerler&lt;/mark&gt; array’i olsun. O zaman C# tarafında bu değerleri hangi türden alacağımızı biliyoruz.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[HttpPost]&lt;/code&gt; attribute’unu çağıran method’a gelen argüman tipi array olacak. Basit olarak array tipli değer alan methodların nasıl oluştuğunu hatırlayalım:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public void DegerAlacak(string[] degerler)
{
    //...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Şimdi bu bilgilere göre basit anlamda bir checkbox list’ten gelen verinin nasıl alınacağını görelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[HttpPost]
public ActionResult DegerAl(string[] degerler)
{
    for (int i = 0; i &amp;lt; degerler.Length; i++)
    {
        ViewData[&quot;Degerler&quot;] += degerler[i];
    }
    return View();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ben bunları &lt;code&gt;DegerAl&lt;/code&gt; sayfasında yazdırdığım için ViewData içerisine atadım. Dilerseniz parametre alınan noktaya bir breakpoint koyarak gelen değerleri görüntüleyebilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/mvc_check.png&quot; alt=&quot;/images/posts/mvc_check.png&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 22 Oct 2016 12:05:00 +0300</pubDate>
        <link>https://aligoren.comhttps://aligoren.com/aspnet-mvcde-coklu-checkbox-kullanimi</link>
        <guid isPermaLink="true">https://aligoren.comhttps://aligoren.com/aspnet-mvcde-coklu-checkbox-kullanimi</guid>
      </item>
    
      <item>
        <title>Jekyll Github Badge Eklentisi</title>
        <description>&lt;p&gt;Selam bu aslında tam bir eklenti. Değil. Buna daha çok Liquid Tag desek yanlış söylemiş olmayız. Bu eklentinin yaptığı şey kısacası belirli bir repo için &lt;mark&gt;BADGE&lt;/mark&gt; oluşturuyor.
Tam badge değilse de yapıyor işte. Bunu oluştururken bootstrap 4’ün card özelliğinden faydalandım.&lt;/p&gt;

&lt;p&gt;Eklenti şu anda sadece çağırıldığı anda olan değerleri üretiyor. Yani bugün 10 olan bir beğeni, yarın 15 olsa bile değişmeyecektir. Vakit olursa bir sonraki sürümde onu da değiştirmeyi düşünüyorum.&lt;/p&gt;

&lt;p&gt;Kısacası bu eklenti bize şunları sunuyor:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Proje Adı&lt;/li&gt;
  &lt;li&gt;Açıklama&lt;/li&gt;
  &lt;li&gt;Proje yazarı / sahibi (Author)&lt;/li&gt;
  &lt;li&gt;Programlama dili&lt;/li&gt;
  &lt;li&gt;Stargazers (kaç kişi beğenmiş)&lt;/li&gt;
  &lt;li&gt;Forks (Çatallama sayısı)&lt;/li&gt;
  &lt;li&gt;Download (Projenin master branchteki dosyalarının zip URL’si)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Kullanım için bazı adımlar var. Öncelikle card.css dosyasını aktarmak gerekiyor:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{{ &quot;/css/card.css&quot; | prepend: site.baseurl }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Daha sonra da kullanımı basitçe şöyle oluyor:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{% gitrepo KULLANICI_ADINIZ/REPO_ADINIZ %}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Şimdi basit bir örnekle, bu eklentinin repo’sunu paylaşayım ki inceleyin. Ben kötü Ruby ve Jekyll Liquid bilgimle yaptım bunu.:&lt;/p&gt;

&lt;div class=&quot;card card-block&quot;&gt;&lt;p class=&quot;card-text&quot;&gt;&lt;b&gt;Project Details: &lt;/b&gt;jekyll-github-badge&lt;/p&gt;&lt;p class=&quot;card-text&quot;&gt;&lt;b&gt;Description: &lt;/b&gt;Jekyll Github Repo Badge Generator&lt;/p&gt;&lt;table class=&quot;table table-sm&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot;&gt;Project Name&lt;/th&gt;&lt;td&gt;&lt;a class=&quot;card-link&quot; href=&quot;https://github.com/aligoren/jekyll-github-badge&quot; target=&quot;_blank&quot;&gt;jekyll-github-badge&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot;&gt;Author&lt;/th&gt;&lt;td&gt;&lt;a class=&quot;card-link&quot; href=&quot;https://github.com/aligoren&quot; target=&quot;_blank&quot;&gt;aligoren&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot;&gt;Programming Language&lt;/th&gt;&lt;td&gt;CSS&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot;&gt;Stargazers&lt;/th&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot;&gt;Forks&lt;/th&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;a href=&quot;https://github.com/aligoren/jekyll-github-badge/archive/master.zip&quot; class=&quot;btn btn-primary&quot; target=&quot;_blank&quot;&gt;Download&lt;/a&gt;&lt;/div&gt;
</description>
        <pubDate>Sun, 16 Oct 2016 21:57:00 +0300</pubDate>
        <link>https://aligoren.comhttps://aligoren.com/jekyll-github-badge-eklentisi</link>
        <guid isPermaLink="true">https://aligoren.comhttps://aligoren.com/jekyll-github-badge-eklentisi</guid>
      </item>
    
      <item>
        <title>Jekyll ile PrismJS Kullanmak</title>
        <description>&lt;p&gt;Blogu Jekyll’a taşıdıktan sonra uygun bir tema arayışına girmiştim. Bu uygun tema arayışında işimi en çok gören ise Pixyll teması oldu. Yapımcısı footer’da yer almakta. Neyse malumunuz kod içeren makaleler yazınca o makalelerdeki kodların da renklendirilmesi önemli.&lt;/p&gt;

&lt;p&gt;Kullandığımız temalara göre renklendirme özellikleri mevcut elbette. Ancak jekyll ile birlikte &lt;a href=&quot;http://rouge.jneen.net/&quot;&gt;Route&lt;/a&gt; varsayılan olarak geldiği için pek de arayışa geçmeyiz. Fakat benim gibi görselliği de seviyorsanız mutlaka farklı alternatifleri de düşünürsünüz ki bunlardan birisi de &lt;a href=&quot;http://pygments.org/&quot;&gt;Pygments&lt;/a&gt; oluyor. Tabi bunu da beğenmiyor olmanız pekala normal karşılanabilir.&lt;/p&gt;

&lt;p&gt;Ben özellikle son dönemde en popüler kod renklandiricilerden olan PrismJS kullanmayı uygun gördüm. Bu yazıda ve diğer yazılarda etkisini göreceksiniz. Çok uzatmadan nasıl kurulacağını anlatayım. Şimdi bu işlem 3 adımdan oluşmakta.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;İlk Adım: Rouge’un devre dışı bırakılması&lt;/li&gt;
  &lt;li&gt;İkinci Adım PrismJS’in İndirilmesi&lt;/li&gt;
  &lt;li&gt;Üçüncü Adım İlgili Kütüphanelerin head ve footer’a eklenmesi&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;1-)&lt;/strong&gt; Şimdi öncelikle bize lazım olan şey Rouge’un devre dışı kalması dedik. &lt;code&gt;_config.yml&lt;/code&gt; dosyasına geçelim. Burada yapmamız gereken şey öncelikle &lt;code&gt;highlighter: none&lt;/code&gt; demeliyiz.&lt;/p&gt;

&lt;p&gt;Daha sonra &lt;code&gt;kramdown&lt;/code&gt; için alt seçeneklere bazı eklemeler gerçekleştirmeliyiz. Bu işleme göre syntax highlighter disable olmalı. Kısacası ilgili bölümler aşağıdaki gibi olmalı:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;highlighter: none
markdown: kramdown
kramdown:
    syntax_highlighter_opts:
        disable: true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;2-)&lt;/strong&gt; İlk adımı atlattık şimdi geldi ikinci adıma. İkinci adımda PrismJS’yi &lt;a href=&quot;http://prismjs.com/&quot;&gt;http://prismjs.com/&lt;/a&gt; adresinden indirelim. Bu indirme ile birlikte iki dosya karşınıza gelecektir.Birisi JS bir diğeri de CSS dosyası.&lt;/p&gt;

&lt;p&gt;Ben PrismJS’i özelleştirerek indirmenizi öneriyorum. Syntax highlighter için default tema aslında gayet iyi ama siz dilerseniz farklı temaları da seçebilirsiniz. Blogunuzda hangi dillerde yayın yapıyorsanız (Programlama dilleri) o dilleri seçin öncelikle. Ben hepsini seçmedim ama bazı deneyip bir şeyler aktaracağım dillere dair seçimler gerçekleştirdim.&lt;/p&gt;

&lt;p&gt;Dil seçimi tamamlandı. Artık seçmemiz gereken bir diğer şey ise plugin yani eklentiler. Bunlar inanın PrismJS’i daha güzel bir şekilde kullanmanıza da imkan tanıyan eklentiler. Benim önerilerim şunlar:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line Numbers:&lt;/strong&gt; Satır numaralarını gösterir.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Autolinker:&lt;/strong&gt; Kodlarda yer alan yorum satırlarında link varsa tıklanabilir hale getirir&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Show Language:&lt;/strong&gt; Eklenen kodun hangi dilde eklendiğini sağ üst köşede gösterir. Bu yazıdaki &lt;code&gt;YAML&lt;/code&gt; örneğinde olduğu gibi&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3-)&lt;/strong&gt; Son adıma geldik. Bu adımda indirilen dosyaları klasörlere atma zamanı. &lt;code&gt;css&lt;/code&gt; zaten hazır olduğu için &lt;code&gt;prism.css&lt;/code&gt; dosyasını o klasöre atın. Eğer &lt;code&gt;js&lt;/code&gt; klasörü yoksa oluşturun ve &lt;code&gt;prism.js&lt;/code&gt; dosyasını da o klasöre atın.&lt;/p&gt;

&lt;p&gt;Şimdi gelelim son adımlara. Öncelikle &lt;mark&gt;head.html&lt;/mark&gt; dosyasını açalım. Ya da artık header görevini neresi görüyorsa orası. O kısma şu kodu yapıştıralım:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://aligoren.com/css/prism.css&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Not: href içinde süslü parantezler vardır:&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{{ &quot;/css/prism.css&quot; | prepend: site.baseurl }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bu işlem bittikten sonra da artık son bir işimiz kalıyor. &lt;mark&gt;footer.html&lt;/mark&gt; dosyasını açıp şu kodu yapıştıralım:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://aligoren.com/js/prism.js&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yine yukarıdaki uyarı aynı bu kısımda da geçerlidir. Dikkate almanızı öneririm. Evet işlemler bu kadar :) Artık PrismJS hazır durumda.&lt;/p&gt;
</description>
        <pubDate>Sat, 15 Oct 2016 20:05:00 +0300</pubDate>
        <link>https://aligoren.comhttps://aligoren.com/jekyll-ile-prismjs-kullanmak</link>
        <guid isPermaLink="true">https://aligoren.comhttps://aligoren.com/jekyll-ile-prismjs-kullanmak</guid>
      </item>
    
      <item>
        <title>Bugün Öğrendiklerim - Git</title>
        <description>&lt;p&gt;Bugün enteresan bir şekilde güzel şeyler öğrendim. Aslında dün de öğrendim. Github’ı sadece ve sadece master’a dosya push etmek adına kullanan birisi olarak şimdilerde branch ne kadar da gerekli der oldum. Bu yazıda özellikle branchleri anlatmak isterim. Çünkü master ve branchler gerçekten çok önemli şeyler.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Yeni Bir Git Reposu:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bulunduğunuz dizini içereceğini bilerek &lt;code&gt;git init&lt;/code&gt; komutunu vermeniz yeterlidir.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Uzak Git Reposunu Clonelamak&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bu en çok ihtiyaç duyduğumuz şeylerden birisi olabilir. Farklı amaçlarla bunu yaparız. Çoğu zaman dosyaları direkt indirebiliriz. Ancak neden tarayıcıyı açalım ki? Tabii bir de projelere katkıda bulunmak da var. Neyse bu işlem şöyle oluyor:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git clone https://uzak-git-deposu&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Şaka değil bu kadar basit.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dosya Ekleme&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yapılan çalışmaların artık ortak çalışma alanına aktarılması gerekmektedir. Öncelikle dosyaların eklenmesi şarttır. İki yöntem var.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Tamamını Ekleme:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git add *&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Spesifik Dosyalar Ekleme:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git add main.rb lib.rb file.rb&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Yöntemlerden dilediğinizi seçebilirsiniz ki bu size kalmış bir şey.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Eklenen Dosyalara Mesaj Eklemek&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bu yöntemle hangi dosyalar çalışmada etkilenmiş yani değişikliğe uğramışsa o dosyalar bu mesajla repoya gönderilir. Örneğin şöyle düşünelim, info.py dosyasında bir değişiklik yaptınız. Bu değişiklik Person adında yeni bir class’ın eklenmesi olabilir. O zaman commit’e şu işlemi yapabilirsiniz:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git commit -am &quot;Add person class&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Değişiklikleri Yayına Almak&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;En önemli mevzu bu bence. Herkesin katkı yaptığı bir projeye localden katkı yapmanız bir şeyi değiştirmez. Önemli olan bu katkının asıl repoya &amp;amp; sizin kendi reponuza aktarılmasıdır. Eğer reponuz yeni ise varsayılan olarak &lt;code&gt;master&lt;/code&gt; isimli branch’e sahipsinizdir. Bu arada branch dal ya da dallanmak demekmiş. Neyse değişiklikleri yayına almak yani uzak repoda göstermek için şu komutlar işimizi görebilir:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git push origin master&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Mümkün olduğunca master branch rahatsız edilmemeli. Oraya publish edilen yapı aktarılmalı. Geliştirme aşamalarında kullanılan kalabalık dosyalar başka branchlerde yer almalı.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hangi Branch’e Bağlıyım?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bu da önemlidir. Olur da farklı bir branch’te çalışırsınız aman diyim. Bunun için &lt;code&gt;git branch&lt;/code&gt; komutu yeterlidir. Bu komutla şu anda hangi branch’te çalıştığınızı görebilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Yeni Branch Oluşturma&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bu işlem sanırım en zevkli işlem. Basit bir komutla &lt;code&gt;dev&lt;/code&gt; isimli yeni branch oluşturabilirsiniz:&lt;/p&gt;

&lt;p&gt;&lt;code&gt; git checkout -b dev&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Branchler Arasında Dolaşma&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Eğer yapacağınız değişiklikler belirli bir branchte yayınlanacaksa o branch’e geçiş yapmanız gerekiyor. Bunun için de işlem yine çok basit. Örneğin şu anda master branch’tesiniz ve dev isimli branch’e geçeceksiniz:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git checkout dev&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Oluşturulan Branch’i Yayınlamak&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Eğer branch, uzak repoya gönderilmediyse o branch sizden başkası için görülebilir olmayacaktır. Branch’i yayınlama işlemini yukarıda oluşturduğumuz dev isimli branch’i baz alarak gerçekleştireceğiz.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git push origin dev&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Artık branch’imiz yayında olacaktır.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Güncelleme&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Siz bi uyudunuz falan sabah oldu işe gittiniz geldiniz o da ne bir sürü değişimler oldu. Ama bunlar bilgisayarınızda yok. Meraklanmayın. Basit bir komut işinizi görüyor:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;*git fetch &amp;amp; git pull origin master&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;İşime Yarayan Komutlar:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yapılan işlemlere dair logları &lt;code&gt;git log&lt;/code&gt; yazarak alabiliyorum. Eğer yapılan değişikliklere dair bir durum alacaksam da &lt;code&gt;git status&lt;/code&gt; yaparak eklenmemiş olanları görebilirim.&lt;/p&gt;

&lt;p&gt;Bugün daha çok şeyler öğrendim bunda @hwclass hocama teşekkür etmem gerekiyor. Onlar da başka bir yazının konusu olsun.&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Oct 2016 00:08:00 +0300</pubDate>
        <link>https://aligoren.comhttps://aligoren.com/bugun-ogrendiklerim</link>
        <guid isPermaLink="true">https://aligoren.comhttps://aligoren.com/bugun-ogrendiklerim</guid>
      </item>
    
      <item>
        <title>Türk Telekom ve Superonline Rezaleti</title>
        <description>&lt;p&gt;Bu yazıyı yayınlarken artık Türksat kullanıcısı olduğumu öncelikle belirtmek istiyorum. Kendilerine teşekkür etmek gerekebilir. Gerçekten de işlerini layıkıyla yapıyorlar.&lt;/p&gt;

&lt;p&gt;Size çok uzun bir hikaye anlatmak istemiyorum. Ancak nasıl başladığını ve nasıl sonlandığını anlatarak doğru şirketi seçmenizi belki sağlayabileceğimi düşünüyorum. Öncelikle Türk Telekom’u anlatmam gerekiyor.&lt;/p&gt;

&lt;h3 id=&quot;telekom-bavurusunu-yaptm&quot;&gt;Telekom Başvurusunu Yaptım&lt;/h3&gt;

&lt;p&gt;Temmuz ayıydı internet başvurusunda bulundum. Online olarak. Bu başvuruyu yaptıktan yaklaşık 2-3 saat kadar sonra beni bir Türk Telekom çalışanı aradı. Bana kampanyalarda bahsetti. 24 ya da 25 yanlış aktarmayayım bir hızımız var dedi. Ben de 50 destekleyip desteklemediğini sordum. Bana desteklediğini söyledi.&lt;/p&gt;

&lt;h3 id=&quot;avantajlar-sayyorlar&quot;&gt;Avantajları Sayıyorlar&lt;/h3&gt;

&lt;p&gt;Her şey mükemmel görünüyordu ki çalışan arkadaş bana kampanya dahilinde elde edeceğim avantajları saydı. Ben de hani avantajında değilim, çalışıyorum bana internet lazım dedim. Randevu oluşturalım dediler. Neyse kendilerine sordum “Cumartesi ya da Pazar Günleri Kurulum Var Mı?” maalesef o günlerde randevularımız dolu ancak size haftaya randevu verebilirim. Bayramdan önce internetiniz bağlanmış olur dediler. Randevu’yu çarşamba gününe aldık. O gün kesin eve gelecek misiniz diye sorduğumda ise evet dendi ki ona göre iş yerinden izin aldım da.&lt;/p&gt;

&lt;h3 id=&quot;randevu-verdikleri-gn-gelmediler&quot;&gt;Randevu Verdikleri Gün Gelmediler&lt;/h3&gt;

&lt;p&gt;Neyse tabi aradan tam 1 hafta geçti. O gün geldi çattı. Çarşamba günü öğleden sonra eve geldim. Çünkü Türk Telekom çalışanlarının evde olmaları gerekiyordu. Ancak içimde bir endişe var kesin gelmeyecekler gibisinden. Bu endişeden kaynaklı saat 13:20 sularında kendilerini de aradım.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h4 id=&quot;sms-atarak-bilgilendirme-veriliyor&quot;&gt;SMS Atarak Bilgilendirme Veriliyor&lt;/h4&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Neyse bekle bekle saat 15:30 oldu gelmediler. Bir SMS geldi. “Evinizde olamadığımız için üzgünüz” şeklinde. Çok üzgünler ya. Ben eve gelmedileri konusunda direttim. Mesai saatleri daha dolmadı şeklinde bir beyanda doldular. Şuraya küfür yazabilsem keşke içimden geçenleri aktarırdım.&lt;/p&gt;

&lt;p&gt;Mesai saati olan 18:00 olduğunda gelmediler tabi ki. Neyse beni bilgilendireceklerini söylemişlerdi. Bilgilendirdiler peki ne zaman? Bir sonraki hafta saat 16:10 sularında. Aradan 1 hafta geçiyor ve ben bilgilendirilmek için aranıyorum.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h4 id=&quot;randevu-gereklemeyince-bavuruyu-ptal-ettim&quot;&gt;Randevu Gerçekleşmeyince Başvuruyu İptal Ettim&lt;/h4&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Böyle beceriksiz, böyle kabiliyetsiz bir şirketin müşterisi olunur mu dedim istemiyorum başvuru falan iptal edin dedim suratlarına kapattım. Alternatif aramaya başladım. Aslında bulacağım alternatifi kafamda hazır etmiştim de çekincelerim vardı.&lt;/p&gt;

&lt;h3 id=&quot;turkcell-superonlinea-bavuru-yaptm&quot;&gt;Turkcell Superonline’a Başvuru Yaptım&lt;/h3&gt;

&lt;p&gt;Bulduğum alternatif kimdi dersiniz.. Turkcell Superonline’ın ta kendisiydi. Lanet olsun böyle bir firmaya. Bakın çağrı merkezi çalışanlarına hayatta bir şey diyemem. Her emekçi gibi onlar da zor şartlar altında, karın tokluğuna çalışan insanlar. Şikayetim onlara değil.&lt;/p&gt;

&lt;p&gt;Ama firmaya yöneltiliyorsa onlar da zan altında kalıyorlar. Kendilerine başvuru yapmak için ya aradım ya da yine internetten başvuru yaptım tam hatırlayamadım. Ancak başvurumu bir cumartesi günü öğleden önce yaptım. Tek bildiğim bayram öncesiydi.&lt;/p&gt;

&lt;h3 id=&quot;bavuruda-48-saat-inde-aktivasyon-denildi&quot;&gt;Başvuruda 48 Saat İçinde Aktivasyon Denildi&lt;/h3&gt;

&lt;p&gt;Başvurumu telefonla arayıp alan kadın bana bugün cumartesi ekiplerimiz bugün gelemeyebilir ancak hafta içi kuruluma gelir ve 48 saat içerisinde aktivasyon vs. her şey hazır olur dedi. İyi dedim peki dedim. Ama şunu belirteyim dedim. Sizden önceki firma olan Türk Telekom böyle böyle rezalet yaptı.&lt;/p&gt;

&lt;p&gt;Aynı sorunu sizde yaşamayacağımdan emin olmalıyım dedim. Hayır bizde böyle bir sorunla karşılaşmazsınız dedi. Hızımın ne olacağını sordu. Adresimi verince 70’e kadar destekliyor dedi. İyi dedim 50 olsun dedim. Size VDSL verelim fiber bölgenizde bulunmamakta dedi. Tamam dedim kaç olursa olsun verin şunu dedim.&lt;/p&gt;

&lt;h3 id=&quot;yine-maduriyet-dolu-1-hafta&quot;&gt;Yine Mağduriyet Dolu 1 Hafta&lt;/h3&gt;

&lt;p&gt;Ben yine ertesi haftayı bekledim. Cuma günü kendilerine sosyal medya üzerinden yazdım ya da aradım hatırlamıyorum ancak bir şekilde beni aradılar. Maalesef araya da bayram giriyor ama kusura bakmayın özür dileriz şeklinde kurumsal cümleler kurdular.&lt;/p&gt;

&lt;p&gt;Sinir oldum ama çalışanı rencide etmemek adına da alttan ala ala konuştum. Ertesi hafta oldu. Bekledim bayramın bitmesini. Kendilerini aradığımda bana “Hat desteklenmiyor” şeklinde bir mesaj düşüldüğü söylendi. Bakın şu kafaya. Yahu hat hızı desteklenmiyor ise neden ben aranıp bilgilendirilmiyorum. Yazı sonunda Türk Telekom ve Superonline’ı kaç kere aradığımı da yazacağım.&lt;/p&gt;

&lt;h3 id=&quot;sosyal-medyadan-tepki-verince-aryorlar-&quot;&gt;Sosyal Medyadan Tepki Verince Arıyorlar :)&lt;/h3&gt;

&lt;p&gt;Neyse sosyal medya üzerinden tepkimi gösterince aradılar beni. Arayan arkadaş dedi hızınız desteklenmiyor ise yeni bir başvuru açıp en düşük ADSL hızından verelim. Ben 8 uygun mu dediğimde bana uygun dediler. Tamam olsun yeter ki olsun dedim. Bekle bekle bekle..&lt;/p&gt;

&lt;p&gt;Gelen yok. Tekrar aradım kendilerini. Bu arada her aramada yarım saat konuşuyorum. Önce aradım biz fiber’e bakıyoruz dedi birisi hatta çıksın diye 10 dakika beklediğim kişi biz fiberiz dedi beni bir yere aktardı. O aktarım esnasında da bir 10 dakika bekledim. Aktarımımın yapıldığı kadın da bir başka arkadaşa aktardı ki sanıyorum bu teknik kısımdaki arkadaştı.&lt;/p&gt;

&lt;h3 id=&quot;rencide-edici-hakaret-eren-cmleler-yok-sabrlym-hala&quot;&gt;Rencide Edici, Hakaret İçeren Cümleler Yok Sabırlıyım Hala..&lt;/h3&gt;

&lt;p&gt;Neyse ben sakin sakin konuşuyorum en ufak bir ses yükseltme, küfür ve hakaret içeren cümle kurmuş değilim. En sonunda dayanamayıp CEO’larına laf söyledim. Pahalı takım elbisesini bi kenara bırakıp şu kurumsal imajını düzeltsin gibisinden bir cümle kurdum. Temmuz’dan Eylül ayına kadar kurduğum en ağır cümleydi. O cümle sonrası o arkadaş bir dakika bekleticem sizi dedi.&lt;/p&gt;

&lt;h3 id=&quot;telekom-alanlarnn-yalanlar&quot;&gt;Telekom Çalışanlarının Yalanları..&lt;/h3&gt;

&lt;p&gt;Döndüğünde internetimin bu kadar süre geçmesine rağmen bağlanamamış olmasına o da hiddetlenmiş olacak ki şöyle üzüldüm, böyle üzüldüm. Evinize hız kontrolüne gelmeyen Telekom çalışanları hakkında şikayet başlattık da bu sürecin takibini gerçekleştireceğiz de gibisinden yine kurumsal yalanlar söylendi.&lt;/p&gt;

&lt;p&gt;Bu arada atlamayayım. Telekom öyle yalancı çalışanlara sahip ki. Evime geldiklerini belirtiyorlar ancak arayıp bana ulaşamamışlar. Bana ulaşamadıkları esnada ben şebekeden bağlanıp Twitter üzerinden yine şikayetlerimi saydırıyordum. Yalanları belli olunca da bu şikayetinizi de biz alıyoruz dedi arkadaş. Bu arada size çok teşekkür ederim dedi. Ben sizin yerinizde olsam sakin olmazdım bu kadar. Sizin adınıza çok üzgünüm dedi.&lt;/p&gt;

&lt;h3 id=&quot;ar-merkezine-ulamak-in-25-dakika-bekleyin&quot;&gt;Çağrı Merkezine Ulaşmak İçin 25 Dakika Bekleyin..&lt;/h3&gt;

&lt;p&gt;Neyse aradan 2 hafta geçti. Ekim oldu işte. Bir kere aradım hatta çıkmaları toplam 12 dakika sürdü. Şikayetim var dedim. Bir dakika hattan ayrılmayın denildi bana 12 dakika daha bekledim 24 dakika sürdü. Karşımda yavşak yavşak konuşan bir kadın vardı.&lt;/p&gt;

&lt;p&gt;Kusura bakılmasın ama bu kelimeyi ilk defa o akşam kullandım. Bu süreç içerisinde ilk defa kullanmamın bir kötü yanı olmamalı. O an kadın denk geldi erkek olsa da aynısını yapsa aynı şeyleri söylerdim.&lt;/p&gt;

&lt;h3 id=&quot;trksat-1-gnde-balanty-gerekletirdi&quot;&gt;Türksat 1 Günde Bağlantıyı Gerçekleştirdi&lt;/h3&gt;

&lt;p&gt;Daha sonra Twitter üzerinden &lt;a href=&quot;https://twitter.com/mertcangokgoz&quot;&gt;Mertcan&lt;/a&gt; Türksat’ı seçmemi söyledi. Aslında geçmeye kararlıydım. Ancak perşembe gününe kadar Superonline’a süre tanıdım. Bakın hala sabırlıyım bu esnada. Taş olsa çatlardı.&lt;/p&gt;

&lt;p&gt;Ben öyle sakin durdum ki hayatımın rekoru bu. Zamanında elektrik 10 dakika olmayınca sandalye kırardım. Neyse Perşembe günü akşamı da bağlanmayınca aradım Türksat’ı başvurumu yaptım. Ertesi gün yani cuma günü yani dün internetimi aktif ettiler. 1 gün yahu 1 gün… Bağlandı. Akşamüstü de Superonline beni arayıp “Binanızda port yokmuş” şeklinde haber verdi. İptal edin başvurumu dedim ve kapattım.&lt;/p&gt;

&lt;h3 id=&quot;telekom-ve-superonline-ile-64-telefon-grmesi&quot;&gt;Telekom ve Superonline ile 64 Telefon Görüşmesi&lt;/h3&gt;

&lt;p&gt;Bu yazı sayesinde aslında nereyi seçmeniz gerektiğine dair aklınızda bir fikir olmuştur umarım. Son olarak aşağıda şunları belirteyim:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Superonline ile: 46&lt;/li&gt;
  &lt;li&gt;Türk Telekom ile: 18&lt;/li&gt;
  &lt;li&gt;Türksat ile: 3&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;mecbur-deilseniz-kullanmamaya-zen-gsterin&quot;&gt;Mecbur Değilseniz Kullanmamaya Özen Gösterin..&lt;/h3&gt;

&lt;p&gt;telefon görüşmesi gerçekleştirdim. Türksat’ın ilki başvuru içindi. Diğer ikisinin ilkinde abi öğlen geleceğiz diye aradılar. Son aramaları da abi geldik de binanız neredeydi şeklinde aramaları oldu.&lt;/p&gt;

&lt;p&gt;Kısacası müşterilerini mağdur eden Türk Telekom ve Superonline gibi sağlayıcılardan mecbur kalmadıkça hizmet almamak ruh sağlığınız için iyidir. Gerçi ben bu sürede kendimi ilginç bir şekilde bozmadım. Daima kibar kibar konuştum.&lt;/p&gt;
</description>
        <pubDate>Sat, 08 Oct 2016 14:39:00 +0300</pubDate>
        <link>https://aligoren.comhttps://aligoren.com/turk-telekom-superonline-rezaleti</link>
        <guid isPermaLink="true">https://aligoren.comhttps://aligoren.com/turk-telekom-superonline-rezaleti</guid>
      </item>
    
      <item>
        <title>SQL'de Inner Join İşlemleri</title>
        <description>&lt;p&gt;SQL’de normalizasyon işlemlerini gerçekleştirdiğimiz zaman tabloları da bölme işlemini gerçekleştirmiş oluruz. Bu sayede hem normal formlarda bir database tasarımı gerçekleştirmiş oluruz hem de performans kazanabiliriz.&lt;/p&gt;

&lt;p&gt;Bu yazıda bölünmüş tabloların birleştirilmesinde faydalanabileceğimiz INNER JOIN kullanımına değineceğim. Yukarıda değinmiş olduğum performans konusu sadece yukarısı için geçerlidir. Her INNER JOIN performanslı olacak diye bir şey yoktur.&lt;/p&gt;

&lt;p&gt;İki tablo düşünelim. Bu tablolardan birisi kullanıcıların sadece adlarını tutuyor. Bir diğeri ise kullanıcıların sadece açıklamalarını tutuyor. Bu iki tablonun tek sorguda ortak sonuçlar üretmesi gerekiyor. Aslında sanal bir tablo oluştuğunu düşünün. Tıpkı string birleştirme işlemlerinde olduğu gibi. Hemen bunu tanımlayan iki tablo oluşturalım.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE TABLE [UserDetail] (
[ID] int NOT NULL IDENTITY(1,1) ,
[UserID] int NOT NULL ,
[UserDesc] nvarchar(50) NOT NULL
);

CREATE TABLE [Users] (
[ID] int NOT NULL IDENTITY(1,1) ,
[Name] nvarchar(50) NOT NULL
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bu tabloları oluşturduktan sonra veri ekleme işlemlerini yapmalıyız. Bu işlemlerden ilkinde sadece kullanıcının adı yer alacakken, ikinci tabloda yani UserDetail tablosunda ise ilgili kullanıcının hem ID’si hem de açıklaması yer alacak. Eklemeleri ona göre gerçekleştirelim.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;INSERT INTO Users(Name) VALUES('Ali');
INSERT INTO Users(Name) VALUES('Ali2');
INSERT INTO Users(Name) VALUES('Ali3');

INSERT INTO UserDetail(UserID, UserDesc) VALUES(1, 'Açıklama');
INSERT INTO UserDetail(UserID, UserDesc) VALUES(2, '2. Açıklama');
INSERT INTO UserDetail(UserID, UserDesc) VALUES(3, '3. Açıklama');
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Şimdi normalde veri çekme işlemini yapıyor gibi SELECT sorgumuzu yazalım. Burada farklı olan şey ise veriyi seçeceğimiz asıl tablonun hemen yanına INNER JOIN yazmamız. JOIN işleminden sonra asıl tabloya bağlamak istediğimiz tabloyu belirtiyoruz. WHERE işleminin JOIN işlemlerinden sonra kullanıldığına da dikkat edin.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT u.Name, ud.UserDesc FROM Users u
INNER JOIN UserDetail ud ON  u.ID=ud.UserID WHERE u.ID=2;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki kodda Users tablosunda bulunan Name kolonunu, UserDetail tablosunda bulunan UserDesc kolonunu, her iki tabloda da eşleşen kayda göre getir dedik.&lt;/p&gt;

&lt;p&gt;Buradan sahte bir kod yapısıyla şunu anlayabiliriz:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-pseudo&quot;&gt;if UsersTablosundakiUserID eşittir UserDetaildekiUserID ise
	getir(UsersTablosundakiUserID)

# Yani UserID2=UserDetailID2 ise WHERE ID=2 olanı getir
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;İşlemin nasıl çalıştığını yukarıdaki kodla basitçe anlatmaya çalıştım. Anlayacağımız bir diğer şey ise görüyoruz ki sadece birbirine eşit olan kayıtları getiriyor. Burada bu işlemden sonra çıktının şöyle olduğunu görmekteyiz:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;UserDesc&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Ali2&lt;/td&gt;
      &lt;td&gt;2. Açiklama&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Dilersek bir WHERE sorgusunu kullanmadan tablodaki eşleşen tüm kayıtları getirebiliriz. Bunun için UserDetail tablosunu düzenleyip UserID bölümünü NULLABLE olarak ayarlayalım ve bu tabloya bir veri eklemesi gerçekleştirelim.&lt;/p&gt;

&lt;p&gt;UserDetail tablosuna eklenen 4. verinin UserID kolonuna eklenecek değer NULL olarak gönderilsin.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE TABLE [UserDetail] (
[ID] int NOT NULL IDENTITY(1,1) ,
[UserID] int,
[UserDesc] nvarchar(50) NOT NULL
);

CREATE TABLE [Users] (
[ID] int NOT NULL IDENTITY(1,1) ,
[Name] nvarchar(50) NOT NULL
);

INSERT INTO Users(Name) VALUES('Ali');
INSERT INTO Users(Name) VALUES('Ali2');
INSERT INTO Users(Name) VALUES('Ali3');
INSERT INTO Users(Name) VALUES('Ali4');

INSERT INTO UserDetail(UserID, UserDesc) VALUES(1, 'Açıklama');
INSERT INTO UserDetail(UserID, UserDesc) VALUES(2, '2. Açıklama');
INSERT INTO UserDetail(UserID, UserDesc) VALUES(3, '3. Açıklama');
INSERT INTO UserDetail(UserID, UserDesc) VALUES(NULL, '4. Açıklama');
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Daha sonra JOIN işlemini WHERE kullanmadan çalıştıralım:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT u.Name, ud.UserDesc FROM Users u
INNER JOIN UserDetail ud ON  u.ID=ud.UserID;
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;UserDesc&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Ali&lt;/td&gt;
      &lt;td&gt;Açiklama&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Ali2&lt;/td&gt;
      &lt;td&gt;2. Açiklama&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Ali3&lt;/td&gt;
      &lt;td&gt;3. Açiklama&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Fark ettiyseniz çıktıda eklediğimiz 4. veri yok. Çünkü iki tablodaki ortak kabul edilen alanlardan birisi diğerinden farklı. Eşleşme sağlanamıyor. Buradan INNER JOIN için NULL olmayan, eşleşen kayıtları getiren SQL ifadeleridir çıkarımını da gerçekleştirebiliriz.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Yöntem WHERE Sorgusu Kullanmak&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Evet eğer aklınızda WHERE sorgusu belirmiş olabilir. İkinci yöntem olarak WHERE sorgusu da kullanabilirsiniz&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT u.Name, ud.UserDesc
FROM Users u, UserDetail ud
WHERE u.ID=ud.UserID

-- ya da

SELECT u.Name, ud.UserDesc
FROM Users u, UserDetail ud
WHERE u.ID=ud.UserID and u.ID=2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yine aynı çıktıyı verecektir. İkisi arasındaki farkları araştırmanız, neyin nerede kullanılacağını bilmeniz sizin için iyi olur.&lt;/p&gt;

&lt;p&gt;Örnek SQL Fiddle &lt;a href=&quot;http://sqlfiddle.com/#!6/1e87c/2&quot;&gt;Linki&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 07 Oct 2016 23:17:00 +0300</pubDate>
        <link>https://aligoren.comhttps://aligoren.com/sqlde-inner-join-islemleri</link>
        <guid isPermaLink="true">https://aligoren.comhttps://aligoren.com/sqlde-inner-join-islemleri</guid>
      </item>
    
      <item>
        <title>MSSQL'de Stored Procedure Kullanımı</title>
        <description>&lt;p&gt;Daha önceleri çok fazla veritabanı kullanan işlemler yapmadım. O yüzden şu sıralar pek yeniyim. Öğrenme aşamaları hızlıca gelişiyor.&lt;/p&gt;

&lt;p&gt;Stored Procedure dediğimiz şey ise veritabanında tutulan ve ilk çalışma derlenen daha sonraları tekrar derlenmeye ihtiyaç duyulmayan SQL ifadeleridir. Yani bir Stored Procedure oluşturursanız tekrar aynı isimde Stored Procedure’ü aynı veritabanı için oluşturamıyorsunuz.&lt;/p&gt;

&lt;p&gt;Bu gibi durumlarda oluşturduğunuz Stored Procedure’ü Modify etmeniz gerekiyor ki bu da ALTER komutu ile birlikte oluyor. Stored Procedure’lerin belli başlı avantajları vardır.&lt;/p&gt;

&lt;p&gt;Bu avantajlardan en önemlisi kuşkusuz hızlı çalışmalarıdır. Bunun sebebi ise oluşturulan Stored Procedure bir kere derlendikten sonra tekrar tekrar derlemenize gerek kalmaz. O zaman buradan Stored Procedure’lerin veritabanı tarafında saklandığını anlayabiliriz.&lt;/p&gt;

&lt;p&gt;Eğer uygulama katmanında çalışıyor olsaydık tek bir sorgu tekrar tekrar derlenmelidir ki bu da büyük sistemlerde büyük bir sorun haline gelebilir. Tabii ki zaman kaybı anlamına da geliyor. Yanlış anlaşılmasın C# tarafında SQL kodu yazıp, INSERT ettirmekle burada yazıp ettirmek mantık olarak pek farklı değil.&lt;/p&gt;

&lt;p&gt;Ama olur da uygulama katmanında kullanmanız gerekiyordur size daha rahat bir geliştirme şansı sunar ki şöyle düşünün 20 satırlık SQL sorgunuz var ve siz bunu Entity Framework kullanarak geliştirmiyorsunuz. Her sorgunun 20 satır sürdüğünü hayal edersek sanırım Database Provider baya bir şişecektir. Stored Procedure kullanmak bunun da önüne geçebilir.&lt;/p&gt;

&lt;p&gt;Bir diğer avantaj ise benim geçenlerde kullandığım özellikleri kullandırması yani T-SQL komutlarını kullanabiliyorsunuz ve if-else gibi while gibi işlemleri de gerçekleştirebiliyorsunuz.&lt;/p&gt;

&lt;p&gt;Eğer birisi veritabanınıza erişim imkanına sahipse yapacak bir şey yok ama veritabanı erişimine sahip olmayıp bir şekilde uygulama katmanındaki kodlara erişimi olan kişiler sadece Stored Procedure ve o Procedure’ün aldığı parametreleri göreceği için güvenlik anlamında da avantaj sağlar.&lt;/p&gt;

&lt;p&gt;Peki nasıl kullanabiliriz dediğinizi biliyorum. Aslında bir Stored Procedure çok zor da değil. Parametre alan ya da almayan olarak türleri vardır ve RETURN komutunu da kullanabilirsiniz. Basit olarak parametre alamayan bir Stored Procedure şöyle oluşturulur:&lt;/p&gt;

&lt;p&gt;CREATE PROC ProcedureAdi şeklinde ya da CREATE PROCEDURE ProcedureAdi şeklinde olabilir. Ben genellikle PROC kullanıyorum. Şimdi parametre almayan ve sadece SELECT sorgusunu döndüren bir PROC yazalım:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE PROC GetUsers
AS
    SELECT * FROM Users
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Evet parametre almayan basit olan bir Procedure yazdık bile. Bu Procedure bize kullanıcıları listelemede yardımcı olacaktır. Hmm nasıl çağırıldığını yazmadık:/&lt;/p&gt;

&lt;p&gt;EXEC komutunu kullanarak çalıştırma işlemini yaparız. Eğer Procedure parametre almıyorsa basit şöyledir:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;EXEC GetUsers
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Peki tamam parametreli olanlar nasıl? Herhangi bir programlama dilinde method oluşturduğunuzu düşünün ve bu metodların parametre aldığını düşünün. Aynı şekilde Procedure’ler de parametreleri böyle alırlar. Tek farkı ise parantezler içerisinde parametreler almak yerine normal şekilde almak:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;EXEC GetUsers 'Ali'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Buradaki senaryo şöyle:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT * FROM Users WHERE Name='Ali'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bunu Stored Procedure ile şöyle yapabiliriz.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE PROC GetSpesificUser
	@UserName nvarchar(30)
AS
    SELECT * FROM Users WHERE Name=@UserName

EXEC GetSpesificUser 'Ali'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Eğer birden fazla parametre alacaksa da virgülle belirtilmeli.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE PROC GetSpesificUserWithID
	@ID int,
	@UserName nvarchar(30)
AS
    SELECT * FROM Users WHERE ID=@ID and Name=@UserName
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tabii bu Stored Procedure çalıştırılırken de alacağı parametre sırasına göre parametreleri, aldığı türe göre Stored Procedure’e yollamalıyız. Örnek:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;EXEC GetSpesificUserWithID 1, 'Ali
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Mon, 03 Oct 2016 23:12:00 +0300</pubDate>
        <link>https://aligoren.comhttps://aligoren.com/mssqlde-stored-procedure-kullanimi</link>
        <guid isPermaLink="true">https://aligoren.comhttps://aligoren.com/mssqlde-stored-procedure-kullanimi</guid>
      </item>
    
      <item>
        <title>SQL Server'da Procedure'e GETDATE() Yollamak</title>
        <description>&lt;p&gt;SQL Server tarafında çalışma yaparken bazen oluşturmuş olduğunuz Stored Procedure’lere parametre olarak GETDATE() yollamak isteyebiliriz.&lt;/p&gt;

&lt;p&gt;Kısaca bir örnek verecek olursak kullanıcıların kaydedildiği bir tablo var normalde bu işlemleri bir programlama dili yardımıyla zaten hallediyordunuz ama işiniz SQL Server’a düştü.&lt;/p&gt;

&lt;p&gt;Senaryoya göre ekleme işleminiz şöyle gerçekleşebilir:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;EXEC InsertNewUser 'Ali', '123456', GETDATE();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ancak burada bir hata alacaksınız. Bu hatanın içeriğinde nvarchar ve date ile ilgili bir metin yer alacaktır.&lt;/p&gt;

&lt;p&gt;Bu hata’yı çözmenin basit bir yolu var. Tarih bilgisini saklayacak alanı nullable olarak tanımlayarak basit bir kontrolle bu işlemi halledebiliriz. Örneğin önceden oluşturduğumuz PROCEDURE şu haldeydi:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE PROC InsertNewUser
	@UserName nvarchar(30),
	@UserPassword nvarchar(30),
	@RegDate date
AS
    INSERT INTO Users(UserName, UserPassword, RegDate)
    VALUES (@UserName, @UserPassword, @RegDate)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Burada aslında bir hata yok PROCEDURE ilgili değeri aldığı sürece doğru çalışıyor. Ama direkt olarak bugünün tarihini almasını istediğimiz durumlarda parametre almıyor. O zaman oluşturduğumuz PROC üzerinde bir değişiklik yaparak başlangıçta nullable bir date değişkeni oluşturup durumunu kontrol edebiliriz. PROCEDURE düzenlenir ve şöyle bir işlem gerçekleştirilir:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;ALTER PROC InsertNewUser
	@UserName nvarchar(30),
	@UserPassword nvarchar(30),
	@RegDate date = NULL
AS

IF @RegDate IS NULL
    SET @RegDate = GETDATE()

    INSERT INTO Users(UserName, UserPassword, RegDate)
    VALUES (@UserName, @UserPassword, @RegDate)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Artık bu sayede SQL Server tarafında NULL değer almış olsa dahi bugünün tarihini ekleyecektir. Eğer sizin için bu tip durumlar hayati önem taşıyorsa bu yapıyı kullanabilirsiniz. Basit olarak NULL yazmak, formatlı tarih yollamaktan daha kolay geliyor da olabilir. Unutmadan artık SP şöyle çalışacaktır:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;EXEC InsertNewUser 'Ali', 'GÖREN', NULL
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bu çalışmanın SQL Fiddle üzerindeki örneğine şuradan ulaşabilirsiniz:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://sqlfiddle.com/#!6/921f6/1&quot;&gt;http://sqlfiddle.com/#!6/921f6/1&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 03 Oct 2016 23:09:00 +0300</pubDate>
        <link>https://aligoren.comhttps://aligoren.com/sql-serverda-proceduree-getdate-yollamak</link>
        <guid isPermaLink="true">https://aligoren.comhttps://aligoren.com/sql-serverda-proceduree-getdate-yollamak</guid>
      </item>
    
      <item>
        <title>SQL Server'da Filtreli Arama Gerceklestirme</title>
        <description>&lt;p&gt;Merhaba. Karmaşık bir arama işleminiz olabilir. Örneğin basit bir uygulama ile olaya bakalım:&lt;/p&gt;

&lt;p&gt;Varsayalım ki InsanKaynaklari adında bir tablonuz bulunmakta. Bu tablo üzerinde bazı aramalar gerçekleştirmek istiyorsunuz. Örneğin bu aramalar&lt;/p&gt;

&lt;p&gt;Doğum Tarihi, Doğum Yeri, Cinsiyet, Medeni Durum, Maaş, Eğitim Düzeyi, Mesleki Belge ya da Meslek şeklinde olabilir. Normalde bir aramada tek şekilde şöyle bakabilirdik&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT * FROM InsanKaynaklari as Ik
WHERE Ik.MedeniDurum='Bekar' AND Ik.Cinsiyet='Erkek'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bu sorgu ilk başlangıç olarak işimizi görüyor olabilir. Ancak bazı durumlarda sorgularımız sadece iki tane ile sınırlı kalmayabilir ve işin ilginç noktası bu sorguları örneğin C# tarafında gerçekleştiriyor olabiliriz. 6-7 adet textBox içinden sadece 3 tanesinin dolu olduğunu, diğerlerinin NULL gönderildiğini düşünün.&lt;/p&gt;

&lt;p&gt;Bu gibi durumlar için bir Stored Procedure oluşturabiliriz. Bir Stored Procedure oluşturma aşamasını bildiğimizi varsayarak basit olarak bir SP oluşturalım. Örneğin:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE PROCEDURE PersonelAra
	@dtarih date,
	@dyeri nvarchar(50),
	@cinsiyet nvarchar(5),
	@mdurum nvarchar(15),
	@maas nvarchar(50), -- bilinçli money yapmadım
	@eduzey nvarchar(50),
	@mbelge nvarchar(50),
	@meslek nvarchar(50)
AS
BEGIN

END
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;şeklinde bir hayali SP oluşturdum. Bu işlemde WHERE harici belki bize yabancı gelen bir method göreceğiz. COALESCE methodu. Bu metoda bakarsak eğer sınırsız sayıda parametre alabiliyor. Yaptığı işlemse ilk olarak NULL olmayan değeri geri döndürmektir. Eğer değer NULL ise zaten bu değeri geri döndürecektir.&lt;/p&gt;

&lt;p&gt;Çalışma mantığına bakacak olursak öyle işlemektedir. Varsayalım ki WHERE kontrolü gerçekleştiriyoruz:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;WHERE kolonAdi=COALESCE(@spDegiskeni, kolonAdi)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;şeklinde bir kontrol ile null ya da null olmayan tüm değerleri listeletebiliriz. Bu bilgilere bakarak o zaman ben diyebilirim ki gelen her değişkeni COALESCE ile işletip null olmayan bir değer döndürebilirim. Eğer NULL ise yine gelecek diyebilirim.&lt;/p&gt;

&lt;p&gt;Örneğin yukarıda oluşturduğumuz SP içinden devam edelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT isim, soyisim, FROM InsanKanaklari as Ik
    WHERE (
        ik.dogumtarihi=COALESCE(@dtarih, ik.dogumtarihi)
        AND ik.dogumyeri=COALESCE(@dyeri, ik.dogumyeri)
        AND ik.cinsiyet=COALESCE(@cinsiyet, ik.cinsiyet)
        AND ik.medenidurum=COALESCE(@mdurum, ik.medenidurum)
        AND ik.maas=COALESCE(@maas, ik.maas)
        AND ik.egitimduzeyi=COALESCE(@eduzey, ik.egitimduzeyi)
        AND ik.meslekibelge=COALESCE(@mbelge, ik.meslekibelge)
        AND ik.meslek=COALESCE(@meslek, ik.meslek)
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Burada öncelikle WHERE şartını gerçekleştirdik. Daha sonra ise WHERE şartında kolonun değerini, COALESCE işlemi ile karşılaştırıp değerleri getirebiliyoruz. COALESCE metodu ilk parametresinde sorgulanacak değeri, ikinci parametresinde de tablo kolonunu aldı. Bunu görerek filtreli sorgulama gerçekleştirebiliriz.&lt;/p&gt;

&lt;p&gt;Son adımda SP şöyle oluyor:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE PROCEDURE PersonelAra
	@dtarih date,
	@dyeri nvarchar(50),
	@cinsiyet nvarchar(5),
	@mdurum nvarchar(15),
	@maas nvarchar(50), -- bilinçli money yapmadım
	@eduzey nvarchar(50),
	@mbelge nvarchar(50),
	@meslek nvarchar(50)
AS
BEGIN
    SELECT isim, soyisim, FROM InsanKanaklari as Ik
        WHERE (
            ik.dogumtarihi=COALESCE(@dtarih, ik.dogumtarihi)
            AND ik.dogumyeri=COALESCE(@dyeri, ik.dogumyeri)
            AND ik.cinsiyet=COALESCE(@cinsiyet, ik.cinsiyet)
            AND ik.medenidurum=COALESCE(@mdurum, ik.medenidurum)
            AND ik.maas=COALESCE(@maas, ik.maas)
            AND ik.egitimduzeyi=COALESCE(@eduzey, ik.egitimduzeyi)
            AND ik.meslekibelge=COALESCE(@mbelge, ik.meslekibelge)
            AND ik.meslek=COALESCE(@meslek, ik.meslek)
    )
END
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Wed, 03 Aug 2016 23:04:00 +0300</pubDate>
        <link>https://aligoren.comhttps://aligoren.com/sql-serverda-filtreli-arama-gerceklestirme</link>
        <guid isPermaLink="true">https://aligoren.comhttps://aligoren.com/sql-serverda-filtreli-arama-gerceklestirme</guid>
      </item>
    
  </channel>
</rss>
