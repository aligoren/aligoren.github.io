<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ali GÖREN...</title>
    <description>.NET, SQL, Python, Açık Kaynak</description>
    <link>https://aligoren.com/</link>
    <atom:link href="https://aligoren.com/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>jQuery ile Dinamik İşlemler</title>
        <description>&lt;p&gt;Selam. Bu yazının içeriğini Tayfun Erbilen’in soru-cevap platformu olarak açtığı UzmanCevap üzerinde yer alan bir 
&lt;a href=&quot;http://uzmancevap.org/soru/7644/jquery-kosulu-renklendirme&quot;&gt;sorudan&lt;/a&gt; çıkarıyorum.&lt;/p&gt;

&lt;p&gt;Sorun şu. Bir arkadaşımız HTML tablo oluşturmuş. Muhtemelen endüstriyel bir sistem var. Bu sistemde kapasitelerin ölçümünü yapıyor.
Kapasitesi belli bir alanın üzerinde olana da renk vermek istiyor. Ama burada işlemin jQuery ile nasıl yapılacağı ile ilgileniyor.
Normalde bunu back-end kısımda sorguyu çekerken de halledebileceğinizi söylemem gerekiyor.&lt;/p&gt;

&lt;p&gt;Sorunun özüne dönersek ilk satırda bir adet robot bulunmakta. Bu robota dair üç adet kapasite birimi bulunmakta.
Arkadaşımız diyor ki kapasitesi 12’yi geçen hücrenin arkaplanı kırmızı renk olsun. Aslında kendisi zaten bir adet hücreyi yapmış.
Fakat o tüm hücrelerin hesaplanmasını ve aslında tüm satırların da bu hesaba dahil olmasını istiyor.&lt;/p&gt;

&lt;p&gt;Öncelikle basit olarak tablomuzu şöyle size aktarayım kodları da yer alsın:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;table&amp;gt;
  &amp;lt;thead&amp;gt;
    &amp;lt;th&amp;gt;Ad&amp;lt;/th&amp;gt;
    &amp;lt;th&amp;gt;Kapasite&amp;lt;/th&amp;gt;
    &amp;lt;th&amp;gt;Kapasite 2&amp;lt;/th&amp;gt;
    &amp;lt;th&amp;gt;Kapasite 3&amp;lt;/th&amp;gt;
  &amp;lt;/thead&amp;gt;
  &amp;lt;tbody&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;Robot1&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;13&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;12&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;11&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;Robot2&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;13&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;13&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;13&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;Robot3&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;4&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;18&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;21&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;Robot4&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;5&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;21&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;11&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
  &amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;#Tablo Örnek&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/robot_table.png&quot; alt=&quot;/images/posts/robot_table.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Neyse bu tabloda belli başlı alanlar kurallı olarak renklendirilmeli. Arkadaşımızın kuralı 12’den büyük olanların arkaplanı kırmızı olsun şeklinde.
Ben tüm hücrelere class vererek tek bir noktanın kontrolünün sağlanmasını istedim. Her bir satırda bulunan her bir hücrenin kontrolünü de sağlayarak bu işlemi tamamlayalım.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;#jQuery Kodu&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;$(&quot;table&quot;).ready(function() {
  	$(this).find(&quot;tr td.kapasite&quot;).each(function() {
    	if(parseInt($(this).text()) &amp;gt; 12) {
      	$(this).css(&quot;background-color&quot;, &quot;red&quot;)
      }
    })
    
  })
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki kodla tablo hazır olduğu anda hazır olan tabloda dolaşıyoruz. Öncelikle o tabloda tr yani satırı yakalıyoruz.
Ardından o satırda yer alan hücreyi dolaşıyoruz tabi bunu yaparken ana şartıız ise class’ı &lt;strong&gt;kapasite&lt;/strong&gt; olanı dolaşıyoruz.
Tabloda 50 satır varsa 50 satırı ve hücrelerini dolaşacak kısacası. Bu işlemi &lt;code&gt;each()&lt;/code&gt; fonksiyonu ile yapıyoruz.&lt;/p&gt;

&lt;p&gt;Daha sonra ilk dolaşılan satırdaki ilk hücrede yer alan değerin text’ini int türüne parse edip arkadaşımızın istediği koşuldan büyük mü kontrol ediyoruz.
Zaten sonrası ise o hücreye yeni bir CSS atamak. Aynı işlemi buton için de yapabiliriz. Yani butona tıklayınca bu işlem gerçekleşmeli.
Tabii bu işlemde bu sefer değer inputtan gelecek.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;$(&quot;button&quot;).on(&quot;click&quot;, function() {
      $(&quot;table&quot;).ready(function() {
      var kapasite = $(this).find(&quot;tr td.kapasite&quot;).each(function() {
      	$(this).css(&quot;background-color&quot;, &quot;&quot;)
        if(parseInt($(this).text()) &amp;gt; parseInt($(&quot;[name='txtSayi']&quot;).val())) {
          $(this).css(&quot;background-color&quot;, &quot;red&quot;)
        }
      })

    })
  })
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;jsfiddle-zerinde-rnek&quot;&gt;JSFiddle Üzerinde Örnek&lt;/h2&gt;

&lt;script async=&quot;&quot; src=&quot;//jsfiddle.net/cc6ded5w/1/embed/&quot;&gt;&lt;/script&gt;

&lt;p&gt;Evet işlem bu kadar.&lt;/p&gt;
</description>
        <pubDate>Sat, 31 Dec 2016 15:50:00 +0300</pubDate>
        <link>https://aligoren.com/jquery-ile-dinamik-islemler</link>
        <guid isPermaLink="true">https://aligoren.com/jquery-ile-dinamik-islemler</guid>
      </item>
    
      <item>
        <title>PHP ile Base URL Almak</title>
        <description>&lt;p&gt;Selamlar. Ufak tefek PHP projeleri ile mevcut bilgimi daha yukarı taşımayı hedefliyorum. Tabi her projede yaşanabilmesi muhtemel bazı sorunları ben de yaşadım. Bu sorunlardan birisi de base url sorunu.&lt;/p&gt;

&lt;p&gt;Soruna dair cevabı Stackoverflow üzerinde arıyordum. Bir başlığa denk &lt;a href=&quot;http://stackoverflow.com/questions/2820723/how-to-get-base-url-with-php/41407858&quot;&gt;geldikten&lt;/a&gt; sonra oturup kodunu kendim yazmalıyım dedim.&lt;/p&gt;

&lt;p&gt;Sorun şu normalde &lt;code&gt;http://localhost&lt;/code&gt; adresi bizim base_url adresimiz fakat proje bir alt klasörde yer alıyorsa o zaman sıkıntılar çıkabiliyor. Çünkü &lt;code&gt;http://localhost/proje&lt;/code&gt; böyle bir adrese sahip olabilirsiniz ve dahası bu proje yolunda çalışırken htaccess kullanarak diğer sayfaları sanki bir klasörmüş gibi gösterebilirsiniz. Bu nedenden dolayı da mutlak url’yi yakalamakta sorun yaşayabiliyorsunuz. Bunun birden fazla çözüm yöntemi var. Öncelikle en basit olanını yapalım:&lt;/p&gt;

&lt;h2 id=&quot;zm-1&quot;&gt;Çözüm 1:&lt;/h2&gt;

&lt;p&gt;Bu yöntemde, base_url methodu tanımlanır ve o yönteme statik url verilir:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;function base_url() {
	return 'http://localhost/proje';
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;zm-2&quot;&gt;Çözüm 2:&lt;/h2&gt;

&lt;p&gt;Bu yöntemde biraz programlama beceriniz önemli aslında. Ben trait kullandım, çünkü bu kod şu anki projemin bi parçası. Multiple olarak extends işlemi yapamadığım için 5.4 ile gelen traitleri kullanmaya karar verdim.&lt;/p&gt;

&lt;h3 id=&quot;gereksinimler&quot;&gt;Gereksinimler:&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;- Gezindiğimiz alan adı: $_SERVER['SERVER_NAME'];
- Şu anda bulunduğumuz sayaf: $_SERVER['REQUEST_URI'];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bu işlemde mevcut bulunduğumuz sayfayı PHP’nin &lt;code&gt;str_replace()&lt;/code&gt; fonksiyonunu kullanarak temizleyeceğiz. Zaten düz root ise hiçbir şey görünmeyecek. Yok farklı URL’lerde isek o zaman kalan kısım görülecektir. Örneğin şöyle:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;/*
http://localhost =&amp;gt; return &quot;&quot;
http://localhost/proje =&amp;gt; return &quot;/proje&quot;
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki gibi bir temizleme işlemi sonrası yapılması gereken PHP’nin &lt;code&gt;explode()&lt;/code&gt; fonksiyonunu slash ile kullanarak slashtan sonra gelen ilk değeri almak. Yani şöyle düşünelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;/*
/proje
/proje/abc/
/proje/a/b/c/d/e/f/g
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;İlk satırdaki proje değerini almak zaten sıkıntılı değil ama bulunduğunuz sayfa 3. satırdaki gibi ise bir problemimiz var demektir. Bu yüzden explode ile böldüklerimizin ilkini alıyoruz. Bu genelde projenin root dizinidir.&lt;/p&gt;

&lt;p&gt;Dizinin altındaki dizinlere maalesef bir çözümüm yok, o durumlarda artık manuel olarak ilk yöntemi denemelisiniz. Neyse bu işlem sonrasında ise dönen array türü değerin 1. indexini çağırıyoruz.&lt;/p&gt;

&lt;p&gt;Bu projemizin root olarak görünen klasörüdür. Yani &lt;code&gt;/proje/a/b/c/d/e/f/g&lt;/code&gt; gibi bir adresten sadece &lt;strong&gt;proje&lt;/strong&gt; değerini alıyoruz. Ve ilk değerin başına tekrar bir slash ekliyoruz Son olarak dönen değer &lt;em&gt;”/”&lt;/em&gt; ya da &lt;em&gt;“/proje_kok_dizini”&lt;/em&gt; şeklinde oluyor. Aslında senaryo olarak size bu işlemin nasıl yapacağını söylediğime göre kodlaması da basit anlamda kafanızda canlandı. Yine de kodlarını paylaşayım:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;url.php&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;trait URL {
    private $url = '';
    private $current_url = '';
    public $get = '';

    function __construct()
    {
        $this-&amp;gt;url = $_SERVER['SERVER_NAME'];
        $this-&amp;gt;current_url = $_SERVER['REQUEST_URI'];

        $clean_server = str_replace('', $this-&amp;gt;url, $this-&amp;gt;current_url);
        $clean_server = explode('/', $clean_server);

        $this-&amp;gt;get = array('base_url' =&amp;gt; &quot;/&quot;.$clean_server[1]);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;index.php&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;require_once 'url.php'

class Home
{
    use URL;
}

$h = new Home();

// Bu satır HTML kodları içermektedir.
// O yüzden üst kısımda PHP taglerini kapatmalısınız.

&amp;lt;a href=&quot;&amp;lt;?=$h-&amp;gt;get['base_url']?&amp;gt;&quot;&amp;gt;Base&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bu yazıyı Stackoverflow’da verdiğim &lt;a href=&quot;http://stackoverflow.com/a/41407858/3821823&quot;&gt;şu&lt;/a&gt; cevaptan esinlenerek oluşturdum&lt;/p&gt;
</description>
        <pubDate>Sat, 31 Dec 2016 15:50:00 +0300</pubDate>
        <link>https://aligoren.com/php-ile-base-url-almak</link>
        <guid isPermaLink="true">https://aligoren.com/php-ile-base-url-almak</guid>
      </item>
    
      <item>
        <title>Atıştırmalık MongoDB Yazısı - 2</title>
        <description>&lt;p&gt;Selam bu yazı bir önceki &lt;a href=&quot;https://aligoren.com/atistirmalik-mongodb-yazisi&quot;&gt;Atıştırmalık MongoDB Yazısı&lt;/a&gt;‘nın devamı niteliğinde bir yazı.
Bu yazıda MongoDB ile Update ve Delete işlemlerini anlatacağım. Klasik SQL yöntemlerine göre farklılıklar içerdiğini önceki yazımda da belirtmiştim.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/mongo.png&quot; alt=&quot;/images/posts/mongo.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;mongodbyi-dosyadan-okuyalm&quot;&gt;MongoDB’yi Dosyadan Okuyalım&lt;/h3&gt;

&lt;p&gt;MongoDB için shell güzel bir araç. Ancak uzun Mongo sorgularında shell üzerinde girintiler ve diğer işlemler programlama anlamında pek de kolaylık sağlamıyor.
MongoDB’yi geliştiren ekip böyle durumları tahmin ederek bir kolaylık sağlamış. Örneğin şöyle bir sorguyu shell ile yazdığınızı düşünün:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;use deneme;

db.x.insert({
	&quot;kolon&quot;: &quot;içerik&quot;,
	&quot;kolon2&quot;: &quot;içerik2&quot;,
	&quot;kolon3&quot;: &quot;içerik3&quot;,
	&quot;kolon4&quot;: &quot;içerik4&quot;,
	&quot;kolon5&quot;: &quot;içerik5&quot;,
	&quot;kolon6&quot;: &quot;içerik6&quot;,
	&quot;kolon7&quot;: &quot;içerik7&quot;,
	&quot;kolon8&quot;: &quot;içerik8&quot;,
	&quot;kolon9&quot;: &quot;içerik9&quot;,
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki sorgulama işlemlerini shell’de yapmak inanın gerçekten zahmetli bir işlem. Bunun için yukarıdaki kodları js uzantılı bir dosyaya kaydedin
&lt;strong&gt;(Farklı uzantıları denemedim)&lt;/strong&gt; ve komut satırından şu komutu verin: &lt;code&gt;mongo &amp;lt; dosyaniz.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Evet bu kadar :)&lt;/p&gt;

&lt;h3 id=&quot;nasl-yaplyor-bu-update&quot;&gt;Nasıl Yapılıyor Bu Update?&lt;/h3&gt;

&lt;p&gt;Yukarıdaki X collection’ında yer alan içeriklerden &lt;code&gt;&quot;kolon4&quot;&lt;/code&gt; e ait datayı değiştirelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.x.update(
	{
		&quot;kolon4&quot;: &quot;Yenilendi&quot;
	}
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;İstersek şöyle bir sorgu ile kolon4’e ait yeni değeri görüntüleyebiliriz:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.x.find()[1][&quot;kolon4&quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tabii bu kesin bir yöntem olmayabiliyor. Bunu anlamanın en kolay olu koleksiyonu yazdırmanızdan geçiyor. Hem eski değer hem de yeni değer görülebiliyor.
Tabii yaptığınız işlem sonucunda &lt;strong&gt;nInserted&lt;/strong&gt; yerine &lt;strong&gt;nModified&lt;/strong&gt; içinde bir rakam göreceksiniz.&lt;/p&gt;

&lt;p&gt;Yine aynı şekilde &lt;a href=&quot;https://docs.mongodb.com/manual/reference/method/db.collection.updateMany/#db.collection.updateMany&quot;&gt;updateMany&lt;/a&gt; ve &lt;a href=&quot;https://docs.mongodb.com/manual/reference/method/db.collection.updateOne/#db.collection.updateOne&quot;&gt;updateOne&lt;/a&gt; metodlarını kullanarak çoklu ya da tekil güncelleme işlemlerini de yapabilirsiniz. Bu iki metoda değinmiyorum çünkü Many ve One ne işe yarıyor bunları önceki yazıda anlatmıştım. Kullanımdan kaynaklı farklılılar var sadece.&lt;/p&gt;

&lt;p&gt;Bunlar haricinde yeni bir metodla karşılaşıyoruz. Bu metodun adı &lt;strong&gt;replaceOne()&lt;/strong&gt; evet bu yeni metod, koşulda eşleşme gerçekleşirse gerçekleşen ilk eşleşmeye işlem yapar.
Örneği bir SQL cümlesinden verelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT * FROM Kullanicilar WHERE Adi='Ali'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki satır birden fazla Ali kullanıcısını döndürebilir. Ancak &lt;strong&gt;replaceOne()&lt;/strong&gt; metodu dönen bu değerlerden ilk olanını bulur ve güncelleme işlemini yapar.
Örnek kullanımı şöyledir:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.x.replaceOne(
	{
		kolon: &quot;icerik&quot;
	},
	{
		kolon: &quot;Yeni icerik&quot;
	}
)

/*
ÇIKTISI:

{ &quot;acknowledged&quot; : true, &quot;matchedCount&quot; : 1, &quot;modifiedCount&quot; : 1 }
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;İsterseniz &lt;strong&gt;db.x.find()&lt;/strong&gt; diyerek çıkan sonucu görüntüleyebilirsiniz:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{ &quot;_id&quot; : ObjectId(&quot;5856e7347db38a7560ec56ae&quot;), &quot;kolon&quot; : &quot;Yeni icerik&quot; }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Güncelleme işlemleri sadece bu kadarla sınırlığı değil. Bu işlemleri siz verdiğim linklerden daha geniş bir şekilde öğrenebilirsiniz.&lt;/p&gt;

&lt;h3 id=&quot;nasl-sileceiz&quot;&gt;Nasıl Sileceğiz?&lt;/h3&gt;

&lt;p&gt;RDBMS kullananlar olarak önceki alışkanlıklarımızdan kopamıyoruz. MongoDB’de bu alışkanlıklardan kopabilmiş değil.
Evet tahmin edildiği üzere silme işlemi destekliyor MongoDB. Ancak biraz farklı. Bunun için şu metodları bize sunuyor:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- remove()
- deleteOne()
- deleteMany()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;remove Metodu&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bunlardan ilki olan &lt;strong&gt;remove()&lt;/strong&gt; metoduyla tek seferde tüm koleksiyonu silebildiğimiz gibi koşul kullanarak koleksiyonda toplu silme de yapabiliriz.
Burada bilmemiz gereken toplu silme yaptığımızdır.&lt;/p&gt;

&lt;p&gt;Örnek herhangi bir koşula bağlı olmaksızın tüm &lt;strong&gt;x&lt;/strong&gt; koleksiyonunu silen sorgu kodunu verelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.x.remove( {} )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Eğer bu silme işleminin bütün tablo geneline değil de sadece belirli değerlere yansımasını istiyorsak şöyle yapmalıyız:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.x.remove({ 
    &quot;kolon&quot;: &quot;Bir İçerik&quot;
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Artık bu sayede içinde &lt;strong&gt;Bir İçerik&lt;/strong&gt; geçen yani tam eşleşme sağlayan tüm değerler x tablosundan silinecektir.
Tüm dokümana &lt;a href=&quot;https://docs.mongodb.com/manual/reference/method/db.collection.remove/#db.collection.remove&quot;&gt;buradan&lt;/a&gt; bakabilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;deleteOne() Metodu&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yine geldik One’lı Many’li metodlara. Mantığı artık söylememe gerek yok. Sadece nasıl çalıştıklarını belirtip bu yazıyı noktalayacağım.
Tamamını anlatmıyorum çünkü artık siz de ben de ufak bilgilere sahibiz ve MongoDB dokümanlarına erişebilir durumdayız :)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.x.deleteOne( { &quot;_id&quot; : ObjectId(&quot;5856e7347db38a7560ec56ae&quot;) } );

/*
ÇIKTISI:

{ &quot;acknowledged&quot; : true, &quot;deletedCount&quot; : 1 }
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki işlemin klasik SQL sorgusu şöyle:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;DELETE FROM Kullanicilar WHERE ID=2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;deleteMany() Metodu&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;İstersek çoklu silme işlemlerini de yapabiliriz. Fakat buradan şunu anlamayalım. Örneğin ID’si 1,2,3,4,5,6 olanları tek tek yazacağız gibi bir şey anlamayalım.
Burada aslında &lt;strong&gt;remove()&lt;/strong&gt; metodundaki toplu silmenin bir benzerini yapabiliriz. Örnek:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.x.deleteMany( { &quot;kolon&quot; : &quot;A Değeri&quot; } );

/*
ÇIKTISI:

{ &quot;acknowledged&quot; : true, &quot;deletedCount&quot; : 1 }
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıda &lt;strong&gt;A Değeri&lt;/strong&gt; sadece 1 adet olduğu için silindiğinde de &lt;strong&gt;deletedCount&lt;/strong&gt; 1 değerini döndürmüştür. Eğer 10 adet aynı değere sahip kayıt olsaydı o değer 10 olacaktı.&lt;/p&gt;

&lt;h2 id=&quot;kaynaklar&quot;&gt;Kaynaklar&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.mongodb.com/manual/tutorial/update-documents/#update&quot;&gt;Update İşlemleri - MongoDB Resmi Dokümanı&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.mongodb.com/manual/tutorial/remove-documents/#delete-methods&quot;&gt;Delete İşlemleri - MongoDB Resmi Dokümanı&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 17 Dec 2016 23:30:00 +0300</pubDate>
        <link>https://aligoren.com/atistirmalik-mongodb-yazisi-2</link>
        <guid isPermaLink="true">https://aligoren.com/atistirmalik-mongodb-yazisi-2</guid>
      </item>
    
      <item>
        <title>Atıştırmalık MongoDB Yazısı</title>
        <description>&lt;p&gt;Selam bu yazı MongoDB’ye yeni giriş yapmış olan ben ve benim gibiler için atıştırmalık bir yazı.
Bu yazıda basit olarak insert ve select işlemlerinden bahsedeceğim. MongoDB nedir gibi artık klişe hale gelmiş bilgileri paylaşmak yerine direkt olarak nasıl yapılır’ı anlatacağım.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[NOT]&lt;/strong&gt;: Yazı uzun bir yazı olmuş. Şimdiden özür dilerim :)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/mongo.png&quot; alt=&quot;/images/posts/mongo.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;online-mongodb-ortamyla-tann&quot;&gt;Online MongoDB Ortamıyla Tanışın&lt;/h2&gt;

&lt;p&gt;Pratiğe giriş yapmadan önce MongoDB bilgisayarınızda kurulu olmalı. MongoShell olmadan bilgisayarınızdan bağlantıyı kurmanız mümkün değil.
Online shell kullanırsanız ayrı. Kurulum aşamalarını geçtiniz varsayarak size MongoLaB sitesini önereceğim.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://mlab.com&quot;&gt;https://mlab.com&lt;/a&gt; Bu adrese girip kaydolarak ücretsiz 500 MB MongoDB hakkı kazanıyorsunuz.
Tabii ki online çalışmak zorunda değilsiniz bu bir alternatif.&lt;/p&gt;

&lt;p&gt;Kaydolduktan sonra bir veritabanı oluşturmalısınız ve bu veritabanı için bir kullanıcı da oluşturmanız gerekiyor ki buraya kadar olan kısım standart yapıyla aynı.
Her şeyi doğru yaptıysanız çalışma alanınızın görüntüsü şöyle olmalı:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/mongolab.png&quot; alt=&quot;/images/posts/mongolab.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;mongodbyi-local-ortamda-kullanmak&quot;&gt;MongoDB’yi Local Ortamda Kullanmak&lt;/h2&gt;

&lt;p&gt;Eğer MongoDB’yi herhangi bir sınırlama olmaksızın (500 MB gibi) local ortamda kullanmak isterseniz öncelikle komut satırına &lt;code&gt;mongod&lt;/code&gt; komutunu yazmalısınız.
Bu sayede MongoDB sunucusu başlatılır. Varsayılan port olarak &lt;strong&gt;27017&lt;/strong&gt; dinlenir. Bunu söyleme sebebim yukarıdaki ilk seçenekte varsayılan port farklı.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/mongod_local.png&quot; alt=&quot;/images/posts/mongod_local.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Daha sonra ikinci bir komut satırını açarak mongo komutunu verip local mongodb kullanımına başlayabilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/mongo_local.png&quot; alt=&quot;/images/posts/mongo_local.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;veritabann-seelim&quot;&gt;Veritabanını Seçelim&lt;/h3&gt;

&lt;p&gt;Veritabanını seçme işlemi, mongoshell üzerinde diğerlerinde olduğu gibi &lt;code&gt;use&lt;/code&gt; ile olacaktır. Localde çalışanlar için test veritanı şöyle seçilir:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;use test
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;ufaktan-insert-operasyonlar&quot;&gt;Ufaktan Insert Operasyonları&lt;/h3&gt;

&lt;p&gt;Veritabanını seçtik. MongoDB kullanırken insert operasyonları, RDBMS’lerden farklı şekilde çalışabilir. Burada yaşayacağınız farklılık syntax anlamında olabilir.
Ancak NodeJS kullanıcılarının bu işlemlere karşı yabancı olacağı pek söylenemez :)&lt;/p&gt;

&lt;p&gt;MongoDB’de insert operasyonları üç metod altında toplanmıştır. Bunlar sırasıyla;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;insert()&lt;/strong&gt;, &lt;strong&gt;insertOne()&lt;/strong&gt; ve &lt;strong&gt;insertMany()&lt;/strong&gt; metodlarıdır.
Bu metodları kullanırken verilerin JSON türünden olduğuna dikkat etmelisiniz. Yani JSON’a da aşina olmanız gerekmektedir. Neyse ki öğrenmesi çok da zor değil.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Basit Olarak Insert&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Basit olarak bir insert operasyonu şöyle olur.&lt;/p&gt;

&lt;p&gt;DBNESNESİ.TABLO.INSERT bu sahte yöntemin gerçeğe dönüşmüş hali şöyledir:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.Tablo.insert({
    'alan': 'Verisi',
    'alan2': 'Baska Veri'
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;O zaman bir blog sisteminin yapısından yola çıkarak şöyle olacak diyebiliriz:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.Yazilar.insert({
    'Baslik': 'Blog Başlığı',
    'Icerik': 'Lorem Ipsum Dolor Sit Amet...',
    'Kategori': 'Kişisel'
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Evet klasik bir insert operasyonunu gördük. Bu kodları Mongoshell üzerinde çalıştırınca şu çıktıyı alırsanız her şey doğrudur:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;WriteResult({ &quot;nInserted&quot; : 1 })
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Nedir Bu insertOne() ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bilinen bir yanlıştan dolayı insert ve insertOne karıştırılmakta. insert sadece tek bir ekleme yapmaz.
Eğer sadece insert metodunu kullanıyorsanız birden fazla ekleme de yapabilirsiniz. Örnek:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.Yazilar.insert([
    {&quot;Baslik&quot;: &quot;Başka&quot;},
    {&quot;Baslik&quot;: &quot;Oteki&quot;}
])

/*
ÇIKTISI:

BulkWriteResult({
        &quot;writeErrors&quot; : [ ],
        &quot;writeConcernErrors&quot; : [ ],
        &quot;nInserted&quot; : 2,
        &quot;nUpserted&quot; : 0,
        &quot;nMatched&quot; : 0,
        &quot;nModified&quot; : 0,
        &quot;nRemoved&quot; : 0,
        &quot;upserted&quot; : [ ]
})

*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ancak insertOne metodu böyle değil. Sadece ve sadece bir adet ekleme gerçekleştirebilirsiniz.
Ayrıca insertOne metodu ile insert edilen içeriğin ID’sini de alabilirsiniz. Kullanımı şöyledir:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.Yazilart.insertOne({
    &quot;Baslik&quot;: &quot;Tek Başlık&quot;
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yani ikinci bir başlık ekleme işlemi yapamazsınız. Evet bu kadar basit.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gelelim insertMany() Metoduna&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;insert ve insertMany metodları da çoklu ekleme işlemlerini destekler.
Ancak insert metodu ile yapılan ekleme işlemlerinde, geriye bir &lt;code&gt;insertedId&lt;/code&gt; dönmezdi. Aynı işlemi &lt;code&gt;insertMany&lt;/code&gt; ile yaparsak bir ID dönüşü alırız:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.Yazilar.insertMany([
    {&quot;Baslik&quot;: &quot;Başka&quot;},
    {&quot;Baslik&quot;: &quot;Oteki&quot;}
])

/*
ÇIKTISI:

{
        &quot;acknowledged&quot; : true,
        &quot;insertedIds&quot; : [
                ObjectId(&quot;5855b0a5f7e668b0e155210f&quot;),
                ObjectId(&quot;5855b0a5f7e668b0e1552110&quot;)
        ]
}
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;imdi-bu-verileri-nasl-ekeriz&quot;&gt;Şimdi Bu Verileri Nasıl Çekeriz?&lt;/h3&gt;

&lt;p&gt;Veri çekme işlemi MongoDB üzerindeki en basit işlemlerdendir. Örneğin Yazilar tablosundan verileri çekelim. Bunun için &lt;code&gt;find()&lt;/code&gt; metodunu kullanırız:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.Yazilar.find()

/*
ÇIKTISI:

{ &quot;_id&quot; : ObjectId(&quot;5855aef5f7e668b0e155210c&quot;), &quot;BAŞLIK&quot; : &quot;İçerik&quot; }
{ &quot;_id&quot; : ObjectId(&quot;5855aef5f7e668b0e155210d&quot;), &quot;BAŞLIK BAŞKA&quot; : &quot;İçerik 2&quot; }
{ &quot;_id&quot; : ObjectId(&quot;5855afd0f7e668b0e155210e&quot;), &quot;ÖTEKİ&quot; : &quot;İçerik 3&quot; }
{ &quot;_id&quot; : ObjectId(&quot;5855b0a5f7e668b0e155210f&quot;), &quot;FALAN&quot; : &quot;İçerik 4&quot; }
{ &quot;_id&quot; : ObjectId(&quot;5855b0a5f7e668b0e1552110&quot;), &quot;NEYSE&quot; : &quot;İçerik 5&quot; }
*/

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;nerede-bu-where-clause&quot;&gt;Nerede Bu WHERE Clause?&lt;/h3&gt;

&lt;p&gt;Benim en çok merak ettiklerimden birisi de bu konuydu. MongoDB üzerinde where aynı mantığa sahip olsa da kullanımı tabii ki farklı. Yine find() metodunu kullanacağız.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.Yazilar.find({ $where: &quot;this.Baslik == 'FALAN'&quot; })
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki kullanımla tek satırlık bir değer dönecektir. Ancak aynı değere sahip 2 içerik varsa onları unique yapan diğer değerleri de sorgulamanız iyi olur.&lt;/p&gt;

&lt;h3 id=&quot;hadi-bu-erikleri-sralayalm&quot;&gt;Hadi Bu İçerikleri Sıralayalım&lt;/h3&gt;

&lt;p&gt;ASC ve DESC olaylarını RDBMS üzerinde kullanırken ORDER BY kullanıyorduk. Ancak bunda maalesef ki böyle değil. Fakat daha basit olduğunu söyleyebilirim.
Yine find() metodunu olaya dahil ederek şöyle bir işlem yapabiliriz:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.Yazilar.find().sort({_id:1})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki yöntemle birlikte ASCENDING bir sıralama yapabilirsiniz. Bunun tam tersi olarak DESCENDING işlemi ise şöyle yapılır:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.Yazilar.find().sort({_id:-1})
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;limit-falan-nasl-olacak&quot;&gt;Limit Falan Nasıl Olacak?&lt;/h3&gt;

&lt;p&gt;Şimdi bu işlemde de find() metodunu kullanıyoruz. Tabi bu sefer sort() metodu da bize katılıyor.
Limit işlemini limit() metodunu kullanarak yaparız. Örneğin kullanımı şöyle:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.Yazilar.find().sort({ID:-1}).limit(1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki yöntem bize son eklenen verinin içeriğini döndürecektir ve dönen değer tek satırdır.
Çünkü limit metodu parametre olarak tek &lt;strong&gt;1&lt;/strong&gt; rakamını almıştır. Dilersek dönen değerdeki tek bir alana dair de veri çekebiliriz.
Ben bu işlemde kendim &lt;strong&gt;ID&lt;/strong&gt; adında bir alan tanımladım. MongoDB tarafından üretilen &lt;strong&gt;_id&lt;/strong&gt; alanından farklı olduğunu belirteyim. Şimdi tanımlı olan bu alanı çekelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.Yazilar.find().sort({ID:-1}).limit(1)[0][&quot;ID&quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Buradan anlaşılacağı üzere eklenmiş olan verilerden en sonuncusu getirilip bu satırdaki ID alanında yer alan veriyi göreceğiz.
Klasik bir array access işleminden fazlası değil yani.&lt;/p&gt;

&lt;p&gt;Evet anlatım bu kadar. Uzun bir yazı dizisi oldu. Eğer CRUD işlemleri hakkında daha fazla bilgi istiyorsanız 
&lt;a href=&quot;https://docs.mongodb.com/manual/crud/&quot;&gt;MongoDB Manual&lt;/a&gt; sizin için iyi bir yol gösterici olacaktır.&lt;/p&gt;
</description>
        <pubDate>Sat, 17 Dec 2016 23:30:00 +0300</pubDate>
        <link>https://aligoren.com/atistirmalik-mongodb-yazisi</link>
        <guid isPermaLink="true">https://aligoren.com/atistirmalik-mongodb-yazisi</guid>
      </item>
    
      <item>
        <title>MongoDB Data Directory Not Found Hatası</title>
        <description>&lt;p&gt;Selam. MongoDB öğrenmeye başladım. Ufak bi kaç adımla başlayacaktım. Hedefte o vardı. Ancak daha henüz ilk kurulumda şöyle bir hata ile karşılaştım:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;&quot;Data directory C:\data\db\ not found., terminating&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Eğer böyle bir hata alıyorsanız MongoDB kurulduktan sonra C: dizininde ya da bulunduğunuz sistemin belirtilen dizininde &lt;strong&gt;data&lt;/strong&gt; klasörü ve onun içerisine &lt;strong&gt;db&lt;/strong&gt; klasörü oluşturulamamış demektir.&lt;/p&gt;

&lt;p&gt;Bu durumda yapılacak iki şey vardır. Birincisi oluşturulamayan data path’i siz oluşturacaksınız.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;C:&lt;/strong&gt; dizini altına kendiniz bir data klasörü ve içine de db klasörü oluşturun.&lt;/p&gt;

&lt;p&gt;Ardından mongod komutunu vererek mongodb’yi çalıştırın. Bir diğer yöntem ise data path flag’ini kullanarak data yolu belirtebilirsin.&lt;/p&gt;

&lt;p&gt;Ben mongodb 3.4 kullanarak şöyle yapıyorum&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;mongod --dbpath &quot;C:\Program Files\MongoDB\Server\3.4\data\db&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Artık mongodb başarılı bir şekilde çalışacaktır.&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Nov 2016 23:30:00 +0300</pubDate>
        <link>https://aligoren.com/mongodb-data-directory-not-found</link>
        <guid isPermaLink="true">https://aligoren.com/mongodb-data-directory-not-found</guid>
      </item>
    
      <item>
        <title>Python ile Ağ Üzerinde İzleme Yapma</title>
        <description>&lt;p&gt;Merhaba. Bu yazıda Python ile basit bir şekilde ağ üzerinde nasıl izleme yapılırı anlatmaya çalışıcam.
Yazıya giriş yapmadan önce bazı gereksinimler mevcut. Bunlardan birisi &lt;code&gt;scapy&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Teknik detaylara giriş yapmadan önce açıklamak gerekirse scapy, network tarafında özelleştirilmiş paketler üretmeye yarayan bir kütüphane.&lt;/p&gt;

&lt;p&gt;Kendisi açık kaynak kodlu bir yazılımdır. Scapy’nin diğerlerine göre farkı genişletilebilir oluşunda.
Diğerleri demişken bunlardan benim bildikleri nmap ve hping var. İlla ki görmüşsünüzdür.&lt;/p&gt;

&lt;p&gt;Ayrıca scapy interactive olarak ya da development kısmında da çalışabilir.
Yani dilerseniz interactive shell ile çalışabilir ya da projenizde kütüphaneyi çağırabilirsiniz.&lt;/p&gt;

&lt;h2 id=&quot;scapy-ve-scapy-http-kurulumu&quot;&gt;scapy ve scapy-http Kurulumu&lt;/h2&gt;

&lt;p&gt;Çok uzatmayalım. Ben işlemleri linux dağıtımı üzerinde gerçekleştirdim. Kurulum iki aşamadan oluşuyor.
Dağıtımınızda pip olduğunu varsayarak şu işlemleri gerçekleştirelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo apt-get install python-scapy
sudo pip install scapy_http
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kurulum bu kadar Burada &lt;code&gt;scapy_http&lt;/code&gt; adında bir kütüphane kullandık.
Kütüphane yazarı &lt;a href=&quot;http://www.lucainvernizzi.net&quot;&gt;Luca Invernizzi&lt;/a&gt; isimli abimizdir.&lt;/p&gt;

&lt;h2 id=&quot;scapy-ile-a-trafiinin-zlenmesi&quot;&gt;scapy ile Ağ Trafiğinin İzlenmesi&lt;/h2&gt;

&lt;p&gt;Yazı iki kısımdan oluşacak. Bu bir adresi kim yani hangi IP ziyaret ediyor ona bakacağız.&lt;/p&gt;

&lt;p&gt;Öncelikle scapy ve scapy_http kütüphanesini dahil edelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;from scapy.all import IP, sniff
from scapy.layers import http
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Şimdi gelen değerleri sniffleyeceğimiz bir metod yazalım.
Bu methoddan dönen değerlere göre sniffing işlemi yapacağız.&lt;/p&gt;

&lt;p&gt;Bu metodda TCP paketlerini ayıklayacağız.
Ayıklama işlemi esnasında herhangi bir şekilde HTTP isteğine denk gelirsek ekrana yazdıracağız.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def tcp_ayikla(paket):
    if not paket.haslayer(http.HTTPRequest):
        # Eğer paket herhangi bir HTTP isteği almıyorsa burayı atlayalım:
        return
    
    #http katmanından geçen istekler
    http_katmani = paket.getlayer(http.HTTPRequest)

    # IP adresi içeren katman
    ip_katmani = paket.getlayer(IP)
    print '\n{0[src]} IP adresinden {1[Method]} {1[Host]}{1[Path]} sitesine ziyaret'.format(ip_katmani.fields, http_katmani.fields)

# Ağ üzerinde dinleme işlemine başlıyoruz:
sniff(filter='tcp', prn=tcp_ayikla)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Çıktı olarak şöyle görüntüleriz:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/posts/sniff_url.PNG&quot; alt=&quot;images/posts/sniff_url.PNG&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Buraya kadar olan kısım şu &lt;a href=&quot;http://www.lucainvernizzi.net/blog/2015/02/12/extracting-urls-from-network-traffic-in-just-9-python-lines-with-scapy-http/&quot;&gt;bağlantı&lt;/a&gt; üzerinden alıntılandı&lt;/p&gt;

&lt;h2 id=&quot;scapy-ile-post-verilerinin-alnmas&quot;&gt;scapy ile POST Verilerinin Alınması&lt;/h2&gt;

&lt;p&gt;Gelelim zurna mıdır nedir onun şey dediği yere.
Ağ üzerinde herkesin merak ettiği bir diğer konu da internet sitelerine girişte parolaların alınıp alınamayacağıdır.&lt;/p&gt;

&lt;p&gt;Yukarıdaki yapıya aşırı benzer bir şekilde POST değerlerini alabilirsiniz.
Bu işlem SSL olan sistemlerde işe yaramıyor. Bunu belirtmem gerekir.
Eğer SSL konusunda merakınız varsa tintinweb &lt;a href=&quot;https://github.com/tintinweb/scapy-ssl_tls&quot;&gt;reposuna&lt;/a&gt; bakmalısınız.&lt;/p&gt;

&lt;p&gt;Post edilen verileri saf haliyla görebilmemizi sağlayan kodun temeli yukarıdaki ile aynı.
Geri kalan kısım biraz programlama becerisi istiyor olay o kadar yani.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;from scapy.all import IP, sniff
from scapy.layers import http
 
 
def tcp_ayikla(paket):
    if not paket.haslayer(http.HTTPRequest):
        # Eğer paket herhangi bir HTTP isteği almıyorsa burayı atlayalım:
        return
    http_katmani = paket.getlayer(http.HTTPRequest)
    try:
        # Gelen istek POST mu?
        if str(http_katmani.fields[&quot;Method&quot;]) == &quot;POST&quot;:
            
            # Öyle ise dönen değeri böl ve bölünen değerin 13.sünü al
            # 13. değer form değerlerinin geldiği kısım oluyor
            data = str(http_katmani).split('\n')[13]
            # Form değerleri birleşikti bildiğiniz GET query gibi
            # Önce ampersand kaldırılıp, alt satıra geçme sağlandı
            #   txtUserName=Falan
            #   txtPassword=FalanPasswd
            # Ardından Gelen değerdeki %40, yerini @ ifadesine bıraktı.
            # Mail için önemli :)
            data = data.replace('&amp;amp;', '\n').replace('%40', '@')
            return data
    except:
        pass
 
# Ağ üzerinde dinleme işlemine başlıyoruz:
sniff(filter='tcp', prn=tcp_ayikla)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bu ikinci kodun sonrasında çalıştırdığımızda aşağıdaki gibi bir çıktı ile karşılaşacağız.
Dikkat ettiyseniz formda bulunan inputların name’leri ve value’ları bu ekranda görüntülenebilmekte&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;txt_username=16612261
txt_password=cH10k1997GuVenL
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki kullanıcı adı ve parola saf haliyle karşımıza sunulmakta.
Parola her ne kadar ben güvenliyim imajı verse de izlemek pek de zor olmuyor.&lt;/p&gt;

&lt;p&gt;Bu işlemi bir üniversitenin Öğrenci Bilgi Sistemi üzerinde gerçekleştirdim. Umarım problem olmaz :)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/posts/post_sniffing.png&quot; alt=&quot;images/posts/post_sniffing.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sanırım bir anlatımın daha sonuna geldik. Özetle: SSL kullanın&lt;/p&gt;
</description>
        <pubDate>Sun, 23 Oct 2016 00:41:00 +0300</pubDate>
        <link>https://aligoren.com/python-ile-ag-uzerinde-izleme-yapma</link>
        <guid isPermaLink="true">https://aligoren.com/python-ile-ag-uzerinde-izleme-yapma</guid>
      </item>
    
      <item>
        <title>Asp.Net MVC'De Çoklu Checkbox Kullanımı</title>
        <description>&lt;p&gt;Merhaba. Asp.NET ve özellikle MVC konusunda henüz yeniyim. Aslında MVC’den önce Asp.NET hiç kullanmadım. 
Ancak iş olunca konu direkt MVC’ye daldım. Zorluk çektiğim pek söylenemez. Model kavramına aşina olduktan sonra pek sıkıntı yok.&lt;/p&gt;

&lt;p&gt;Sıkıntı şu. Veritabanından gelen bazı değerler var. Bu değerlerin de ID değerleri var. Örnekte şöyle olsun:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;input type=&quot;checkbox&quot; name=&quot;degerler&quot; value=&quot;1&quot; /&amp;gt;
&amp;lt;input type=&quot;checkbox&quot; name=&quot;degerler&quot; value=&quot;2&quot; /&amp;gt;
&amp;lt;input type=&quot;checkbox&quot; name=&quot;degerler&quot; value=&quot;3&quot; /&amp;gt;
&amp;lt;input type=&quot;checkbox&quot; name=&quot;degerler&quot; value=&quot;4&quot; /&amp;gt;
&amp;lt;input type=&quot;checkbox&quot; name=&quot;degerler&quot; value=&quot;5&quot; /&amp;gt;
&amp;lt;input type=&quot;checkbox&quot; name=&quot;degerler&quot; value=&quot;6&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bunların bazıları seçili olabilir bazıları olmayabilir. Şimdi ben gelen değerleri veritabanına ekletmek istiyorum.
Belki başka yöntemleri de vardır bilemem ancak bunun MVC’de basit bir yolu var. Şimdi bu formun basit olarak şöyle post edildiğini düşünelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;form action=&quot;/Home/DegerAl&quot; method=&quot;post&quot;&amp;gt;
    &amp;lt;input type=&quot;checkbox&quot; name=&quot;degerler&quot; value=&quot;1&quot; /&amp;gt;
    &amp;lt;input type=&quot;checkbox&quot; name=&quot;degerler&quot; value=&quot;2&quot; /&amp;gt;
    &amp;lt;input type=&quot;checkbox&quot; name=&quot;degerler&quot; value=&quot;3&quot; /&amp;gt;
    &amp;lt;input type=&quot;checkbox&quot; name=&quot;degerler&quot; value=&quot;4&quot; /&amp;gt;
    &amp;lt;input type=&quot;checkbox&quot; name=&quot;degerler&quot; value=&quot;5&quot; /&amp;gt;
    &amp;lt;input type=&quot;checkbox&quot; name=&quot;degerler&quot; value=&quot;6&quot; /&amp;gt;
    &amp;lt;input type=&quot;submit&quot; value=&quot;Ekle&quot; /&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki yapıda name karşılığı &lt;mark&gt;degerler&lt;/mark&gt; olan bir input grup görüyoruz. Bu name karşılıklarının aslında bir name array oluşturduğunu söyleyebiliriz.
Bu array’in adı da &lt;mark&gt;degerler&lt;/mark&gt; array’i olsun. O zaman C# tarafında bu değerleri hangi türden alacağımızı biliyoruz.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[HttpPost]&lt;/code&gt; attribute’unu çağıran method’a gelen argüman tipi array olacak. Basit olarak array tipli değer alan methodların nasıl oluştuğunu hatırlayalım:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public void DegerAlacak(string[] degerler)
{
    //...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Şimdi bu bilgilere göre basit anlamda bir checkbox list’ten gelen verinin nasıl alınacağını görelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[HttpPost]
public ActionResult DegerAl(string[] degerler)
{
    for (int i = 0; i &amp;lt; degerler.Length; i++)
    {
        ViewData[&quot;Degerler&quot;] += degerler[i];
    }
    return View();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ben bunları &lt;code&gt;DegerAl&lt;/code&gt; sayfasında yazdırdığım için ViewData içerisine atadım. Dilerseniz parametre alınan noktaya bir breakpoint koyarak gelen değerleri görüntüleyebilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/mvc_check.png&quot; alt=&quot;/images/posts/mvc_check.png&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 22 Oct 2016 12:05:00 +0300</pubDate>
        <link>https://aligoren.com/aspnet-mvcde-coklu-checkbox-kullanimi</link>
        <guid isPermaLink="true">https://aligoren.com/aspnet-mvcde-coklu-checkbox-kullanimi</guid>
      </item>
    
      <item>
        <title>Jekyll Github Badge Eklentisi</title>
        <description>&lt;p&gt;Selam bu aslında tam bir eklenti. Değil. Buna daha çok Liquid Tag desek yanlış söylemiş olmayız. Bu eklentinin yaptığı şey kısacası belirli bir repo için &lt;mark&gt;BADGE&lt;/mark&gt; oluşturuyor.
Tam badge değilse de yapıyor işte. Bunu oluştururken bootstrap 4’ün card özelliğinden faydalandım.&lt;/p&gt;

&lt;p&gt;Eklenti şu anda sadece çağırıldığı anda olan değerleri üretiyor. Yani bugün 10 olan bir beğeni, yarın 15 olsa bile değişmeyecektir. Vakit olursa bir sonraki sürümde onu da değiştirmeyi düşünüyorum.&lt;/p&gt;

&lt;p&gt;Kısacası bu eklenti bize şunları sunuyor:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Proje Adı&lt;/li&gt;
  &lt;li&gt;Açıklama&lt;/li&gt;
  &lt;li&gt;Proje yazarı / sahibi (Author)&lt;/li&gt;
  &lt;li&gt;Programlama dili&lt;/li&gt;
  &lt;li&gt;Stargazers (kaç kişi beğenmiş)&lt;/li&gt;
  &lt;li&gt;Forks (Çatallama sayısı)&lt;/li&gt;
  &lt;li&gt;Download (Projenin master branchteki dosyalarının zip URL’si)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Kullanım için bazı adımlar var. Öncelikle card.css dosyasını aktarmak gerekiyor:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{{ &quot;/css/card.css&quot; | prepend: site.baseurl }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Daha sonra da kullanımı basitçe şöyle oluyor:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{% gitrepo KULLANICI_ADINIZ/REPO_ADINIZ %}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Şimdi basit bir örnekle, bu eklentinin repo’sunu paylaşayım ki inceleyin. Ben kötü Ruby ve Jekyll Liquid bilgimle yaptım bunu.:&lt;/p&gt;

&lt;div class=&quot;card card-block&quot;&gt;&lt;p class=&quot;card-text&quot;&gt;&lt;b&gt;Project Details: &lt;/b&gt;jekyll-github-badge&lt;/p&gt;&lt;p class=&quot;card-text&quot;&gt;&lt;b&gt;Description: &lt;/b&gt;Jekyll Github Repo Badge Generator&lt;/p&gt;&lt;table class=&quot;table table-sm&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot;&gt;Project Name&lt;/th&gt;&lt;td&gt;&lt;a class=&quot;card-link&quot; href=&quot;https://github.com/aligoren/jekyll-github-badge&quot; target=&quot;_blank&quot;&gt;jekyll-github-badge&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot;&gt;Author&lt;/th&gt;&lt;td&gt;&lt;a class=&quot;card-link&quot; href=&quot;https://github.com/aligoren&quot; target=&quot;_blank&quot;&gt;aligoren&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot;&gt;Programming Language&lt;/th&gt;&lt;td&gt;CSS&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot;&gt;Stargazers&lt;/th&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot;&gt;Forks&lt;/th&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;a href=&quot;https://github.com/aligoren/jekyll-github-badge/archive/master.zip&quot; class=&quot;btn btn-primary&quot; target=&quot;_blank&quot;&gt;Download&lt;/a&gt;&lt;/div&gt;
</description>
        <pubDate>Sun, 16 Oct 2016 21:57:00 +0300</pubDate>
        <link>https://aligoren.com/jekyll-github-badge-eklentisi</link>
        <guid isPermaLink="true">https://aligoren.com/jekyll-github-badge-eklentisi</guid>
      </item>
    
      <item>
        <title>Jekyll ile PrismJS Kullanmak</title>
        <description>&lt;p&gt;Blogu Jekyll’a taşıdıktan sonra uygun bir tema arayışına girmiştim. Bu uygun tema arayışında işimi en çok gören ise Pixyll teması oldu. Yapımcısı footer’da yer almakta. Neyse malumunuz kod içeren makaleler yazınca o makalelerdeki kodların da renklendirilmesi önemli.&lt;/p&gt;

&lt;p&gt;Kullandığımız temalara göre renklendirme özellikleri mevcut elbette. Ancak jekyll ile birlikte &lt;a href=&quot;http://rouge.jneen.net/&quot;&gt;Route&lt;/a&gt; varsayılan olarak geldiği için pek de arayışa geçmeyiz. Fakat benim gibi görselliği de seviyorsanız mutlaka farklı alternatifleri de düşünürsünüz ki bunlardan birisi de &lt;a href=&quot;http://pygments.org/&quot;&gt;Pygments&lt;/a&gt; oluyor. Tabi bunu da beğenmiyor olmanız pekala normal karşılanabilir.&lt;/p&gt;

&lt;p&gt;Ben özellikle son dönemde en popüler kod renklandiricilerden olan PrismJS kullanmayı uygun gördüm. Bu yazıda ve diğer yazılarda etkisini göreceksiniz. Çok uzatmadan nasıl kurulacağını anlatayım. Şimdi bu işlem 3 adımdan oluşmakta.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;İlk Adım: Rouge’un devre dışı bırakılması&lt;/li&gt;
  &lt;li&gt;İkinci Adım PrismJS’in İndirilmesi&lt;/li&gt;
  &lt;li&gt;Üçüncü Adım İlgili Kütüphanelerin head ve footer’a eklenmesi&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;1-)&lt;/strong&gt; Şimdi öncelikle bize lazım olan şey Rouge’un devre dışı kalması dedik. &lt;code&gt;_config.yml&lt;/code&gt; dosyasına geçelim. Burada yapmamız gereken şey öncelikle &lt;code&gt;highlighter: none&lt;/code&gt; demeliyiz.&lt;/p&gt;

&lt;p&gt;Daha sonra &lt;code&gt;kramdown&lt;/code&gt; için alt seçeneklere bazı eklemeler gerçekleştirmeliyiz. Bu işleme göre syntax highlighter disable olmalı. Kısacası ilgili bölümler aşağıdaki gibi olmalı:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;highlighter: none
markdown: kramdown
kramdown:
    syntax_highlighter_opts:
        disable: true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;2-)&lt;/strong&gt; İlk adımı atlattık şimdi geldi ikinci adıma. İkinci adımda PrismJS’yi &lt;a href=&quot;http://prismjs.com/&quot;&gt;http://prismjs.com/&lt;/a&gt; adresinden indirelim. Bu indirme ile birlikte iki dosya karşınıza gelecektir.Birisi JS bir diğeri de CSS dosyası.&lt;/p&gt;

&lt;p&gt;Ben PrismJS’i özelleştirerek indirmenizi öneriyorum. Syntax highlighter için default tema aslında gayet iyi ama siz dilerseniz farklı temaları da seçebilirsiniz. Blogunuzda hangi dillerde yayın yapıyorsanız (Programlama dilleri) o dilleri seçin öncelikle. Ben hepsini seçmedim ama bazı deneyip bir şeyler aktaracağım dillere dair seçimler gerçekleştirdim.&lt;/p&gt;

&lt;p&gt;Dil seçimi tamamlandı. Artık seçmemiz gereken bir diğer şey ise plugin yani eklentiler. Bunlar inanın PrismJS’i daha güzel bir şekilde kullanmanıza da imkan tanıyan eklentiler. Benim önerilerim şunlar:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line Numbers:&lt;/strong&gt; Satır numaralarını gösterir.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Autolinker:&lt;/strong&gt; Kodlarda yer alan yorum satırlarında link varsa tıklanabilir hale getirir&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Show Language:&lt;/strong&gt; Eklenen kodun hangi dilde eklendiğini sağ üst köşede gösterir. Bu yazıdaki &lt;code&gt;YAML&lt;/code&gt; örneğinde olduğu gibi&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3-)&lt;/strong&gt; Son adıma geldik. Bu adımda indirilen dosyaları klasörlere atma zamanı. &lt;code&gt;css&lt;/code&gt; zaten hazır olduğu için &lt;code&gt;prism.css&lt;/code&gt; dosyasını o klasöre atın. Eğer &lt;code&gt;js&lt;/code&gt; klasörü yoksa oluşturun ve &lt;code&gt;prism.js&lt;/code&gt; dosyasını da o klasöre atın.&lt;/p&gt;

&lt;p&gt;Şimdi gelelim son adımlara. Öncelikle &lt;mark&gt;head.html&lt;/mark&gt; dosyasını açalım. Ya da artık header görevini neresi görüyorsa orası. O kısma şu kodu yapıştıralım:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;/css/prism.css&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Not: href içinde süslü parantezler vardır:&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{{ &quot;/css/prism.css&quot; | prepend: site.baseurl }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bu işlem bittikten sonra da artık son bir işimiz kalıyor. &lt;mark&gt;footer.html&lt;/mark&gt; dosyasını açıp şu kodu yapıştıralım:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;/js/prism.js&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yine yukarıdaki uyarı aynı bu kısımda da geçerlidir. Dikkate almanızı öneririm. Evet işlemler bu kadar :) Artık PrismJS hazır durumda.&lt;/p&gt;
</description>
        <pubDate>Sat, 15 Oct 2016 20:05:00 +0300</pubDate>
        <link>https://aligoren.com/jekyll-ile-prismjs-kullanmak</link>
        <guid isPermaLink="true">https://aligoren.com/jekyll-ile-prismjs-kullanmak</guid>
      </item>
    
      <item>
        <title>Bugün Öğrendiklerim - Git</title>
        <description>&lt;p&gt;Bugün enteresan bir şekilde güzel şeyler öğrendim. Aslında dün de öğrendim. Github’ı sadece ve sadece master’a dosya push etmek adına kullanan birisi olarak şimdilerde branch ne kadar da gerekli der oldum. Bu yazıda özellikle branchleri anlatmak isterim. Çünkü master ve branchler gerçekten çok önemli şeyler.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Yeni Bir Git Reposu:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bulunduğunuz dizini içereceğini bilerek &lt;code&gt;git init&lt;/code&gt; komutunu vermeniz yeterlidir.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Uzak Git Reposunu Clonelamak&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bu en çok ihtiyaç duyduğumuz şeylerden birisi olabilir. Farklı amaçlarla bunu yaparız. Çoğu zaman dosyaları direkt indirebiliriz. Ancak neden tarayıcıyı açalım ki? Tabii bir de projelere katkıda bulunmak da var. Neyse bu işlem şöyle oluyor:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git clone https://uzak-git-deposu&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Şaka değil bu kadar basit.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dosya Ekleme&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yapılan çalışmaların artık ortak çalışma alanına aktarılması gerekmektedir. Öncelikle dosyaların eklenmesi şarttır. İki yöntem var.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Tamamını Ekleme:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git add *&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Spesifik Dosyalar Ekleme:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git add main.rb lib.rb file.rb&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Yöntemlerden dilediğinizi seçebilirsiniz ki bu size kalmış bir şey.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Eklenen Dosyalara Mesaj Eklemek&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bu yöntemle hangi dosyalar çalışmada etkilenmiş yani değişikliğe uğramışsa o dosyalar bu mesajla repoya gönderilir. Örneğin şöyle düşünelim, info.py dosyasında bir değişiklik yaptınız. Bu değişiklik Person adında yeni bir class’ın eklenmesi olabilir. O zaman commit’e şu işlemi yapabilirsiniz:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git commit -am &quot;Add person class&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Değişiklikleri Yayına Almak&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;En önemli mevzu bu bence. Herkesin katkı yaptığı bir projeye localden katkı yapmanız bir şeyi değiştirmez. Önemli olan bu katkının asıl repoya &amp;amp; sizin kendi reponuza aktarılmasıdır. Eğer reponuz yeni ise varsayılan olarak &lt;code&gt;master&lt;/code&gt; isimli branch’e sahipsinizdir. Bu arada branch dal ya da dallanmak demekmiş. Neyse değişiklikleri yayına almak yani uzak repoda göstermek için şu komutlar işimizi görebilir:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git push origin master&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Mümkün olduğunca master branch rahatsız edilmemeli. Oraya publish edilen yapı aktarılmalı. Geliştirme aşamalarında kullanılan kalabalık dosyalar başka branchlerde yer almalı.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hangi Branch’e Bağlıyım?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bu da önemlidir. Olur da farklı bir branch’te çalışırsınız aman diyim. Bunun için &lt;code&gt;git branch&lt;/code&gt; komutu yeterlidir. Bu komutla şu anda hangi branch’te çalıştığınızı görebilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Yeni Branch Oluşturma&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bu işlem sanırım en zevkli işlem. Basit bir komutla &lt;code&gt;dev&lt;/code&gt; isimli yeni branch oluşturabilirsiniz:&lt;/p&gt;

&lt;p&gt;&lt;code&gt; git checkout -b dev&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Branchler Arasında Dolaşma&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Eğer yapacağınız değişiklikler belirli bir branchte yayınlanacaksa o branch’e geçiş yapmanız gerekiyor. Bunun için de işlem yine çok basit. Örneğin şu anda master branch’tesiniz ve dev isimli branch’e geçeceksiniz:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git checkout dev&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Oluşturulan Branch’i Yayınlamak&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Eğer branch, uzak repoya gönderilmediyse o branch sizden başkası için görülebilir olmayacaktır. Branch’i yayınlama işlemini yukarıda oluşturduğumuz dev isimli branch’i baz alarak gerçekleştireceğiz.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git push origin dev&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Artık branch’imiz yayında olacaktır.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Güncelleme&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Siz bi uyudunuz falan sabah oldu işe gittiniz geldiniz o da ne bir sürü değişimler oldu. Ama bunlar bilgisayarınızda yok. Meraklanmayın. Basit bir komut işinizi görüyor:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;*git fetch &amp;amp; git pull origin master&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;İşime Yarayan Komutlar:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yapılan işlemlere dair logları &lt;code&gt;git log&lt;/code&gt; yazarak alabiliyorum. Eğer yapılan değişikliklere dair bir durum alacaksam da &lt;code&gt;git status&lt;/code&gt; yaparak eklenmemiş olanları görebilirim.&lt;/p&gt;

&lt;p&gt;Bugün daha çok şeyler öğrendim bunda @hwclass hocama teşekkür etmem gerekiyor. Onlar da başka bir yazının konusu olsun.&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Oct 2016 00:08:00 +0300</pubDate>
        <link>https://aligoren.com/bugun-ogrendiklerim</link>
        <guid isPermaLink="true">https://aligoren.com/bugun-ogrendiklerim</guid>
      </item>
    
  </channel>
</rss>
