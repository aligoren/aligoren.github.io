<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.4.0">Jekyll</generator><link href="https://aligoren.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://aligoren.com/" rel="alternate" type="text/html" /><updated>2017-03-05T22:03:17+03:00</updated><id>https://aligoren.com/</id><title>Ali GÖREN...</title><subtitle>.NET, SQL, Python, Açık Kaynak</subtitle><author><name>Ali GÖREN</name></author><entry><title>jQuery ile Tabloda Arama Yapmak</title><link href="https://aligoren.com/jquery-ile-tabloda-arama-yapmak" rel="alternate" type="text/html" title="jQuery ile Tabloda Arama Yapmak" /><published>2017-03-05T21:00:00+03:00</published><updated>2017-03-05T21:00:00+03:00</updated><id>https://aligoren.com/jquery-ile-tabloda-arama-yapmak</id><content type="html" xml:base="https://aligoren.com/jquery-ile-tabloda-arama-yapmak">&lt;p&gt;Selamlar. Bu yazıda sizlere çoğunuzun kullanmış olabileceği bir eklentinin daha basit halini anlatacağım. &lt;a href=&quot;https://datatables.net/&quot;&gt;jQuery Datatables&lt;/a&gt; eklentisi muazzam iş gören bir eklenti.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/ridvan.jpg&quot; alt=&quot;/images/posts/ridvan.jpg&quot; /&gt;
&lt;em&gt;Çizerken baya zorlandım&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ancak bazı durumlarda gerekmeyebilir. Bu gibi durumlarda gereksiz eklenti kullanımı performansa da etki ediyor haliyle. Elimizde basit olarak bir tablo yapısının olduğunu varsayalım. Tabi arama kutumuz da o basit yapının içinde olsun :)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;input type=&quot;text&quot; class=&quot;search&quot; placeholder=&quot;Ürün Arama...&quot;&amp;gt;
    &amp;lt;span class=&quot;counter&quot;&amp;gt;&amp;lt;/span&amp;gt;
    &amp;lt;table class=&quot;results&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot;&amp;gt;
        &amp;lt;thead&amp;gt;
            &amp;lt;tr class=&quot;active&quot;&amp;gt;
                &amp;lt;th&amp;gt;Ürün Adı&amp;lt;/th&amp;gt;
                &amp;lt;th&amp;gt;Miktar&amp;lt;/th&amp;gt;
                &amp;lt;th&amp;gt;Birim Fiyat&amp;lt;/th&amp;gt;
                &amp;lt;th&amp;gt;Tutar&amp;lt;/th&amp;gt;
                &amp;lt;th&amp;gt;Personel&amp;lt;/th&amp;gt;
                &amp;lt;th&amp;gt;İşlemler&amp;lt;/th&amp;gt;
            &amp;lt;/tr&amp;gt;
        &amp;lt;/thead&amp;gt;
        &amp;lt;tbody&amp;gt;
            &amp;lt;tr&amp;gt;
                &amp;lt;td&amp;gt;Patates&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;10&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;15&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;150&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;Ali&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;Sat&amp;lt;/td&amp;gt;
            &amp;lt;/tr&amp;gt;
            &amp;lt;!-- Buralar eskiden TR'likti --&amp;gt;
        &amp;lt;/tbody&amp;gt;
        &amp;lt;tfoot&amp;gt;
            &amp;lt;tr class=&quot;warning no-result&quot; style=&quot;display:none;&quot;&amp;gt;
                &amp;lt;td colspan=&quot;8&quot;&amp;gt;&amp;lt;i class=&quot;fa fa-warning&quot;&amp;gt;&amp;lt;/i&amp;gt; Bulunamadı&amp;lt;/td&amp;gt;
            &amp;lt;/tr&amp;gt;
        &amp;lt;/tfoot&amp;gt;
    &amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Senaryo bize der ki kardeşim, ben inputu her çağırdığımda sen tablodaki satırlar arasında arama gerçekleştir. Spesifik bir cell de belirtebilirdik ancak tüm cell’leri gezmesini düşünüyoruz. DataTables öyle çalışıyor çünkü.&lt;/p&gt;

&lt;p&gt;Yukarıda &lt;code&gt;search&lt;/code&gt; class’ına sahip inputu yakalayıp, keyup event’ini kontrol etmemiz gerekiyor. Bu kontrol gerçekleşirken de inputtaki değeri de almalıyız. Tabi bulunanların sayısını tutacağımız bir değişkene de ihtiyacımız var.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;
$(&quot;.search&quot;).keyup(function() {
    var searchTerm = $(&quot;.search&quot;).val();
    var bulunan = 0
    //...
})

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Buraya kadar her şey basit bir select işlemi. Bundan sonrasında ise tabloda kontrolü sağlamalıyız.&lt;/p&gt;

&lt;p&gt;Eğer tablonuz herhangi bir şekilde &lt;code&gt;thead&lt;/code&gt; ya da &lt;code&gt;tfoot&lt;/code&gt; elementlerine sahip değilse direkt tablodaki tr elementlerini yakalayabilirsiniz.&lt;/p&gt;

&lt;p&gt;Ama benim gibi tablonun gerçek kısmı olan tbody kısmıyla çalışıyorsanız mutlaka bunu belirtmelisiniz.&lt;/p&gt;

&lt;p&gt;Tabloda kontrolü her tr elemanını tbody altında arayacak şekilde gerçekleştirmeliyiz. Yani tbody altındaki her tr’yi gezeceğiz. Ayrıca tabi tablonun aramasını yaptığımız kısmını da bir değişkene atayalım ki her defasında &lt;code&gt;$(this)&lt;/code&gt; yazmaktan kurtulalım :)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;$('.results tbody tr').each(function(e) {
    var table = $(this)
    //...
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tamam şimdi kalıyor tek bir kısım. Bu son kısımda gezilen satırın text’ini alıyoruz ve &lt;code&gt;toLowerCase()&lt;/code&gt; metodunu kullanarak satırdaki tüm textleri küçültürüyoruz.&lt;/p&gt;

&lt;p&gt;Ardından da &lt;strong&gt;ES6&lt;/strong&gt; ile gelen &lt;code&gt;includes()&lt;/code&gt; metodunu kullanarak searchTerm’deki değeri içerip içermediğini kontrol ediyoruz. Burada searchTerm ise bizim inputtan gelen değer.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;if (table.text().toLowerCase().includes(searchTerm.toLowerCase())) {
    bulunan += 1
    table.show()
    $(&quot;.counter&quot;).text(bulunan + &quot; kayıt bulundu&quot;)
    $(&quot;.no-result&quot;).css('display', 'none')
} else {
    table.hide()
    $(&quot;.counter&quot;).text(bulunan + &quot; kayıt bulundu&quot;)
    if (bulunan == 0) {
        $(&quot;.no-result&quot;).css('display', '')
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıda eğer gezilen satırda, aranan değere dair bir şeyler yer alıyorsa gezilen satırı aktif et diyoruz. Bu cümle bize, diğer satırların kaybolacağı anlamını veriyor ki öyle de olacak.&lt;/p&gt;

&lt;p&gt;Tabi &lt;code&gt;bulunan&lt;/code&gt; isimli değişkenin değerini 1 arttırıp &lt;code&gt;counter&lt;/code&gt; class’ına sahip span etiketinin textine ekliyoruz. Böylece kaç sonuç bulunmuş kullanıcıya sunabiliriz.&lt;/p&gt;

&lt;p&gt;Son olarak da eğer &lt;code&gt;no-result&lt;/code&gt; class’ı aktif durumdaysa onu kapatalım ki çünkü sonuç bulunmuş durumda.&lt;/p&gt;

&lt;p&gt;Diğer şart ise sonuç bulunamazsa yani &lt;code&gt;bulunan&lt;/code&gt; değişkenindeki değer 0’a eşitse no-result’ı aktif eder. Onun haricindeki durumlarda tablodaki tüm satırları sayar ki o da kaç satır varsa onu verir.&lt;/p&gt;

&lt;h1 id=&quot;Çalışan-Örnek&quot;&gt;Çalışan Örnek:&lt;/h1&gt;

&lt;script async=&quot;&quot; src=&quot;//jsfiddle.net/aligoren/od3d139L/embed/&quot;&gt;&lt;/script&gt;</content><author><name>Ali GÖREN</name></author><summary>Selamlar. Bu yazıda sizlere çoğunuzun kullanmış olabileceği bir eklentinin daha basit halini anlatacağım. jQuery Datatables eklentisi muazzam iş gören bir eklenti.</summary></entry><entry><title>Flask ve VueJS Kullanımı</title><link href="https://aligoren.com/flask-ve-vuejs-kullanimi" rel="alternate" type="text/html" title="Flask ve VueJS Kullanımı" /><published>2017-02-26T01:36:00+03:00</published><updated>2017-02-26T01:36:00+03:00</updated><id>https://aligoren.com/flask-ve-vuejs-kullanimi</id><content type="html" xml:base="https://aligoren.com/flask-ve-vuejs-kullanimi">&lt;p&gt;Selamlar. Flask framework ile birlikte basit bi uygulamayı içeren video serisi çekiyorum. Bu video serisini çekerken bi sorunla karşılaştım.&lt;/p&gt;

&lt;p&gt;VueJS içinde yer alan template sisteminde, print işlemi bilindiği üzere çift süslü parantez ile yapılıyordu.
Ancak aynı şekilde sistem Jinja2 template sisteminde de kullanılıyordu.&lt;/p&gt;

&lt;p&gt;Bizim bu canavar Flask ve canavar VueJS’in de haliyle kafası karışıyordu. Aslında kafası karışan Jinja2 idi. Neyse çözümü basit.&lt;/p&gt;

&lt;p&gt;VueJS kodlarınızı, Jinja2 içinde kullanmak isterseniz raw tagleri arasında kullanmanız yetecektir.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/aligoren/f31ede41b6fb840b602157c58a4f0bc1.js&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;bonus-flask-ve-vuejs-videosu&quot;&gt;Bonus Flask ve VueJS Videosu:&lt;/h2&gt;

&lt;p&gt;Çekmiş olduğum videoya buradan bakabilirsiniz&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/CcvShkRLbMo?ecver=1&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content><author><name>Ali GÖREN</name></author><summary>Selamlar. Flask framework ile birlikte basit bi uygulamayı içeren video serisi çekiyorum. Bu video serisini çekerken bi sorunla karşılaştım.</summary></entry><entry><title>JavaScript Currency Formatting</title><link href="https://aligoren.com/javascript-currency-formatting" rel="alternate" type="text/html" title="JavaScript Currency Formatting" /><published>2017-02-17T21:00:00+03:00</published><updated>2017-02-17T21:00:00+03:00</updated><id>https://aligoren.com/javascript-currency-formatting</id><content type="html" xml:base="https://aligoren.com/javascript-currency-formatting">&lt;p&gt;Hi. I needed to Turkish currency formatting. I asked stackoverflow community.&lt;/p&gt;

&lt;p&gt;They advice me the Numeral.js library. I think it’s a useful library. I asked myself. Why do I need a library? I didn’t need jQuery or any other library.&lt;/p&gt;

&lt;p&gt;We can use &lt;a href=&quot;https://developer.mozilla.org/tr/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat&quot;&gt;Intl.NumberFormat&lt;/a&gt;. It’s also simple to use.&lt;/p&gt;

&lt;h2 id=&quot;how-we-use&quot;&gt;How we use?&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var price = 1500
var currency_symbol = &quot;₺&quot;

var formattedOutput = new Intl.NumberFormat('tr-TR', {
    style: 'currency',
    currency: 'TRY',
    minimumFractionDigits: 2,
  });
  
return formattedOutput.format(price).replace(currency_symbol, '')
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We replaced currency symbol because we needed only price value.&lt;/p&gt;

&lt;h3 id=&quot;options&quot;&gt;Options:&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;- style: Formatting type
- currency: Which country's currency?
- minimumFractionDigits: Decimal setting
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;See jsFiddle for example: &lt;a href=&quot;https://jsfiddle.net/aligoren/qLgw02f0/&quot;&gt;https://jsfiddle.net/aligoren/qLgw02f0/&lt;/a&gt;&lt;/p&gt;</content><author><name>Ali GÖREN</name></author><summary>Hi. I needed to Turkish currency formatting. I asked stackoverflow community.</summary></entry><entry><title>How to Get Current View Name in Ionic Framework</title><link href="https://aligoren.com/ionic-get-view-name" rel="alternate" type="text/html" title="How to Get Current View Name in Ionic Framework" /><published>2017-01-29T22:54:00+03:00</published><updated>2017-01-29T22:54:00+03:00</updated><id>https://aligoren.com/ionic-get-view-name</id><content type="html" xml:base="https://aligoren.com/ionic-get-view-name">&lt;p&gt;Hi. I needed current view name to dynamic css changing in ionic framework. I’ve tried &lt;code&gt;document.URL&lt;/code&gt; but it’s not worked.
Do not use &lt;code&gt;document.URL&lt;/code&gt; or others because you don’t need.&lt;/p&gt;

&lt;p&gt;Ionic’s &lt;code&gt;$state&lt;/code&gt; &lt;strong&gt;(actually angular’s $state)&lt;/strong&gt; has &lt;code&gt;current.name&lt;/code&gt; property.&lt;/p&gt;

&lt;h2 id=&quot;for-example&quot;&gt;For Example:&lt;/h2&gt;

&lt;p&gt;I do not recommend but just example :)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// shopCtrl.js

if($state.current.name == 'intro') {
	$(&quot;.nav-bar&quot;).css('display', 'none')
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yes! it worked.&lt;/p&gt;</content><author><name>Ali GÖREN</name></author><summary>Hi. I needed current view name to dynamic css changing in ionic framework. I’ve tried document.URL but it’s not worked.
Do not use document.URL or others because you don’t need.</summary></entry><entry><title>JavaScript Console ile Debug İşlemleri</title><link href="https://aligoren.com/javascript-console-ile-debug-islemleri" rel="alternate" type="text/html" title="JavaScript Console ile Debug İşlemleri" /><published>2017-01-22T22:54:00+03:00</published><updated>2017-01-22T22:54:00+03:00</updated><id>https://aligoren.com/javascript-console-ile-debug-islemleri</id><content type="html" xml:base="https://aligoren.com/javascript-console-ile-debug-islemleri">&lt;p&gt;Selamlar. Front-end geliştiricilerin çok iyi bildiği bir konu console’dur. Bütün dillerde yapılabildiği gibi Javascript üzerinde de debug işlemleri yapılabilir.&lt;/p&gt;

&lt;p&gt;Aslında debug işlemleri, programlamanın vazgeçilmez bir parçasıdır. Çoğu yazılımcı zamanının bir bölümünü bug ve sorunları düzeltmek amacıyla harcamıştır.&lt;/p&gt;

&lt;p&gt;Bu yazıda JavaScript &lt;code&gt;console&lt;/code&gt; nesnesi ile debug işlemlerine dair ufak tefek ipuçları paylaşacağım. Bu basit bi tanıtım olacaktır. Daha derinlemesine bilgi için bahsi geçen yöntemlere göz atmanız daha iyi olacaktır.&lt;/p&gt;

&lt;h2 id=&quot;assert-İşlemi&quot;&gt;Assert İşlemi&lt;/h2&gt;

&lt;p&gt;Bu işlem içim &lt;code&gt;console.assert()&lt;/code&gt; kullanmalısınız. &lt;strong&gt;assert()&lt;/strong&gt; fonksiyonu mutlaka boolean türünden bir değer almalıdır. Aşağıdaki örnek tam da buna uygundur:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/assert_js.png&quot; alt=&quot;/images/posts/assert_js.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;trace-İşlemi&quot;&gt;Trace İşlemi&lt;/h2&gt;

&lt;p&gt;Javascript console’unda log bilgilerini ve bu bilgiler sonucu ortaya çıkan değerleri almak için çokca yöntem mevcuttur. Bunlardan birisi &lt;code&gt;console.trace()&lt;/code&gt; olmakta.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/trace_js.png&quot; alt=&quot;/images/posts/trace_js.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Yukarıdaki işlem size aslında bir adet stack trace döndürecektir.&lt;/p&gt;

&lt;h2 id=&quot;tablolar&quot;&gt;Tablolar&lt;/h2&gt;

&lt;p&gt;Evet javascript console’u tablolara da izin vermektedir. Şaşırtıcı gibi ama olmasın :). Bu işlemi &lt;code&gt;console.table()&lt;/code&gt; ile yaparız. Tabi bu işlem Object ve array türünden değeri bize sunar. Ayrıca bir de hoş bir tabloyu da önümüze getirir.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.table(
	[
		{
			dil: 'PHP', uzanti: '.php' 
		}, 
		{
			dil: 'Javascript', uzanti: '.js'
		}
	]
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/table_js.png&quot; alt=&quot;/images/posts/table_js.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;log-tutma&quot;&gt;Log Tutma&lt;/h2&gt;

&lt;p&gt;Javascript ile log mesajları oluşturabilirsiniz. Aslında full stack ya da front-end olun fark etmez mutlaka console’da değer döndürmek zorunda kalmışsınızdır. Çünkü bir alert asla ve asla size direkt bilgileri sunmaz.&lt;/p&gt;

&lt;p&gt;Bu açıdan bakarsak console’un bize sunduğu loglar bizim için çok değerlidir. Yeri gelmişken kendi hazırladığım &lt;a href=&quot;https://github.com/aligoren/ColorLog.js&quot;&gt;ColorLog.js&lt;/a&gt; kütüphanesini kullanabilirsiniz. Log mesajlarını renkli olarak alırsınız.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info(&quot;Bilgi Mesajı&quot;);
console.warn(&quot;Uyarı Mesajı&quot;);
console.error(&quot;Hata Mesajı&quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki log fonksiyonları ile işimizi görecek şekilde mesajlar üretebiliriz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/log_js.png&quot; alt=&quot;/images/posts/log_js.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;timerlar&quot;&gt;Timer’lar&lt;/h2&gt;

&lt;p&gt;Zaman tutmak bazen önemlidir. Örneğin bir for döngüsünün ne kadar sürede tamamlanacağının bilgisini almak gibi basit bir işlem şöyle gerçekleştirilir.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.time(&quot;zamanTut&quot;);
for(i = 0; i &amp;lt; 100; i++) {
	// işlemler
}
console.timeEnd(&quot;zamanTut&quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/timer_js.png&quot; alt=&quot;/images/posts/timer_js.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;monitör-etme&quot;&gt;Monitör Etme&lt;/h2&gt;

&lt;p&gt;Bazen fonksiyonları izlemek isteyebilirsiniz ya da bazı hareketlerin monitörlenmesini isteyebilirsiniz. O zamanlarda iki tür fonksiyon mevcuttur. İlki;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;monitor() Fonksiyonu&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bu fonksiyonla bir başka fonksiyonu izlemeniz mümkündür. Örnek;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/monitor_js.png&quot; alt=&quot;/images/posts/monitor_js.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;monitorEvents() Fonksiyonu&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bu fonksiyonla event’lar monitör edilebilir. Bu event’ları zaten hepimiz biliyoruz. Örneğin bu event’lar arasında click yer alıyor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/monitorEvent_js.png&quot; alt=&quot;/images/posts/monitorEvent_js.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;b id=&quot;f1&quot;&gt;Alıntı&lt;/b&gt;: Carlos Cuesta &lt;a href=&quot;https://carloscuesta.me/blog/debugging-with-the-javascript-console/&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;</content><author><name>Ali GÖREN</name></author><summary>Selamlar. Front-end geliştiricilerin çok iyi bildiği bir konu console’dur. Bütün dillerde yapılabildiği gibi Javascript üzerinde de debug işlemleri yapılabilir.</summary></entry><entry><title>PHP’de Anonim Fonksiyonlar</title><link href="https://aligoren.com/phpde-anonim-fonksiyonlar-nedir" rel="alternate" type="text/html" title="PHP'de Anonim Fonksiyonlar" /><published>2017-01-15T15:10:00+03:00</published><updated>2017-01-15T15:10:00+03:00</updated><id>https://aligoren.com/phpde-anonim-fonksiyonlar-nedir</id><content type="html" xml:base="https://aligoren.com/phpde-anonim-fonksiyonlar-nedir">&lt;p&gt;Selamlar. Bu yazıda size closure yani anonim fonksiyonları göstereceğim. Öğrenme aşamasından önce yani sadece ilk bakışta kafamı karıştırmıştı. Ama zor değilmiş.&lt;/p&gt;

&lt;p&gt;Şimdi elimizde bir nesne var diyelim. Bu nesnenin bir instance’ı yani örneğini oluşturdunuz ve 
bu oluşturulan instance’lara ait methodları kullanarak yeni bir instance oluşturabileceğinizi düşünün daha önce düşündünüz mü bilmiyorum.&lt;/p&gt;

&lt;h3 style=&quot;color:red&quot;&gt;Yalnız Değilsiniz!&lt;/h3&gt;

&lt;p&gt;Eğer hayır diyorsanız yalnız olmadığınıza inancım tam. Size reflection ve closure kavramlarının nasıl kullanılacağını göstermek için bu yazıyı yazdım.&lt;/p&gt;

&lt;p&gt;Öncelikle closure ya da anonym functions olarak karşımıza çıkar bu kavram. Onu bilelim. PHP konu olduğu için belirtmek gerekiyor ki 5.3 sürümünden itibaren closure’ları kullanabiliriz. Yanılmıyorsam günümüzde desteklemeyen pek az yer vardır.&lt;/p&gt;

&lt;p&gt;Zaten bu closure kavramını araştırsanız internette bir sürü kaynak bulabilirsiniz. Ben bu yazıyı yazmadan önce baya baya yazanlar olmuştur gerek Türkçe gerekse İngilizce dilinde mevcuttur yani. Çok uzatmayayım.&lt;/p&gt;

&lt;h3 style=&quot;color:red;&quot;&gt;İsimsiz&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/bourne.jpg&quot; alt=&quot;/images/posts/bourne.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;İsimsiz denilince aklıma Jason Bourne gelir. Bilmiyorum Bourne serisini izlediniz mi ama kendisi kimliksiz aslında adı olmayan kafasının içinde kaybolan bir abimiz. Ama  merak etmeyin bu anonim fonksiyonlar öyle aksiyon dolu bir şey değil.&lt;/p&gt;

&lt;p&gt;Anonim fonksiyonlar dediğime göre bu fonksiyonların nasıl fonksiyonlar olacağını adlarından anlamış olmalısınız. Anonim fonksiyonlar. Eğer &lt;strong&gt;isme sahip olmayan fonksiyon&lt;/strong&gt; tanımı aklınıza geliyorsa doğru düşünmüşsünüz. Basit bir örneği şöyle size gösterebilirim.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;$isimsiz = function() {
	echo 'Merhaba';
};

$isimsiz(); // Çıktısı Merhaba;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kodu dikkatli incelersiniz fonksiyona herhangi bir isim verilmedi ancak oluşturulduğu anda &lt;code&gt;$isimsiz&lt;/code&gt; isimli bir değişkene atamasını yaptık. Yani normal bir değişken oluşturma işlemini yaptınız sonuna noktalı virgülünü de koydunuz. Tek farkı değişkene atanan şey direkt bir &lt;strong&gt;value&lt;/strong&gt; yani &lt;strong&gt;değer&lt;/strong&gt; değil. Bir fonksiyon. Bu kısmı da uzun uzun yazmayayım. Sadece bu fonksiyonları çağırırken başlarına dollar sign yani &lt;strong&gt;$&lt;/strong&gt; koymanız gerektiğini unutmayın.&lt;/p&gt;

&lt;p&gt;Bu fonksiyonların bir başka metoda parameter olarak da geçilebileceğini unutmayın. Basit bir başka örnek vereyim bu da fonksiyona, anonim bir fonksiyon eklenebilmesine dair olsun:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;function benim_fonksiyonum($anonim_fonksiyon) {
	return $anonim_fonksiyon();
}

benim_fonksiyonum(function() {
	echo 'Fonksiyon içinde fonksiyon mu olur? Oluyor işte';
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki yönteme eğer frameworklere aşinaysanız ya da onları incelediyseniz denk gelmişsinizdir. Kısacası böyle de kullanabilirsiniz. Ben bu yöntemi kullanarak şöyle basit bir repo olışturdum:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/aligoren/Request&quot;&gt;https://github.com/aligoren/Request&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Readme dosyasını incelerseniz aslında anlattığım şeyin ne gibi noktalarda kullanılabileceğini de anlamış olursunuz. Yazıyı çok uzatmak istemiyorum ancak bu konuda &lt;a href=&quot;http://php.net/manual/tr/class.reflectionmethod.php&quot;&gt;ReflectionMethod&lt;/a&gt; sınıfını iyi incelemenizi öneririm. Bu sayede direkt olarak closure kullanımını da deneyimlemiş olursunuz.&lt;/p&gt;

&lt;p&gt;Umarım faydalı olmuştur.&lt;/p&gt;</content><author><name>Ali GÖREN</name></author><summary>Selamlar. Bu yazıda size closure yani anonim fonksiyonları göstereceğim. Öğrenme aşamasından önce yani sadece ilk bakışta kafamı karıştırmıştı. Ama zor değilmiş.</summary></entry><entry><title>Disable or Enable HTML Element with JavaScript</title><link href="https://aligoren.com/disable-html-element-with-javascript" rel="alternate" type="text/html" title="Disable or Enable HTML Element with JavaScript" /><published>2017-01-08T15:10:00+03:00</published><updated>2017-01-08T15:10:00+03:00</updated><id>https://aligoren.com/disable-html-element-with-javascript</id><content type="html" xml:base="https://aligoren.com/disable-html-element-with-javascript">&lt;p&gt;Hi. I needed to make the HTML elements enabled or disable.&lt;/p&gt;

&lt;p&gt;When I try with VanillaJS I wrote this code:&lt;/p&gt;

&lt;h2 style=&quot;color: red;&quot;&gt;VanillaJS Way&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;JS Code&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function disableOrEnableBtn() {
    var isDisabled = document.getElementById(&quot;myBtn&quot;).disabled;
    if(isDisabled) {
      document.getElementById(&quot;myBtn&quot;).disabled = false;
    } else {
      document.getElementById(&quot;myBtn&quot;).disabled = true;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;HTML Code&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;button id=&quot;myBtn&quot;&amp;gt;Button&amp;lt;/button&amp;gt;

&amp;lt;button onclick=&quot;disableBtn();&quot;&amp;gt;Change Button Status&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;See VanillaJS Example &lt;a href=&quot;https://jsfiddle.net/aligoren/pqa6xw51/&quot;&gt;https://jsfiddle.net/aligoren/pqa6xw51/&lt;/a&gt;&lt;/p&gt;

&lt;h2 style=&quot;color: red;&quot;&gt;jQuery Way&lt;/h2&gt;

&lt;p&gt;You can also use jQuery. This code is very basic:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JS Code&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;$.disableBtn = function() {
	$('#myBtn').prop(&quot;disabled&quot;, (_, val) =&amp;gt; !val);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;HTML Code&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;button id=&quot;myBtn&quot;&amp;gt;Button&amp;lt;/button&amp;gt;

&amp;lt;button onclick=&quot;$.disableBtn();&quot;&amp;gt;Change Button Status&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;See jQuery Example &lt;a href=&quot;https://jsfiddle.net/aligoren/n14pzh5g/&quot;&gt;https://jsfiddle.net/aligoren/n14pzh5g/&lt;/a&gt;&lt;/p&gt;

&lt;h2 style=&quot;color: red;&quot;&gt;AngularJS Way&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;body ng-app=&quot;&quot;&amp;gt;
  &amp;lt;label&amp;gt;Change Button Status: &amp;lt;input type=&quot;checkbox&quot; ng-model=&quot;checked&quot;&amp;gt;&amp;lt;/label&amp;gt;&amp;lt;br/&amp;gt;
  &amp;lt;button ng-model=&quot;button&quot; ng-disabled=&quot;checked&quot;&amp;gt;Button&amp;lt;/button&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;See Example &lt;a href=&quot;https://jsfiddle.net/aligoren/6nby94kj/&quot;&gt;https://jsfiddle.net/aligoren/6nby94kj/&lt;/a&gt;&lt;/p&gt;</content><author><name>Ali GÖREN</name></author><summary>Hi. I needed to make the HTML elements enabled or disable.</summary></entry><entry><title>jQuery ile Dinamik İşlemler</title><link href="https://aligoren.com/jquery-ile-dinamik-islemler" rel="alternate" type="text/html" title="jQuery ile Dinamik İşlemler" /><published>2016-12-31T15:50:00+03:00</published><updated>2016-12-31T15:50:00+03:00</updated><id>https://aligoren.com/jquery-ile-dinamik-islemler</id><content type="html" xml:base="https://aligoren.com/jquery-ile-dinamik-islemler">&lt;p&gt;Selam. Bu yazının içeriğini Tayfun Erbilen’in soru-cevap platformu olarak açtığı UzmanCevap üzerinde yer alan bir 
&lt;a href=&quot;http://uzmancevap.org/soru/7644/jquery-kosulu-renklendirme&quot;&gt;sorudan&lt;/a&gt; çıkarıyorum.&lt;/p&gt;

&lt;p&gt;Sorun şu. Bir arkadaşımız HTML tablo oluşturmuş. Muhtemelen endüstriyel bir sistem var. Bu sistemde kapasitelerin ölçümünü yapıyor.
Kapasitesi belli bir alanın üzerinde olana da renk vermek istiyor. Ama burada işlemin jQuery ile nasıl yapılacağı ile ilgileniyor.
Normalde bunu back-end kısımda sorguyu çekerken de halledebileceğinizi söylemem gerekiyor.&lt;/p&gt;

&lt;p&gt;Sorunun özüne dönersek ilk satırda bir adet robot bulunmakta. Bu robota dair üç adet kapasite birimi bulunmakta.
Arkadaşımız diyor ki kapasitesi 12’yi geçen hücrenin arkaplanı kırmızı renk olsun. Aslında kendisi zaten bir adet hücreyi yapmış.
Fakat o tüm hücrelerin hesaplanmasını ve aslında tüm satırların da bu hesaba dahil olmasını istiyor.&lt;/p&gt;

&lt;p&gt;Öncelikle basit olarak tablomuzu şöyle size aktarayım kodları da yer alsın:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;table&amp;gt;
  &amp;lt;thead&amp;gt;
    &amp;lt;th&amp;gt;Ad&amp;lt;/th&amp;gt;
    &amp;lt;th&amp;gt;Kapasite&amp;lt;/th&amp;gt;
    &amp;lt;th&amp;gt;Kapasite 2&amp;lt;/th&amp;gt;
    &amp;lt;th&amp;gt;Kapasite 3&amp;lt;/th&amp;gt;
  &amp;lt;/thead&amp;gt;
  &amp;lt;tbody&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;Robot1&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;13&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;12&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;11&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;Robot2&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;13&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;13&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;13&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;Robot3&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;4&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;18&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;21&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;Robot4&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;5&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;21&amp;lt;/td&amp;gt;
      &amp;lt;td class='kapasite'&amp;gt;11&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
  &amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;#Tablo Örnek&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/robot_table.png&quot; alt=&quot;/images/posts/robot_table.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Neyse bu tabloda belli başlı alanlar kurallı olarak renklendirilmeli. Arkadaşımızın kuralı 12’den büyük olanların arkaplanı kırmızı olsun şeklinde.
Ben tüm hücrelere class vererek tek bir noktanın kontrolünün sağlanmasını istedim. Her bir satırda bulunan her bir hücrenin kontrolünü de sağlayarak bu işlemi tamamlayalım.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;#jQuery Kodu&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;$(&quot;table&quot;).ready(function() {
  	$(this).find(&quot;tr td.kapasite&quot;).each(function() {
    	if(parseInt($(this).text()) &amp;gt; 12) {
      	$(this).css(&quot;background-color&quot;, &quot;red&quot;)
      }
    })
    
  })
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki kodla tablo hazır olduğu anda hazır olan tabloda dolaşıyoruz. Öncelikle o tabloda tr yani satırı yakalıyoruz.
Ardından o satırda yer alan hücreyi dolaşıyoruz tabi bunu yaparken ana şartıız ise class’ı &lt;strong&gt;kapasite&lt;/strong&gt; olanı dolaşıyoruz.
Tabloda 50 satır varsa 50 satırı ve hücrelerini dolaşacak kısacası. Bu işlemi &lt;code&gt;each()&lt;/code&gt; fonksiyonu ile yapıyoruz.&lt;/p&gt;

&lt;p&gt;Daha sonra ilk dolaşılan satırdaki ilk hücrede yer alan değerin text’ini int türüne parse edip arkadaşımızın istediği koşuldan büyük mü kontrol ediyoruz.
Zaten sonrası ise o hücreye yeni bir CSS atamak. Aynı işlemi buton için de yapabiliriz. Yani butona tıklayınca bu işlem gerçekleşmeli.
Tabii bu işlemde bu sefer değer inputtan gelecek.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;$(&quot;button&quot;).on(&quot;click&quot;, function() {
      $(&quot;table&quot;).ready(function() {
      var kapasite = $(this).find(&quot;tr td.kapasite&quot;).each(function() {
      	$(this).css(&quot;background-color&quot;, &quot;&quot;)
        if(parseInt($(this).text()) &amp;gt; parseInt($(&quot;[name='txtSayi']&quot;).val())) {
          $(this).css(&quot;background-color&quot;, &quot;red&quot;)
        }
      })

    })
  })
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;jsfiddle-Üzerinde-Örnek&quot;&gt;JSFiddle Üzerinde Örnek&lt;/h2&gt;

&lt;script async=&quot;&quot; src=&quot;//jsfiddle.net/cc6ded5w/1/embed/&quot;&gt;&lt;/script&gt;

&lt;p&gt;Evet işlem bu kadar.&lt;/p&gt;</content><author><name>Ali GÖREN</name></author><summary>Selam. Bu yazının içeriğini Tayfun Erbilen’in soru-cevap platformu olarak açtığı UzmanCevap üzerinde yer alan bir 
sorudan çıkarıyorum.</summary></entry><entry><title>PHP ile Base URL Almak</title><link href="https://aligoren.com/php-ile-base-url-almak" rel="alternate" type="text/html" title="PHP ile Base URL Almak" /><published>2016-12-31T15:50:00+03:00</published><updated>2016-12-31T15:50:00+03:00</updated><id>https://aligoren.com/php-ile-base-url-almak</id><content type="html" xml:base="https://aligoren.com/php-ile-base-url-almak">&lt;p&gt;Selamlar. Ufak tefek PHP projeleri ile mevcut bilgimi daha yukarı taşımayı hedefliyorum. Tabi her projede yaşanabilmesi muhtemel bazı sorunları ben de yaşadım. Bu sorunlardan birisi de base url sorunu.&lt;/p&gt;

&lt;p&gt;Soruna dair cevabı Stackoverflow üzerinde arıyordum. Bir başlığa denk &lt;a href=&quot;http://stackoverflow.com/questions/2820723/how-to-get-base-url-with-php/41407858&quot;&gt;geldikten&lt;/a&gt; sonra oturup kodunu kendim yazmalıyım dedim.&lt;/p&gt;

&lt;p&gt;Sorun şu normalde &lt;code&gt;http://localhost&lt;/code&gt; adresi bizim base_url adresimiz fakat proje bir alt klasörde yer alıyorsa o zaman sıkıntılar çıkabiliyor. Çünkü &lt;code&gt;http://localhost/proje&lt;/code&gt; böyle bir adrese sahip olabilirsiniz ve dahası bu proje yolunda çalışırken htaccess kullanarak diğer sayfaları sanki bir klasörmüş gibi gösterebilirsiniz. Bu nedenden dolayı da mutlak url’yi yakalamakta sorun yaşayabiliyorsunuz. Bunun birden fazla çözüm yöntemi var. Öncelikle en basit olanını yapalım:&lt;/p&gt;

&lt;h2 id=&quot;Çözüm-1&quot;&gt;Çözüm 1:&lt;/h2&gt;

&lt;p&gt;Bu yöntemde, base_url methodu tanımlanır ve o yönteme statik url verilir:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;function base_url() {
	return 'http://localhost/proje';
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;Çözüm-2&quot;&gt;Çözüm 2:&lt;/h2&gt;

&lt;p&gt;Bu yöntemde biraz programlama beceriniz önemli aslında. Ben trait kullandım, çünkü bu kod şu anki projemin bi parçası. Multiple olarak extends işlemi yapamadığım için 5.4 ile gelen traitleri kullanmaya karar verdim.&lt;/p&gt;

&lt;h3 id=&quot;gereksinimler&quot;&gt;Gereksinimler:&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;- Gezindiğimiz alan adı: $_SERVER['SERVER_NAME'];
- Şu anda bulunduğumuz sayaf: $_SERVER['REQUEST_URI'];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bu işlemde mevcut bulunduğumuz sayfayı PHP’nin &lt;code&gt;str_replace()&lt;/code&gt; fonksiyonunu kullanarak temizleyeceğiz. Zaten düz root ise hiçbir şey görünmeyecek. Yok farklı URL’lerde isek o zaman kalan kısım görülecektir. Örneğin şöyle:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;/*
http://localhost =&amp;gt; return &quot;&quot;
http://localhost/proje =&amp;gt; return &quot;/proje&quot;
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki gibi bir temizleme işlemi sonrası yapılması gereken PHP’nin &lt;code&gt;explode()&lt;/code&gt; fonksiyonunu slash ile kullanarak slashtan sonra gelen ilk değeri almak. Yani şöyle düşünelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;/*
/proje
/proje/abc/
/proje/a/b/c/d/e/f/g
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;İlk satırdaki proje değerini almak zaten sıkıntılı değil ama bulunduğunuz sayfa 3. satırdaki gibi ise bir problemimiz var demektir. Bu yüzden explode ile böldüklerimizin ilkini alıyoruz. Bu genelde projenin root dizinidir.&lt;/p&gt;

&lt;p&gt;Dizinin altındaki dizinlere maalesef bir çözümüm yok, o durumlarda artık manuel olarak ilk yöntemi denemelisiniz. Neyse bu işlem sonrasında ise dönen array türü değerin 1. indexini çağırıyoruz.&lt;/p&gt;

&lt;p&gt;Bu projemizin root olarak görünen klasörüdür. Yani &lt;code&gt;/proje/a/b/c/d/e/f/g&lt;/code&gt; gibi bir adresten sadece &lt;strong&gt;proje&lt;/strong&gt; değerini alıyoruz. Ve ilk değerin başına tekrar bir slash ekliyoruz Son olarak dönen değer &lt;em&gt;”/”&lt;/em&gt; ya da &lt;em&gt;“/proje_kok_dizini”&lt;/em&gt; şeklinde oluyor. Aslında senaryo olarak size bu işlemin nasıl yapacağını söylediğime göre kodlaması da basit anlamda kafanızda canlandı. Yine de kodlarını paylaşayım:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;url.php&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;trait URL {
    private $url = '';
    private $current_url = '';
    public $get = '';

    function __construct()
    {
        $this-&amp;gt;url = $_SERVER['SERVER_NAME'];
        $this-&amp;gt;current_url = $_SERVER['REQUEST_URI'];

        $clean_server = str_replace('', $this-&amp;gt;url, $this-&amp;gt;current_url);
        $clean_server = explode('/', $clean_server);

        $this-&amp;gt;get = array('base_url' =&amp;gt; &quot;/&quot;.$clean_server[1]);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;index.php&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;require_once 'url.php'

class Home
{
    use URL;
}

$h = new Home();

// Bu satır HTML kodları içermektedir.
// O yüzden üst kısımda PHP taglerini kapatmalısınız.

&amp;lt;a href=&quot;&amp;lt;?=$h-&amp;gt;get['base_url']?&amp;gt;&quot;&amp;gt;Base&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bu yazıyı Stackoverflow’da verdiğim &lt;a href=&quot;http://stackoverflow.com/a/41407858/3821823&quot;&gt;şu&lt;/a&gt; cevaptan esinlenerek oluşturdum&lt;/p&gt;</content><author><name>Ali GÖREN</name></author><summary>Selamlar. Ufak tefek PHP projeleri ile mevcut bilgimi daha yukarı taşımayı hedefliyorum. Tabi her projede yaşanabilmesi muhtemel bazı sorunları ben de yaşadım. Bu sorunlardan birisi de base url sorunu.</summary></entry><entry><title>Atıştırmalık MongoDB Yazısı - 2</title><link href="https://aligoren.com/atistirmalik-mongodb-yazisi-2" rel="alternate" type="text/html" title="Atıştırmalık MongoDB Yazısı - 2" /><published>2016-12-17T23:30:00+03:00</published><updated>2016-12-17T23:30:00+03:00</updated><id>https://aligoren.com/atistirmalik-mongodb-yazisi-2</id><content type="html" xml:base="https://aligoren.com/atistirmalik-mongodb-yazisi-2">&lt;p&gt;Selam bu yazı bir önceki &lt;a href=&quot;https://aligoren.com/atistirmalik-mongodb-yazisi&quot;&gt;Atıştırmalık MongoDB Yazısı&lt;/a&gt;‘nın devamı niteliğinde bir yazı.
Bu yazıda MongoDB ile Update ve Delete işlemlerini anlatacağım. Klasik SQL yöntemlerine göre farklılıklar içerdiğini önceki yazımda da belirtmiştim.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/mongo.png&quot; alt=&quot;/images/posts/mongo.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;mongodbyi-dosyadan-okuyalım&quot;&gt;MongoDB’yi Dosyadan Okuyalım&lt;/h3&gt;

&lt;p&gt;MongoDB için shell güzel bir araç. Ancak uzun Mongo sorgularında shell üzerinde girintiler ve diğer işlemler programlama anlamında pek de kolaylık sağlamıyor.
MongoDB’yi geliştiren ekip böyle durumları tahmin ederek bir kolaylık sağlamış. Örneğin şöyle bir sorguyu shell ile yazdığınızı düşünün:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;use deneme;

db.x.insert({
	&quot;kolon&quot;: &quot;içerik&quot;,
	&quot;kolon2&quot;: &quot;içerik2&quot;,
	&quot;kolon3&quot;: &quot;içerik3&quot;,
	&quot;kolon4&quot;: &quot;içerik4&quot;,
	&quot;kolon5&quot;: &quot;içerik5&quot;,
	&quot;kolon6&quot;: &quot;içerik6&quot;,
	&quot;kolon7&quot;: &quot;içerik7&quot;,
	&quot;kolon8&quot;: &quot;içerik8&quot;,
	&quot;kolon9&quot;: &quot;içerik9&quot;,
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki sorgulama işlemlerini shell’de yapmak inanın gerçekten zahmetli bir işlem. Bunun için yukarıdaki kodları js uzantılı bir dosyaya kaydedin
&lt;strong&gt;(Farklı uzantıları denemedim)&lt;/strong&gt; ve komut satırından şu komutu verin: &lt;code&gt;mongo &amp;lt; dosyaniz.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Evet bu kadar :)&lt;/p&gt;

&lt;h3 id=&quot;nasıl-yapılıyor-bu-update&quot;&gt;Nasıl Yapılıyor Bu Update?&lt;/h3&gt;

&lt;p&gt;Yukarıdaki X collection’ında yer alan içeriklerden &lt;code&gt;&quot;kolon4&quot;&lt;/code&gt; e ait datayı değiştirelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.x.update(
	{
		&quot;kolon4&quot;: &quot;Yenilendi&quot;
	}
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;İstersek şöyle bir sorgu ile kolon4’e ait yeni değeri görüntüleyebiliriz:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.x.find()[1][&quot;kolon4&quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tabii bu kesin bir yöntem olmayabiliyor. Bunu anlamanın en kolay olu koleksiyonu yazdırmanızdan geçiyor. Hem eski değer hem de yeni değer görülebiliyor.
Tabii yaptığınız işlem sonucunda &lt;strong&gt;nInserted&lt;/strong&gt; yerine &lt;strong&gt;nModified&lt;/strong&gt; içinde bir rakam göreceksiniz.&lt;/p&gt;

&lt;p&gt;Yine aynı şekilde &lt;a href=&quot;https://docs.mongodb.com/manual/reference/method/db.collection.updateMany/#db.collection.updateMany&quot;&gt;updateMany&lt;/a&gt; ve &lt;a href=&quot;https://docs.mongodb.com/manual/reference/method/db.collection.updateOne/#db.collection.updateOne&quot;&gt;updateOne&lt;/a&gt; metodlarını kullanarak çoklu ya da tekil güncelleme işlemlerini de yapabilirsiniz. Bu iki metoda değinmiyorum çünkü Many ve One ne işe yarıyor bunları önceki yazıda anlatmıştım. Kullanımdan kaynaklı farklılılar var sadece.&lt;/p&gt;

&lt;p&gt;Bunlar haricinde yeni bir metodla karşılaşıyoruz. Bu metodun adı &lt;strong&gt;replaceOne()&lt;/strong&gt; evet bu yeni metod, koşulda eşleşme gerçekleşirse gerçekleşen ilk eşleşmeye işlem yapar.
Örneği bir SQL cümlesinden verelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT * FROM Kullanicilar WHERE Adi='Ali'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki satır birden fazla Ali kullanıcısını döndürebilir. Ancak &lt;strong&gt;replaceOne()&lt;/strong&gt; metodu dönen bu değerlerden ilk olanını bulur ve güncelleme işlemini yapar.
Örnek kullanımı şöyledir:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.x.replaceOne(
	{
		kolon: &quot;icerik&quot;
	},
	{
		kolon: &quot;Yeni icerik&quot;
	}
)

/*
ÇIKTISI:

{ &quot;acknowledged&quot; : true, &quot;matchedCount&quot; : 1, &quot;modifiedCount&quot; : 1 }
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;İsterseniz &lt;strong&gt;db.x.find()&lt;/strong&gt; diyerek çıkan sonucu görüntüleyebilirsiniz:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{ &quot;_id&quot; : ObjectId(&quot;5856e7347db38a7560ec56ae&quot;), &quot;kolon&quot; : &quot;Yeni icerik&quot; }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Güncelleme işlemleri sadece bu kadarla sınırlığı değil. Bu işlemleri siz verdiğim linklerden daha geniş bir şekilde öğrenebilirsiniz.&lt;/p&gt;

&lt;h3 id=&quot;nasıl-sileceğiz&quot;&gt;Nasıl Sileceğiz?&lt;/h3&gt;

&lt;p&gt;RDBMS kullananlar olarak önceki alışkanlıklarımızdan kopamıyoruz. MongoDB’de bu alışkanlıklardan kopabilmiş değil.
Evet tahmin edildiği üzere silme işlemi destekliyor MongoDB. Ancak biraz farklı. Bunun için şu metodları bize sunuyor:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- remove()
- deleteOne()
- deleteMany()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;remove Metodu&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bunlardan ilki olan &lt;strong&gt;remove()&lt;/strong&gt; metoduyla tek seferde tüm koleksiyonu silebildiğimiz gibi koşul kullanarak koleksiyonda toplu silme de yapabiliriz.
Burada bilmemiz gereken toplu silme yaptığımızdır.&lt;/p&gt;

&lt;p&gt;Örnek herhangi bir koşula bağlı olmaksızın tüm &lt;strong&gt;x&lt;/strong&gt; koleksiyonunu silen sorgu kodunu verelim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.x.remove( {} )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Eğer bu silme işleminin bütün tablo geneline değil de sadece belirli değerlere yansımasını istiyorsak şöyle yapmalıyız:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.x.remove({ 
    &quot;kolon&quot;: &quot;Bir İçerik&quot;
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Artık bu sayede içinde &lt;strong&gt;Bir İçerik&lt;/strong&gt; geçen yani tam eşleşme sağlayan tüm değerler x tablosundan silinecektir.
Tüm dokümana &lt;a href=&quot;https://docs.mongodb.com/manual/reference/method/db.collection.remove/#db.collection.remove&quot;&gt;buradan&lt;/a&gt; bakabilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;deleteOne() Metodu&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yine geldik One’lı Many’li metodlara. Mantığı artık söylememe gerek yok. Sadece nasıl çalıştıklarını belirtip bu yazıyı noktalayacağım.
Tamamını anlatmıyorum çünkü artık siz de ben de ufak bilgilere sahibiz ve MongoDB dokümanlarına erişebilir durumdayız :)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.x.deleteOne( { &quot;_id&quot; : ObjectId(&quot;5856e7347db38a7560ec56ae&quot;) } );

/*
ÇIKTISI:

{ &quot;acknowledged&quot; : true, &quot;deletedCount&quot; : 1 }
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıdaki işlemin klasik SQL sorgusu şöyle:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;DELETE FROM Kullanicilar WHERE ID=2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;deleteMany() Metodu&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;İstersek çoklu silme işlemlerini de yapabiliriz. Fakat buradan şunu anlamayalım. Örneğin ID’si 1,2,3,4,5,6 olanları tek tek yazacağız gibi bir şey anlamayalım.
Burada aslında &lt;strong&gt;remove()&lt;/strong&gt; metodundaki toplu silmenin bir benzerini yapabiliriz. Örnek:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;db.x.deleteMany( { &quot;kolon&quot; : &quot;A Değeri&quot; } );

/*
ÇIKTISI:

{ &quot;acknowledged&quot; : true, &quot;deletedCount&quot; : 1 }
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yukarıda &lt;strong&gt;A Değeri&lt;/strong&gt; sadece 1 adet olduğu için silindiğinde de &lt;strong&gt;deletedCount&lt;/strong&gt; 1 değerini döndürmüştür. Eğer 10 adet aynı değere sahip kayıt olsaydı o değer 10 olacaktı.&lt;/p&gt;

&lt;h2 id=&quot;kaynaklar&quot;&gt;Kaynaklar&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.mongodb.com/manual/tutorial/update-documents/#update&quot;&gt;Update İşlemleri - MongoDB Resmi Dokümanı&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.mongodb.com/manual/tutorial/remove-documents/#delete-methods&quot;&gt;Delete İşlemleri - MongoDB Resmi Dokümanı&lt;/a&gt;&lt;/p&gt;</content><author><name>Ali GÖREN</name></author><summary>Selam bu yazı bir önceki Atıştırmalık MongoDB Yazısı‘nın devamı niteliğinde bir yazı.
Bu yazıda MongoDB ile Update ve Delete işlemlerini anlatacağım. Klasik SQL yöntemlerine göre farklılıklar içerdiğini önceki yazımda da belirtmiştim.</summary></entry></feed>
