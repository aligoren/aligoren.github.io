<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Ali GÖREN</title><link>https://aligoren.com/</link><description>Programlama, Linux, Açık Kaynak, Python, C#</description><atom:link href="https://aligoren.com/rss.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Wed, 13 Apr 2016 19:55:45 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Python ve NGram Algoritması</title><link>https://aligoren.com/python-ve-ngram-algoritmasi/</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Bu yazıyı yazmadan önce google'da sayısızca arama yapıyordum. Beni çıldırtan bir olay oldu. Şimdi aradığım şey örneğin &lt;strong&gt;ahmet&lt;/strong&gt; tamam iyi hoş arıyorsun da. Gelip bana neden "Bunu mu denemek istediniz?" şeklinde soru soruyorsun. Neyse önerdiği şeye tıklıyorum. Hobaa. Eski yazdığımı öneriyor bu sefer.&lt;/p&gt;
&lt;p&gt;Meselenin aslı şu. Ne yazmaya çalıştığımı nasıl olur da bilebilir ki google? Pek de bildiği söylenemez :P. Bu yazıda anlatmaya çalışacağım NGram tarzı bir algoritma kullandıkları kesin. Bakarsınız onlar tam da bunu kullanıyorlardır.
&lt;/p&gt;&lt;p&gt;&lt;a href="https://aligoren.com/python-ve-ngram-algoritmasi/"&gt;Devamını Oku…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>programlama</category><category>python</category><guid>https://aligoren.com/python-ve-ngram-algoritmasi/</guid><pubDate>Wed, 13 Apr 2016 19:33:15 GMT</pubDate></item><item><title>Flask ile JSON Çıktı Almak</title><link>https://aligoren.com/flask-ile-json-cikti-almak/</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Flask framework'ü bilmeyen yoktur. Bu yazı hiç kullanmamış arkadaşlar için değil baştan belirteyim. Bu yazıda Flask framework ile nasıl json çıktı alırız onu anlatmaya çalışacağım.&lt;/p&gt;
&lt;p&gt;Öncelikle flask kurulu olmalı onu biliyoruz. json çıktı alma işlemi için ben flask ile gelen jsonify metodunu tercih ediyorum. Siz isterseniz klasik json da kullanabilirsiniz. İki türlü de aynı çalışıyor. Sadece jsonify çıktıları biraz daha güzel gösteriyor. Ben bu yazı için hazırladığım uygulamada işi biraz farklı bir noktaya taşıdım ve sanki bir api varmış gibi çalışsın istedim.
&lt;/p&gt;&lt;p&gt;&lt;a href="https://aligoren.com/flask-ile-json-cikti-almak/"&gt;Devamını Oku…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>flask</category><category>programlama</category><category>python</category><guid>https://aligoren.com/flask-ile-json-cikti-almak/</guid><pubDate>Sat, 02 Apr 2016 21:00:00 GMT</pubDate></item><item><title>Python'da Zincirleme Metodlar</title><link>https://aligoren.com/pythonda-zincirleme-metodlar/</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Zincirleme metodlar, bir sınıfa ait metodları tek seferde çağırma şeklinde çalışırlar. Burada amaç kod okunabilirliğini artırmaktır. Çalışma mantığı olarak metod kendisini döndürür ve bu sayede peşine başka bir metod eklenebilir. Çalışma şeklinden dolayı bunlara zincirleme metod yani &lt;code&gt;Chaining Methods&lt;/code&gt; deniliyor. Çalışma mantığını anladık ama biraz daha açıklamak gerekiyor. Örneğin bir &lt;code&gt;Cars&lt;/code&gt; sınıfında o sınıfa ait belirli metodlar bulunmakta. Bu metodların şöyle olduğunu düşünelim sahtece:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;A Sınıfı =&amp;gt;
    A1_Metodu =&amp;gt;
        ... işlemler
    A2_Metodu =&amp;gt;
        ... işlemler
    A3_Metodu =&amp;gt;
        ... işlemler
&lt;/pre&gt;


&lt;p&gt;Böyle bir yapıda sınıfımızı &lt;strong&gt;b&lt;/strong&gt; değişkenine ilklediğimizi ve metodları çağırdığımızı düşünelim. O zaman durum şu olurdu&lt;/p&gt;
&lt;pre class="code literal-block"&gt;b = A Sınıfı
b.A1_Metodu
b.A2_Metodu
b.A3_Metodu
&lt;/pre&gt;


&lt;p&gt;gibi tam da burada yardımcı olarak zincirleme metod deseni geliyor önümüze. Eğer bir chaining metod olsaydı yukarıdaki gibi alt alta bir tekrar yerine şöyle olacaktı:
&lt;/p&gt;&lt;p&gt;&lt;a href="https://aligoren.com/pythonda-zincirleme-metodlar/"&gt;Devamını Oku…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>programlama</category><category>python</category><guid>https://aligoren.com/pythonda-zincirleme-metodlar/</guid><pubDate>Wed, 30 Mar 2016 21:00:00 GMT</pubDate></item><item><title>Python'da Struct Kullanımı</title><link>https://aligoren.com/pythonda-struct-kullanimi/</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Evet var olmaz demeyin lütfen. Kısacası struct bir şablon olarak gelir önümüze. Bildiğimiz manada struct, farklı verileri bir araya getiriyoruz yani aslında grupluyor. Peki kullanımı nasıldı ki &lt;strong&gt;"Python'da"&lt;/strong&gt; ile başlayan bir başlık attım ki?&lt;/p&gt;
&lt;p&gt;Örneğin D dilinden örnek verecek olursak Ali Çehreli hocam çok güzel &lt;a href="http://ddili.org/ders/d/yapilar.html"&gt;açıklamış&lt;/a&gt;:
&lt;/p&gt;&lt;p&gt;&lt;a href="https://aligoren.com/pythonda-struct-kullanimi/"&gt;Devamını Oku…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>programlama</category><category>python</category><guid>https://aligoren.com/pythonda-struct-kullanimi/</guid><pubDate>Tue, 29 Mar 2016 21:00:00 GMT</pubDate></item><item><title>The Flash</title><link>https://aligoren.com/the-flash/</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;h4&gt;Diziyi İlk Defa İzleyecekler İçin En Fenasından Spoiler İçeren Kısımlar Var&lt;/h4&gt;
&lt;p&gt;Son zamanlarda kendime aşırı vakit ayırıyorum öyle ki yazdığım kod sayısını satırla anlatacak olsaydım sanırım izlediğim dizi bölümünden daha az olurdu. Bir süredir daha önceleri izlemediğim Fringe dizisi ile uğraştaydım. Tabi o diziyi izleyenler biliyordu nasıl bağımlılık yaratacağını. Bu sırada ayrıca Dr. Walter Bishop gibi bir dehayı arayacağımızı da biliyordu diziyi izleyenler.&lt;/p&gt;
&lt;p&gt;Fringe dizisini bitirdim pişmanım aslında kısa sürede bitirdiğim için örneğin Olivia Dunham'ın FBI diye o kalın ses bağırışını özledim, Walter'ın kafası güzel ve çıplak dolaşmalarını da. Neyse efenim bu özlem giderilsin diye &lt;strong&gt;walternatif&lt;/strong&gt; diziler arıyordum. Daha önceleri yani okula gelmeden önce Gebze'de sadece 15 dakika kadar gördüğüm The Flash dizisini izleme kararı aldım. Başlangıcında beni etkileyen dizileri daima izlemişimdir. Bunda da öyle oldu :)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://aligoren.com/the-flash/"&gt;Devamını Oku…&lt;/a&gt; (9 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>dizi</category><category>film</category><category>the flash</category><guid>https://aligoren.com/the-flash/</guid><pubDate>Sun, 27 Mar 2016 21:00:00 GMT</pubDate></item><item><title>Nginx: 413 Request Entity Too Large Hatası ve Çözümü</title><link>https://aligoren.com/nginx-413-request-entity-too-large-hatasi-ve-cozumu/</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Muhtemelen bu hatayı nginx'de siz de aldınız. Bugün localde çalışırken başıma gelen bir uyarı. Bu hatanın sebebi ya &lt;code&gt;client_max_body_size&lt;/code&gt; tanımlı değildir ya da tanımlı ama boyut değeri çok düşüktür.&lt;/p&gt;
&lt;p&gt;Bende bu alan tanımlı değildi onun için bu alanı tanımlatmam gerekiyordu. Ubuntu için konuşacak olursak (Diğerlerinde de aynıdır yol. Denemedim):&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo nano /etc/nginx/nginx.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;komutunu verdim öncelikle. Daha sonra ise nginx'de http bloğu en üstte olduğundan oraya ekleyeceğiz:
&lt;/p&gt;&lt;p&gt;&lt;a href="https://aligoren.com/nginx-413-request-entity-too-large-hatasi-ve-cozumu/"&gt;Devamını Oku…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>linux</category><category>nginx</category><guid>https://aligoren.com/nginx-413-request-entity-too-large-hatasi-ve-cozumu/</guid><pubDate>Sat, 26 Mar 2016 22:00:00 GMT</pubDate></item><item><title>Django RSS Feed Ekleme</title><link>https://aligoren.com/django-rss-feed-ekleme/</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Django’da RSS Feed ekleme işlemi çok basittir. Uzun uzun anlatabilir miyim diye düşündüm ancak yine de başaramam herhalde. Öncelikle yapılması gerekenleri söylemek gerekiyor sanırım.&lt;/p&gt;
&lt;p&gt;Uygulamamız içerisine feeds.py dosyasını oluşturalım ( siz isterseniz mahmut.py deyin ) Oluşturma işlemini başarıyla yaptıysanız şimdi bu dosyanın içine sınıf oluşturmalıyız. Bunun için Django’nun &lt;a href="https://docs.djangoproject.com/en/1.9/ref/contrib/syndication/"&gt;Feed Framework&lt;/a&gt;‘ünü çağırmak gerekiyor. Bir de slug yani url için de core kütüphanesinde bulunan reverse() işlevini çağıralım. &lt;/p&gt;&lt;p&gt;&lt;a href="https://aligoren.com/django-rss-feed-ekleme/"&gt;Devamını Oku…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>django</category><category>programlama</category><category>python</category><guid>https://aligoren.com/django-rss-feed-ekleme/</guid><pubDate>Sat, 27 Feb 2016 22:00:00 GMT</pubDate></item><item><title>Django Markdown Editör Kurulumu</title><link>https://aligoren.com/django-markdown-editor-kurulumu/</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Okuldaki işler harici evde de kişisel olarak python ve arkadaşlarının icatları ile ilgileniyorum. Bu süreçte django ile kendi blog sistemimi yazmaya karar verdim. Ancak editör öyle kötüydü ki (hiç yok klasik textarea :D) markdown editör aramaya koyuldum. Daha önce Laravel ile &lt;a href="https://github.com/aligoren/larablog"&gt;yazdığım&lt;/a&gt; blog sisteminde de kullandığım editör geldi aklıma.&lt;/p&gt;
&lt;p&gt;Taufan Aditya tarafından yazılan &lt;a href="https://github.com/toopay/bootstrap-markdown"&gt;bootstrap-markdown&lt;/a&gt; kullanmıştım. Neyse bu işin görsel yüzü. Ancak arkada hala çözümlenmeyi bekleyen markdown kuralları vardı. Bunun için bulabildiğim en uygun markdown eklentisi Kirill Klenov tarafından yazılan &lt;a href="https://github.com/klen/django_markdown"&gt;django_markdown&lt;/a&gt; eklentisiydi. Neyse bulduk ettik bir şekilde. Sıra kuruluma geliyor.Öncelikle editör entegrasyonunu yapalım. Şu linkten editör dosyalarını indirelim. İlgili klasöre çıkaralım. Statik dosyaların static altında olduğunu varsayarak yaptığınızı düşünelim. Ben şöyle yaptım: &lt;/p&gt;&lt;p&gt;&lt;a href="https://aligoren.com/django-markdown-editor-kurulumu/"&gt;Devamını Oku…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>django</category><category>markdown</category><category>programlama</category><category>python</category><guid>https://aligoren.com/django-markdown-editor-kurulumu/</guid><pubDate>Tue, 23 Feb 2016 22:00:00 GMT</pubDate></item><item><title>OpenSuSe PHP7 XDebug Kurulumu</title><link>https://aligoren.com/opensuse-php7-xdebug-kurulumu/</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;PHP7 çıkalı baya oluyor. XDebug geliştiriciler için hata ayıklama aracı. Gerçekten çok faydalı bir araç. Bu aracı PHP7 için OpenSuSe’a kurmaya çalışırsanız depolarında bulamıyorsunuz. Depolarda php5-xdebug bulunmakta. Fazla uzatmadan konuya gireyim can sıkıcı bir makale olmasın.&lt;/p&gt;
&lt;p&gt;XDebug kurmak için öncelikle PHP7 Devel gerekiyor. PHP7 Devel kurulumunu uçbirimden zypper yardımı ile kuralım. &lt;/p&gt;&lt;p&gt;&lt;a href="https://aligoren.com/opensuse-php7-xdebug-kurulumu/"&gt;Devamını Oku…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>linux</category><category>opensuse</category><category>php</category><category>xdebug</category><guid>https://aligoren.com/opensuse-php7-xdebug-kurulumu/</guid><pubDate>Wed, 17 Feb 2016 22:00:00 GMT</pubDate></item><item><title>OpenSUSE 42.1 LAMP Kurulumu</title><link>https://aligoren.com/opensuse-421-lamp-kurulumu/</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Bilmiyorsanız söyleyeyim LAMP, Linux, Apache, MySQL ve PHP’nin kısaltılmasıdır. Bu yazıda “biz dört kişiyiz gardaş” diye bağıran bu grubun nasıl kurulacağını anlatacağım. Sırasıyla Adımlar:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;1- Apache Kurulumu

2- MariaDB Kurulumu

3- PHP Kurulumu
&lt;/pre&gt;


&lt;p&gt;İlk sıraya Linux koymaya gerek yok biliyorsunuz :). Başlayalım o zaman.&lt;/p&gt;
&lt;h2&gt;Apache Kurulumu&lt;/h2&gt;
&lt;p&gt;Apache, çoklu platformda çalışabilen web server’dır. İçerisinde CGI, SSL ve sanal alan adlarının da desteklendiği çoğu özellik bulunmaktadır. &lt;/p&gt;&lt;p&gt;&lt;a href="https://aligoren.com/opensuse-421-lamp-kurulumu/"&gt;Devamını Oku…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>lamp</category><category>linux</category><category>opensuse</category><guid>https://aligoren.com/opensuse-421-lamp-kurulumu/</guid><pubDate>Sat, 28 Nov 2015 22:00:00 GMT</pubDate></item></channel></rss>